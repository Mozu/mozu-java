apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

archivesBaseName='mozu-api-java'
// Dynamically insert TeamCity build number if available
if (hasProperty("teamcity")) {
    version = teamcity["build.number"]
        println "TeamCity build number passed into gradle is " + version
   }
   else {
// Manually insert the version numbers here when building outside of TeamCity
    version = '2.3.4'
}

group='com.mozu'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

jar {
    manifest {
        attributes 'Implementation-Title': 'Mozu Java API', 'Implementation-Version': version
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}


repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://ng-repo.dev.kibocommerce.com:8081/repository/ng-maven-group/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
}
processResources{
    exclude 'log4j.xml'
}

dependencies {

    compile "org.apache.httpcomponents:httpcore:4.3.3"
    compile "org.apache.httpcomponents:httpclient:4.3.6"

    compile ("com.mozu:mozu-api-core:"+version) {
        exclude group: 'mysql'
        exclude group: 'xerces'
        exclude group: 'berkeleydb'
        exclude group: 'hsqldb'
        exclude group: 'tomcat'
        
        changing = true
    }

	compile ("jcs:jcs:1.3") {
        exclude group: 'mysql'
	}

    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
}

test {
    systemProperties 'property': 'value'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    
    archives sourcesJar
    archives javadocJar
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

if (hasProperty("sonatypeUsername")) {
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
     
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                  authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                snapshotRepository (url: "https://oss.sonatype.org/content/repositories/snapshots") {
                  authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                   name 'mozu-java-sdk'
                   packaging 'jar'
                   description 'Mozu Java is a SDK that enables you to create robust Java applications that integrate with the Mozu platform'
                   url 'https://github.com/Mozu/mozu-java.git'
     
                   scm {
                       url 'scm:git@github.com:Mozu/mozu-java.git'
                       connection 'scm:git@github.com:Mozu/mozu-java.git'
                       developerConnection 'scm:git@github.com:Mozu/mozu-java.git'
                   }
     
                   licenses {
                       license {
                           name 'The MIT License (MIT)'
                           url 'http://http://opensource.org/licenses/MIT'
                           distribution 'repo'
                       }
                   }
     
                   developers {
                       developer {
                           id 'bob_hewett'
                           name 'Bob Hewett'
                       }
                       developer {
                           id 'john_gatti'
                           name 'John Gatti'
                       }
                       developer {
                           id 'sanjay_mandadi'
                           name 'Sanjay Mandadi'
                       }
                       
                   }
               }
            }
        }
    }
}
