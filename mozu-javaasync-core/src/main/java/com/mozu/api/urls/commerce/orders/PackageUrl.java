/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.orders;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;
import org.joda.time.DateTime;

public class PackageUrl
{

	/**
	 * Get Resource Url for GetAvailablePackageFulfillmentActions
	 * @param orderId Unique identifier of the order.
	 * @param packageId Unique identifier of the package for which to retrieve the label.
	 * @return   String Resource Url
	 */
	public static MozuUrl getAvailablePackageFulfillmentActionsUrl(String orderId, String packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages/{packageId}/actions");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetPackageLabel
	 * @param orderId Unique identifier of the order.
	 * @param packageId Unique identifier of the package for which to retrieve the label.
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageLabelUrl(String orderId, String packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages/{packageId}/label");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetPackage
	 * @param orderId Unique identifier of the order.
	 * @param packageId Unique identifier of the package for which to retrieve the label.
	 * @param responseFields Use this field to include those fields which are not included by default.
	 * @return   String Resource Url
	 */
	public static MozuUrl getPackageUrl(String orderId, String packageId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages/{packageId}?responseFields={responseFields}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("packageId", packageId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for CreatePackage
	 * @param orderId Unique identifier of the order.
	 * @param responseFields Use this field to include those fields which are not included by default.
	 * @return   String Resource Url
	 */
	public static MozuUrl createPackageUrl(String orderId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages?responseFields={responseFields}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdatePackage
	 * @param orderId Unique identifier of the order.
	 * @param packageId Unique identifier of the package for which to retrieve the label.
	 * @param responseFields Use this field to include those fields which are not included by default.
	 * @return   String Resource Url
	 */
	public static MozuUrl updatePackageUrl(String orderId, String packageId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages/{packageId}?responseFields={responseFields}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("packageId", packageId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeletePackage
	 * @param orderId Unique identifier of the order.
	 * @param packageId Unique identifier of the package for which to retrieve the label.
	 * @return   String Resource Url
	 */
	public static MozuUrl deletePackageUrl(String orderId, String packageId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/orders/{orderId}/packages/{packageId}");
		formatter.formatUrl("orderId", orderId);
		formatter.formatUrl("packageId", packageId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

