/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.catalog.admin;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;
import org.joda.time.DateTime;

public class FacetUrl
{

	/**
	 * Get Resource Url for GetFacet
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @param responseFields 
	 * @param validate Validates that the product category associated with a facet is active. System-supplied and read only.
	 * @return   String Resource Url
	 */
	public static MozuUrl getFacetUrl(Integer facetId, String responseFields, Boolean validate)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/facets/{facetId}?validate={validate}&responseFields={responseFields}");
		formatter.formatUrl("facetId", facetId);
		formatter.formatUrl("responseFields", responseFields);
		formatter.formatUrl("validate", validate);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetFacetCategoryList
	 * @param categoryId Unique identifier of the category associated with the facets to retrieve.
	 * @param includeAvailable If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.
	 * @param responseFields 
	 * @param validate Validates that the product category associated with a facet is active. System-supplied and read only.
	 * @return   String Resource Url
	 */
	public static MozuUrl getFacetCategoryListUrl(Integer categoryId, Boolean includeAvailable, String responseFields, Boolean validate)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/facets/category/{categoryId}?includeAvailable={includeAvailable}&validate={validate}&responseFields={responseFields}");
		formatter.formatUrl("categoryId", categoryId);
		formatter.formatUrl("includeAvailable", includeAvailable);
		formatter.formatUrl("responseFields", responseFields);
		formatter.formatUrl("validate", validate);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddFacet
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl addFacetUrl(String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/facets/?responseFields={responseFields}");
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateFacet
	 * @param facetId Unique identifier of the facet to modify.
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateFacetUrl(Integer facetId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/facets/{facetId}?responseFields={responseFields}");
		formatter.formatUrl("facetId", facetId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteFacetById
	 * @param facetId Unique identifier of the facet to delete.
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteFacetByIdUrl(Integer facetId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/catalog/admin/facets/{facetId}");
		formatter.formatUrl("facetId", facetId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

