/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.checkouts;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;
import org.joda.time.DateTime;

public class OrderItemUrl
{

	/**
	 * Get Resource Url for GetItem
	 * @param checkoutId 
	 * @param itemId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl getItemUrl(String checkoutId, String itemId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetItemViaLineId
	 * @param checkoutId 
	 * @param lineId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl getItemViaLineIdUrl(String checkoutId, Integer lineId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{lineId}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("lineId", lineId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetItems
	 * @param checkoutId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl getItemsUrl(String checkoutId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items?draft={draft}&responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateItemDestination
	 * @param checkoutId 
	 * @param destinationId 
	 * @param itemId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateItemDestinationUrl(String checkoutId, String destinationId, String itemId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/destination/{destinationId}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("destinationId", destinationId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for SplitItem
	 * @param checkoutId 
	 * @param itemId 
	 * @param quantity 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl splitItemUrl(String checkoutId, String itemId, Integer quantity, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/split?quantity={quantity}&responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("quantity", quantity);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for BulkUpdateItemDestinations
	 * @param checkoutId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl bulkUpdateItemDestinationsUrl(String checkoutId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/destinations?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for CreateItem
	 * @param checkoutId 
	 * @param responseFields 
	 * @param skipInventoryCheck 
	 * @return   String Resource Url
	 */
	public static MozuUrl createItemUrl(String checkoutId, String responseFields, Boolean skipInventoryCheck)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items?skipInventoryCheck={skipInventoryCheck}&responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("responseFields", responseFields);
		formatter.formatUrl("skipInventoryCheck", skipInventoryCheck);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateItemDuty
	 * @param checkoutId 
	 * @param dutyAmount 
	 * @param itemId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateItemDutyUrl(String checkoutId, Double dutyAmount, String itemId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/dutyAmount/{dutyAmount}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("dutyAmount", dutyAmount);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateItemFulfillment
	 * @param checkoutId 
	 * @param itemId 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateItemFulfillmentUrl(String checkoutId, String itemId, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/fulfillment?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateItemProductPrice
	 * @param checkoutId 
	 * @param itemId 
	 * @param price 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateItemProductPriceUrl(String checkoutId, String itemId, Double price, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/price/{price}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("price", price);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateQuantity
	 * @param checkoutId 
	 * @param itemId 
	 * @param quantity 
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateQuantityUrl(String checkoutId, String itemId, Integer quantity, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}/quantity/{quantity}?responseFields={responseFields}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		formatter.formatUrl("quantity", quantity);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteItem
	 * @param checkoutId 
	 * @param itemId 
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteItemUrl(String checkoutId, String itemId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/checkouts/{checkoutId}/items/{itemId}");
		formatter.formatUrl("checkoutId", checkoutId);
		formatter.formatUrl("itemId", itemId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

