/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.storefront;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class CampaignResultResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CampaignResultResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CampaignResult campaignResult = campaignresult.getCampaign( campaignId);
	 * </code></pre></p>
	 * @param campaignId 
	 * @return com.mozu.api.contracts.productruntime.CampaignResult
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public com.mozu.api.contracts.productruntime.CampaignResult getCampaign(String campaignId) throws Exception
	{
		return getCampaign( campaignId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CountDownLatch latch = campaignresult.getCampaign( campaignId, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param campaignId 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productruntime.CampaignResult
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public CountDownLatch getCampaignAsync(String campaignId, AsyncCallback<com.mozu.api.contracts.productruntime.CampaignResult> callback) throws Exception
	{
		return getCampaignAsync( campaignId,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CampaignResult campaignResult = campaignresult.getCampaign( campaignId,  responseFields);
	 * </code></pre></p>
	 * @param campaignId 
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productruntime.CampaignResult
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public com.mozu.api.contracts.productruntime.CampaignResult getCampaign(String campaignId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productruntime.CampaignResult> client = com.mozu.api.clients.commerce.catalog.storefront.CampaignResultClient.getCampaignClient( campaignId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CountDownLatch latch = campaignresult.getCampaign( campaignId,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param campaignId 
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productruntime.CampaignResult
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public CountDownLatch getCampaignAsync(String campaignId, String responseFields, AsyncCallback<com.mozu.api.contracts.productruntime.CampaignResult> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productruntime.CampaignResult> client = com.mozu.api.clients.commerce.catalog.storefront.CampaignResultClient.getCampaignClient( campaignId,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CampaignResult campaignResult = campaignresult.getCampaigns();
	 * </code></pre></p>
	 * @return List<com.mozu.api.contracts.productruntime.CampaignResult>
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public List<com.mozu.api.contracts.productruntime.CampaignResult> getCampaigns() throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productruntime.CampaignResult>> client = com.mozu.api.clients.commerce.catalog.storefront.CampaignResultClient.getCampaignsClient();
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CampaignResult campaignresult = new CampaignResult();
	 *	CountDownLatch latch = campaignresult.getCampaigns( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return List<com.mozu.api.contracts.productruntime.CampaignResult>
	 * @see com.mozu.api.contracts.productruntime.CampaignResult
	 */
	public CountDownLatch getCampaignsAsync( AsyncCallback<List<com.mozu.api.contracts.productruntime.CampaignResult>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productruntime.CampaignResult>> client = com.mozu.api.clients.commerce.catalog.storefront.CampaignResultClient.getCampaignsClient();
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

}



