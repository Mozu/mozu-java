/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.settings;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class InventorySettingsResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public InventorySettingsResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.getInventorySettings();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings getInventorySettings() throws Exception
	{
		return getInventorySettings( null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.getInventorySettings( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch getInventorySettingsAsync( AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		return getInventorySettingsAsync( null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.getInventorySettings( responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings getInventorySettings(String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.getInventorySettingsClient( responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.getInventorySettings( responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch getInventorySettingsAsync(String responseFields, AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.getInventorySettingsClient( responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.createtInventorySettings( inventorySettings);
	 * </code></pre></p>
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings createtInventorySettings(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings) throws Exception
	{
		return createtInventorySettings( inventorySettings,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.createtInventorySettings( inventorySettings, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch createtInventorySettingsAsync(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		return createtInventorySettingsAsync( inventorySettings,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.createtInventorySettings( inventorySettings,  responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings createtInventorySettings(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.createtInventorySettingsClient( inventorySettings,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.createtInventorySettings( inventorySettings,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch createtInventorySettingsAsync(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, String responseFields, AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.createtInventorySettingsClient( inventorySettings,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.updatetInventorySettings( inventorySettings);
	 * </code></pre></p>
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings updatetInventorySettings(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings) throws Exception
	{
		return updatetInventorySettings( inventorySettings,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.updatetInventorySettings( inventorySettings, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch updatetInventorySettingsAsync(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		return updatetInventorySettingsAsync( inventorySettings,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	InventorySettings inventorySettings = inventorysettings.updatetInventorySettings( inventorySettings,  responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public com.mozu.api.contracts.sitesettings.general.general.InventorySettings updatetInventorySettings(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.updatetInventorySettingsClient( inventorySettings,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	InventorySettings inventorysettings = new InventorySettings();
	 *	CountDownLatch latch = inventorysettings.updatetInventorySettings( inventorySettings,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @param inventorySettings 
	 * @return com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 * @see com.mozu.api.contracts.sitesettings.general.general.InventorySettings
	 */
	public CountDownLatch updatetInventorySettingsAsync(com.mozu.api.contracts.sitesettings.general.general.InventorySettings inventorySettings, String responseFields, AsyncCallback<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.general.general.InventorySettings> client = com.mozu.api.clients.commerce.settings.InventorySettingsClient.updatetInventorySettingsClient( inventorySettings,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

}



