/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class CoreFieldResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CoreFieldResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreBoostFields();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreBoostFields() throws Exception
	{
		return getCoreBoostFields( null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreBoostFields( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreBoostFieldsAsync( AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		return getCoreBoostFieldsAsync( null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreBoostFields( responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreBoostFields(String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreBoostFieldsClient( responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreBoostFields( responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreBoostFieldsAsync(String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreBoostFieldsClient( responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreCategorySearchFields();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreCategorySearchFields() throws Exception
	{
		return getCoreCategorySearchFields( null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreCategorySearchFields( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreCategorySearchFieldsAsync( AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		return getCoreCategorySearchFieldsAsync( null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreCategorySearchFields( responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreCategorySearchFields(String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreCategorySearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreCategorySearchFields( responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreCategorySearchFieldsAsync(String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreCategorySearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreProductSearchFields();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreProductSearchFields() throws Exception
	{
		return getCoreProductSearchFields( null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreProductSearchFields( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreProductSearchFieldsAsync( AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		return getCoreProductSearchFieldsAsync( null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreProductSearchFields( responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreProductSearchFields(String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreProductSearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreProductSearchFields( responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreProductSearchFieldsAsync(String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreProductSearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreSearchFields();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreSearchFields() throws Exception
	{
		return getCoreSearchFields( null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreSearchFields( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreSearchFieldsAsync( AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		return getCoreSearchFieldsAsync( null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CoreFieldCollection coreFieldCollection = corefield.getCoreSearchFields( responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public com.mozu.api.contracts.productadmin.CoreFieldCollection getCoreSearchFields(String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreSearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CoreField corefield = new CoreField();
	 *	CountDownLatch latch = corefield.getCoreSearchFields( responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param responseFields 
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.CoreFieldCollection
	 * @see com.mozu.api.contracts.productadmin.CoreFieldCollection
	 */
	public CountDownLatch getCoreSearchFieldsAsync(String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.CoreFieldCollection> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CoreFieldCollection> client = com.mozu.api.clients.commerce.catalog.admin.CoreFieldClient.getCoreSearchFieldsClient( responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

}



