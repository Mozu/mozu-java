/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin.products;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

import com.mozu.api.DataViewMode;
/** <summary>
 * Use the Properties resource to configure a property attribute for an individual product associated with a product type that uses the property attribute, as well as set property values for the product.
 * </summary>
 */
public class ProductPropertyResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;

	private DataViewMode _dataViewMode;

	public ProductPropertyResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
		_dataViewMode = DataViewMode.Live;
	}

	public ProductPropertyResource(ApiContext apiContext, DataViewMode dataViewMode) 
	{
		_apiContext = apiContext;
		_dataViewMode = dataViewMode;
	}
		
	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.getProperties( productCode);
	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @return List<com.mozu.api.contracts.productadmin.ProductProperty>
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public List<com.mozu.api.contracts.productadmin.ProductProperty> getProperties(String productCode) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductProperty>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertiesClient(_dataViewMode,  productCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getProperties( productCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param  callback callback handler for asynchronous operations
	 * @return List<com.mozu.api.contracts.productadmin.ProductProperty>
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch getPropertiesAsync(String productCode, AsyncCallback<List<com.mozu.api.contracts.productadmin.ProductProperty>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductProperty>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertiesClient(_dataViewMode,  productCode);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.getPropertyValueLocalizedContents( productCode,  attributeFQN,  value);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @return List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> getPropertyValueLocalizedContents(String productCode, String attributeFQN, String value) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyValueLocalizedContentsClient(_dataViewMode,  productCode,  attributeFQN,  value);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getPropertyValueLocalizedContents( productCode,  attributeFQN,  value, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @return List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch getPropertyValueLocalizedContentsAsync(String productCode, String attributeFQN, String value, AsyncCallback<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyValueLocalizedContentsClient(_dataViewMode,  productCode,  attributeFQN,  value);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.getPropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent getPropertyValueLocalizedContent(String productCode, String attributeFQN, String value, String localeCode) throws Exception
	{
		return getPropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getPropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch getPropertyValueLocalizedContentAsync(String productCode, String attributeFQN, String value, String localeCode, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		return getPropertyValueLocalizedContentAsync( productCode,  attributeFQN,  value,  localeCode,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.getPropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode,  responseFields);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent getPropertyValueLocalizedContent(String productCode, String attributeFQN, String value, String localeCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyValueLocalizedContentClient(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getPropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch getPropertyValueLocalizedContentAsync(String productCode, String attributeFQN, String value, String localeCode, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyValueLocalizedContentClient(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.getProperty( productCode,  attributeFQN);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty getProperty(String productCode, String attributeFQN) throws Exception
	{
		return getProperty( productCode,  attributeFQN,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getProperty( productCode,  attributeFQN, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch getPropertyAsync(String productCode, String attributeFQN, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		return getPropertyAsync( productCode,  attributeFQN,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.getProperty( productCode,  attributeFQN,  responseFields);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty getProperty(String productCode, String attributeFQN, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyClient(_dataViewMode,  productCode,  attributeFQN,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.getProperty( productCode,  attributeFQN,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param  callback callback handler for asynchronous operations
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch getPropertyAsync(String productCode, String attributeFQN, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.getPropertyClient(_dataViewMode,  productCode,  attributeFQN,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.addPropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent addPropertyValueLocalizedContent(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value) throws Exception
	{
		return addPropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.addPropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch addPropertyValueLocalizedContentAsync(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		return addPropertyValueLocalizedContentAsync( localizedContent,  productCode,  attributeFQN,  value,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.addPropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  responseFields);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent addPropertyValueLocalizedContent(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.addPropertyValueLocalizedContentClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.addPropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch addPropertyValueLocalizedContentAsync(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.addPropertyValueLocalizedContentClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.addProperty( productProperty,  productCode);
	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty addProperty(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode) throws Exception
	{
		return addProperty( productProperty,  productCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.addProperty( productProperty,  productCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param  callback callback handler for asynchronous operations
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch addPropertyAsync(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		return addPropertyAsync( productProperty,  productCode,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.addProperty( productProperty,  productCode,  responseFields);
	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty addProperty(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.addPropertyClient(_dataViewMode,  productProperty,  productCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.addProperty( productProperty,  productCode,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param  callback callback handler for asynchronous operations
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch addPropertyAsync(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.addPropertyClient(_dataViewMode,  productProperty,  productCode,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.updatePropertyValueLocalizedContents( localizedContent,  productCode,  attributeFQN,  value);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> updatePropertyValueLocalizedContents(List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> localizedContent, String productCode, String attributeFQN, String value) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyValueLocalizedContentsClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.updatePropertyValueLocalizedContents( localizedContent,  productCode,  attributeFQN,  value, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch updatePropertyValueLocalizedContentsAsync(List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> localizedContent, String productCode, String attributeFQN, String value, AsyncCallback<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent>> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyValueLocalizedContentsClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.updatePropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  localeCode);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent updatePropertyValueLocalizedContent(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String localeCode) throws Exception
	{
		return updatePropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  localeCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.updatePropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  localeCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch updatePropertyValueLocalizedContentAsync(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String localeCode, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		return updatePropertyValueLocalizedContentAsync( localizedContent,  productCode,  attributeFQN,  value,  localeCode,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductPropertyValueLocalizedContent productPropertyValueLocalizedContent = productproperty.updatePropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent updatePropertyValueLocalizedContent(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String localeCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyValueLocalizedContentClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.updatePropertyValueLocalizedContent( localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param value The value string to create.
	 * @param  callback callback handler for asynchronous operations
	 * @param localizedContent Content of the product property value in the language defined for the locale code.
	 * @return com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent
	 */
	public CountDownLatch updatePropertyValueLocalizedContentAsync(com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent localizedContent, String productCode, String attributeFQN, String value, String localeCode, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductPropertyValueLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyValueLocalizedContentClient(_dataViewMode,  localizedContent,  productCode,  attributeFQN,  value,  localeCode,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.updateProperty( productProperty,  productCode,  attributeFQN);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty updateProperty(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String attributeFQN) throws Exception
	{
		return updateProperty( productProperty,  productCode,  attributeFQN,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.updateProperty( productProperty,  productCode,  attributeFQN, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param  callback callback handler for asynchronous operations
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch updatePropertyAsync(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String attributeFQN, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		return updatePropertyAsync( productProperty,  productCode,  attributeFQN,  null, callback);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	ProductProperty productProperty = productproperty.updateProperty( productProperty,  productCode,  attributeFQN,  responseFields);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public com.mozu.api.contracts.productadmin.ProductProperty updateProperty(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String attributeFQN, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyClient(_dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	CountDownLatch latch = productproperty.updateProperty( productProperty,  productCode,  attributeFQN,  responseFields, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param  callback callback handler for asynchronous operations
	 * @param productProperty Details of a property defined for a product.
	 * @return com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 * @see com.mozu.api.contracts.productadmin.ProductProperty
	 */
	public CountDownLatch updatePropertyAsync(com.mozu.api.contracts.productadmin.ProductProperty productProperty, String productCode, String attributeFQN, String responseFields, AsyncCallback<com.mozu.api.contracts.productadmin.ProductProperty> callback) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.ProductProperty> client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.updatePropertyClient(_dataViewMode,  productProperty,  productCode,  attributeFQN,  responseFields);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	productproperty.deleteProperty( productCode,  attributeFQN);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @return 
	 */
	public void deleteProperty(String productCode, String attributeFQN) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.deletePropertyClient(_dataViewMode,  productCode,  attributeFQN);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	ProductProperty productproperty = new ProductProperty();
	 *	productproperty.deletePropertyValueLocalizedContent( productCode,  attributeFQN,  value,  localeCode);
	 * </code></pre></p>
	 * @param attributeFQN Fully qualified name for an attribute.
	 * @param localeCode The two character country code that sets the locale, such as US for United States. Sites, tenants, and catalogs use locale codes for localizing content, such as translated product text per supported country.
	 * @param productCode The unique, user-defined product code of a product, used throughout  to reference and associate to a product.
	 * @param value The value string to create.
	 * @return 
	 */
	public void deletePropertyValueLocalizedContent(String productCode, String attributeFQN, String value, String localeCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.products.ProductPropertyClient.deletePropertyValueLocalizedContentClient(_dataViewMode,  productCode,  attributeFQN,  value,  localeCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

}



