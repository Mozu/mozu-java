/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.shipping.global;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class CarrierConfigurationResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CarrierConfigurationResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	CarrierConfiguration carrierconfiguration = new CarrierConfiguration();
	 *	ServiceType serviceType = carrierconfiguration.getCarrierServiceTypes( carrierId,  localeCode);
	 * </code></pre></p>
	 * @param carrierId 
	 * @param localeCode 
	 * @return List<com.mozu.api.contracts.shippingadmin.ServiceType>
	 * @see com.mozu.api.contracts.shippingadmin.ServiceType
	 */
	public List<com.mozu.api.contracts.shippingadmin.ServiceType> getCarrierServiceTypes(String carrierId, String localeCode) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.shippingadmin.ServiceType>> client = com.mozu.api.clients.commerce.shipping.global.CarrierConfigurationClient.getCarrierServiceTypesClient( carrierId,  localeCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CarrierConfiguration carrierconfiguration = new CarrierConfiguration();
	 *	CountDownLatch latch = carrierconfiguration.getCarrierServiceTypes( carrierId,  localeCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param carrierId 
	 * @param localeCode 
	 * @param  callback callback handler for asynchronous operations
	 * @return List<com.mozu.api.contracts.shippingadmin.ServiceType>
	 * @see com.mozu.api.contracts.shippingadmin.ServiceType
	 */
	public CountDownLatch getCarrierServiceTypesAsync(String carrierId, String localeCode, AsyncCallback<List<com.mozu.api.contracts.shippingadmin.ServiceType>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.shippingadmin.ServiceType>> client = com.mozu.api.clients.commerce.shipping.global.CarrierConfigurationClient.getCarrierServiceTypesClient( carrierId,  localeCode);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CarrierConfiguration carrierconfiguration = new CarrierConfiguration();
	 *	ServiceType serviceType = carrierconfiguration.getAllServiceTypes( localeCode);
	 * </code></pre></p>
	 * @param localeCode 
	 * @return List<com.mozu.api.contracts.shippingadmin.ServiceType>
	 * @see com.mozu.api.contracts.shippingadmin.ServiceType
	 */
	public List<com.mozu.api.contracts.shippingadmin.ServiceType> getAllServiceTypes(String localeCode) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.shippingadmin.ServiceType>> client = com.mozu.api.clients.commerce.shipping.global.CarrierConfigurationClient.getAllServiceTypesClient( localeCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CarrierConfiguration carrierconfiguration = new CarrierConfiguration();
	 *	CountDownLatch latch = carrierconfiguration.getAllServiceTypes( localeCode, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param localeCode 
	 * @param  callback callback handler for asynchronous operations
	 * @return List<com.mozu.api.contracts.shippingadmin.ServiceType>
	 * @see com.mozu.api.contracts.shippingadmin.ServiceType
	 */
	public CountDownLatch getAllServiceTypesAsync(String localeCode, AsyncCallback<List<com.mozu.api.contracts.shippingadmin.ServiceType>> callback) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.shippingadmin.ServiceType>> client = com.mozu.api.clients.commerce.shipping.global.CarrierConfigurationClient.getAllServiceTypesClient( localeCode);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

}



