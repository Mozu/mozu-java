/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.platform;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class TenantExtensionsResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public TenantExtensionsResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	TenantExtensions tenantextensions = new TenantExtensions();
	 *	Stream stream = tenantextensions.getExtensions();
	 * </code></pre></p>
	 * @return Stream
	 * @see Stream
	 */
	public java.io.InputStream getExtensions() throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.TenantExtensionsClient.getExtensionsClient();
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	TenantExtensions tenantextensions = new TenantExtensions();
	 *	CountDownLatch latch = tenantextensions.getExtensions( callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @return Stream
	 * @see Stream
	 */
	public CountDownLatch getExtensionsAsync( AsyncCallback<java.io.InputStream> callback) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.TenantExtensionsClient.getExtensionsClient();
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

	/**
	 * 
	 * <p><pre><code>
	 *	TenantExtensions tenantextensions = new TenantExtensions();
	 *	Stream stream = tenantextensions.updateExtensions( extensions);
	 * </code></pre></p>
	 * @param extensions 
	 * @return Stream
	 * @see Stream
	 * @see com.mozu.api.contracts.installedapplications.TenantExtensions
	 */
	public java.io.InputStream updateExtensions(com.mozu.api.contracts.installedapplications.TenantExtensions extensions) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.TenantExtensionsClient.updateExtensionsClient( extensions);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	TenantExtensions tenantextensions = new TenantExtensions();
	 *	CountDownLatch latch = tenantextensions.updateExtensions( extensions, callback );
	 *	latch.await()	 * </code></pre></p>
	 * @param  callback callback handler for asynchronous operations
	 * @param extensions 
	 * @return Stream
	 * @see Stream
	 * @see com.mozu.api.contracts.installedapplications.TenantExtensions
	 */
	public CountDownLatch updateExtensionsAsync(com.mozu.api.contracts.installedapplications.TenantExtensions extensions, AsyncCallback<java.io.InputStream> callback) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.TenantExtensionsClient.updateExtensionsClient( extensions);
		client.setContext(_apiContext);
		return client.executeRequest(callback);

	}

}



