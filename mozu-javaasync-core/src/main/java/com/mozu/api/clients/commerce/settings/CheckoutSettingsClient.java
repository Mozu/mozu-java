/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.settings;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Checkout Settings resource to specify the site-wide settings that define checkout and order processing behavior. This resource includes subresources for payment settings, customer checkout settings, and order processing settings.
 * </summary>
 */
public class CheckoutSettingsClient {
	
	/**
	 * Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings> mozuClient=GetCheckoutSettingsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CheckoutSettings checkoutSettings = client.Result();
	 * </code></pre></p>
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.CheckoutSettings>
	 * @see com.mozu.api.contracts.sitesettings.order.CheckoutSettings
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings> getCheckoutSettingsClient() throws Exception
	{
		return getCheckoutSettingsClient( null);
	}

	/**
	 * Retrieves all checkout settings defined for the site including payment settings (payment gateway ID and credentials), shopper checkout settings (login requirement or guest mode and custom attributes), and order processing settings (when payment is authorized and captured plus any custom attributes).
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings> mozuClient=GetCheckoutSettingsClient( responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CheckoutSettings checkoutSettings = client.Result();
	 * </code></pre></p>
	 * @param responseFields Use this field to include those fields which are not included by default.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.sitesettings.order.CheckoutSettings>
	 * @see com.mozu.api.contracts.sitesettings.order.CheckoutSettings
	 */
	public static MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings> getCheckoutSettingsClient(String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.settings.CheckoutSettingsUrl.getCheckoutSettingsUrl(responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.sitesettings.order.CheckoutSettings.class;
		MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings> mozuClient = (MozuClient<com.mozu.api.contracts.sitesettings.order.CheckoutSettings>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



