/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.quotes;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Quote Items are the individual products that are added to a particular quote, which serves as the wishlists of the B2B feature.Like the quotes themselves, the quote items APIs are a work-in-progress that will be enhanced with future releases. Use caution when interacting with these APIs, as their current models may change and break backwards compatibility as functionality is added.
 * </summary>
 */
public class OrderItemClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem> mozuClient=GetQuoteItemClient( quoteId,  quoteItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderItem orderItem = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote that the item is included within.
	 * @param quoteItemId A unique identifier for the item included within a quote.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderItem>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem> getQuoteItemClient(String quoteId, String quoteItemId) throws Exception
	{
		return getQuoteItemClient( quoteId,  quoteItemId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem> mozuClient=GetQuoteItemClient( quoteId,  quoteItemId,  draft,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderItem orderItem = client.Result();
	 * </code></pre></p>
	 * @param draft 
	 * @param quoteId A unique identifier for the quote that the item is included within.
	 * @param quoteItemId A unique identifier for the item included within a quote.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderItem>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem> getQuoteItemClient(String quoteId, String quoteItemId, Boolean draft, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.getQuoteItemUrl(draft, quoteId, quoteItemId, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderItem>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient=GetQuoteItemsClient( quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteItemCollection quoteItemCollection = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote that the items are included within.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> getQuoteItemsClient(String quoteId) throws Exception
	{
		return getQuoteItemsClient( quoteId,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient=GetQuoteItemsClient( quoteId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteItemCollection quoteItemCollection = client.Result();
	 * </code></pre></p>
	 * @param filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
	 * @param pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
	 * @param quoteId A unique identifier for the quote that the items are included within.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> getQuoteItemsClient(String quoteId, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.getQuoteItemsUrl(filter, pageSize, quoteId, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient=GetQuoteItemsByQuoteNameClient( customerAccountId,  quoteName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteItemCollection quoteItemCollection = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	 * @param quoteName The unique name of the quote that items are being retrieved for.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> getQuoteItemsByQuoteNameClient(Integer customerAccountId, String quoteName) throws Exception
	{
		return getQuoteItemsByQuoteNameClient( customerAccountId,  quoteName,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient=GetQuoteItemsByQuoteNameClient( customerAccountId,  quoteName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteItemCollection quoteItemCollection = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	 * @param filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
	 * @param pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
	 * @param quoteName The unique name of the quote that items are being retrieved for.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> getQuoteItemsByQuoteNameClient(Integer customerAccountId, String quoteName, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.getQuoteItemsByQuoteNameUrl(customerAccountId, filter, pageSize, quoteName, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteItemCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=AddItemToQuoteClient( quoteItem,  quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId The unique identifier for the quote that an item is being added to.
	 * @param quoteItem A unique identifier for the item being added to a quote.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> addItemToQuoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderItem quoteItem, String quoteId) throws Exception
	{
		return addItemToQuoteClient( quoteItem,  quoteId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=AddItemToQuoteClient( quoteItem,  quoteId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId The unique identifier for the quote that an item is being added to.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param updateMode 
	 * @param quoteItem A unique identifier for the item being added to a quote.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> addItemToQuoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderItem quoteItem, String quoteId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.addItemToQuoteUrl(quoteId, responseFields, updateMode);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(quoteItem);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemFulfillmentClient( quoteItem,  quoteId,  quoteItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param quoteItemId 
	 * @param quoteItem 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemFulfillmentClient(com.mozu.api.contracts.commerceruntime.orders.OrderItem quoteItem, String quoteId, String quoteItemId) throws Exception
	{
		return updateItemFulfillmentClient( quoteItem,  quoteId,  quoteItemId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemFulfillmentClient( quoteItem,  quoteId,  quoteItemId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param quoteItemId 
	 * @param responseFields 
	 * @param updateMode 
	 * @param quoteItem 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemFulfillmentClient(com.mozu.api.contracts.commerceruntime.orders.OrderItem quoteItem, String quoteId, String quoteItemId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.updateItemFulfillmentUrl(quoteId, quoteItemId, responseFields, updateMode);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(quoteItem);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemProductPriceClient( quoteId,  quoteItemId,  price);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param price 
	 * @param quoteId 
	 * @param quoteItemId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemProductPriceClient(String quoteId, String quoteItemId, Double price) throws Exception
	{
		return updateItemProductPriceClient( quoteId,  quoteItemId,  price,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemProductPriceClient( quoteId,  quoteItemId,  price,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param price 
	 * @param quoteId 
	 * @param quoteItemId 
	 * @param responseFields 
	 * @param updateMode 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemProductPriceClient(String quoteId, String quoteItemId, Double price, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.updateItemProductPriceUrl(price, quoteId, quoteItemId, responseFields, updateMode);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemQuantityClient( quoteId,  quoteItemId,  quantity);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quantity 
	 * @param quoteId 
	 * @param quoteItemId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemQuantityClient(String quoteId, String quoteItemId, Integer quantity) throws Exception
	{
		return updateItemQuantityClient( quoteId,  quoteItemId,  quantity,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateItemQuantityClient( quoteId,  quoteItemId,  quantity,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quantity 
	 * @param quoteId 
	 * @param quoteItemId 
	 * @param responseFields 
	 * @param updateMode 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateItemQuantityClient(String quoteId, String quoteItemId, Integer quantity, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.updateItemQuantityUrl(quantity, quoteId, quoteItemId, responseFields, updateMode);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteQuoteItemClient( quoteId,  quoteItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote tha the item being deleted belongs to.
	 * @param quoteItemId A unique identifier for an item included in the quote.
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteQuoteItemClient(String quoteId, String quoteItemId) throws Exception
	{
		return deleteQuoteItemClient( quoteId,  quoteItemId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteQuoteItemClient( quoteId,  quoteItemId,  updateMode);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote tha the item being deleted belongs to.
	 * @param quoteItemId A unique identifier for an item included in the quote.
	 * @param updateMode 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteQuoteItemClient(String quoteId, String quoteItemId, String updateMode) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.quotes.OrderItemUrl.deleteQuoteItemUrl(quoteId, quoteItemId, updateMode);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



