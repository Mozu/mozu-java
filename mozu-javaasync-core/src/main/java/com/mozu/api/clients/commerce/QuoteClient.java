/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Quotes support the eCommerce B2B feature by providing functionality similar to that of standard wishlists. However, comments can be added to quotes to provide clearer information to other users accessing the quote through the shared B2B account. These basic APIs provide the ability to create new quotes, update them, and retrieve their information.These APIs are currently a work-in-progress and will be enhanced in the future as more functionality such as setting fixed prices, setting expiration, etc. is released. The current models may change and break backwards compatibility, so use caution if interacting with these APIs for now.
 * </summary>
 */
public class QuoteClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection> mozuClient=GetQuotesClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteCollection quoteCollection = client.Result();
	 * </code></pre></p>
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection> getQuotesClient() throws Exception
	{
		return getQuotesClient( null,  null,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection> mozuClient=GetQuotesClient( startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * QuoteCollection quoteCollection = client.Result();
	 * </code></pre></p>
	 * @param filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
	 * @param pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
	 * @param q A list of order search terms (not phrases) to use in the query when searching across order number and the name or email of the billing contact. When entering, separate multiple search terms with a space character.
	 * @param qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection> getQuotesClient(Integer startIndex, Integer pageSize, String sortBy, String filter, String q, Integer qLimit, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.getQuotesUrl(filter, pageSize, q, qLimit, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.QuoteCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>> mozuClient=GetAvailableShippingMethodsClient( quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ShippingRate shippingRate = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>>
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>> getAvailableShippingMethodsClient(String quoteId) throws Exception
	{
		return getAvailableShippingMethodsClient( quoteId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>> mozuClient=GetAvailableShippingMethodsClient( quoteId,  draft);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ShippingRate shippingRate = client.Result();
	 * </code></pre></p>
	 * @param draft 
	 * @param quoteId 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>>
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>> getAvailableShippingMethodsClient(String quoteId, Boolean draft) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.getAvailableShippingMethodsUrl(draft, quoteId);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>> mozuClient = (MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.ShippingRate>>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=GetQuoteClient( quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> getQuoteClient(String quoteId) throws Exception
	{
		return getQuoteClient( quoteId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=GetQuoteClient( quoteId,  draft,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param draft 
	 * @param quoteId A unique identifier for the quote.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> getQuoteClient(String quoteId, Boolean draft, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.getQuoteUrl(draft, quoteId, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=GetQuoteByNameClient( customerAccountId,  quoteName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	 * @param quoteName A unique name for the quote.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> getQuoteByNameClient(Integer customerAccountId, String quoteName) throws Exception
	{
		return getQuoteByNameClient( customerAccountId,  quoteName,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=GetQuoteByNameClient( customerAccountId,  quoteName,  draft,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	 * @param draft 
	 * @param quoteName A unique name for the quote.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> getQuoteByNameClient(Integer customerAccountId, String quoteName, Boolean draft, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.getQuoteByNameUrl(customerAccountId, draft, quoteName, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CreateQuoteClient( quote);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quote The quote being created.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> createQuoteClient(com.mozu.api.contracts.commerceruntime.quotes.Quote quote) throws Exception
	{
		return createQuoteClient( quote,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CreateQuoteClient( quote,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param quote The quote being created.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> createQuoteClient(com.mozu.api.contracts.commerceruntime.quotes.Quote quote, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.createQuoteUrl(responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(quote);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateQuoteAdjustmentsClient( adjustments,  quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param adjustments 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteAdjustment
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateQuoteAdjustmentsClient(com.mozu.api.contracts.commerceruntime.quotes.QuoteAdjustment adjustments, String quoteId) throws Exception
	{
		return updateQuoteAdjustmentsClient( adjustments,  quoteId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateQuoteAdjustmentsClient( adjustments,  quoteId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param responseFields 
	 * @param updateMode 
	 * @param adjustments 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.QuoteAdjustment
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateQuoteAdjustmentsClient(com.mozu.api.contracts.commerceruntime.quotes.QuoteAdjustment adjustments, String quoteId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.updateQuoteAdjustmentsUrl(quoteId, responseFields, updateMode);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(adjustments);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CopyQuoteClient( quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> copyQuoteClient(String quoteId) throws Exception
	{
		return copyQuoteClient( quoteId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CopyQuoteClient( quoteId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> copyQuoteClient(String quoteId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.copyQuoteUrl(quoteId, responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=SendQuoteEmailClient( emailAddresses,  quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param emailAddresses 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 * @see string
	 */
	public static MozuClient<java.io.InputStream> sendQuoteEmailClient(List<String> emailAddresses, String quoteId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.sendQuoteEmailUrl(quoteId);
		String verb = "POST";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(emailAddresses);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateFulfillmentInfoClient( fulfillmentInfo,  quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param fulfillmentInfo 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.FulfillmentInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateFulfillmentInfoClient(com.mozu.api.contracts.commerceruntime.fulfillment.FulfillmentInfo fulfillmentInfo, String quoteId) throws Exception
	{
		return updateFulfillmentInfoClient( fulfillmentInfo,  quoteId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateFulfillmentInfoClient( fulfillmentInfo,  quoteId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId 
	 * @param responseFields 
	 * @param updateMode 
	 * @param fulfillmentInfo 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.FulfillmentInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateFulfillmentInfoClient(com.mozu.api.contracts.commerceruntime.fulfillment.FulfillmentInfo fulfillmentInfo, String quoteId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.updateFulfillmentInfoUrl(quoteId, responseFields, updateMode);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(fulfillmentInfo);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CreateQuoteFromCartClient( cartId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param cartId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> createQuoteFromCartClient(String cartId) throws Exception
	{
		return createQuoteFromCartClient( cartId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=CreateQuoteFromCartClient( cartId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param cartId 
	 * @param responseFields 
	 * @param updateMode 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> createQuoteFromCartClient(String cartId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.createQuoteFromCartUrl(cartId, responseFields, updateMode);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateQuoteClient( quote,  quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote being updated.
	 * @param quote The quote that is being updated.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateQuoteClient(com.mozu.api.contracts.commerceruntime.quotes.Quote quote, String quoteId) throws Exception
	{
		return updateQuoteClient( quote,  quoteId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient=UpdateQuoteClient( quote,  quoteId,  updateMode,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Quote quote = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote being updated.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param updateMode 
	 * @param quote The quote that is being updated.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.quotes.Quote>
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 * @see com.mozu.api.contracts.commerceruntime.quotes.Quote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> updateQuoteClient(com.mozu.api.contracts.commerceruntime.quotes.Quote quote, String quoteId, String updateMode, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.updateQuoteUrl(quoteId, responseFields, updateMode);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.quotes.Quote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.quotes.Quote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(quote);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteQuoteClient( quoteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param quoteId A unique identifier for the quote.
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteQuoteClient(String quoteId) throws Exception
	{
		return deleteQuoteClient( quoteId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteQuoteClient( quoteId,  draft);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param draft 
	 * @param quoteId A unique identifier for the quote.
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteQuoteClient(String quoteId, Boolean draft) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.QuoteUrl.deleteQuoteUrl(draft, quoteId);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



