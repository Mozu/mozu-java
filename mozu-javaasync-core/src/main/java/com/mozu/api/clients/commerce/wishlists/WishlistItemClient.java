/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.wishlists;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Wish List Items subresource to manage items in a shopper wish list. The same product can be defined as an item in any number of wish lists for the customer account. Use the Wish Lists resource to manage shopper wish lists.
 * </summary>
 */
public class WishlistItemClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=GetWishlistItemClient( wishlistId,  wishlistItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list item to retrieve.
	 * @param wishlistItemId Unique identifier of the wish list associated with the item to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> getWishlistItemClient(String wishlistId, String wishlistItemId) throws Exception
	{
		return getWishlistItemClient( wishlistId,  wishlistItemId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=GetWishlistItemClient( wishlistId,  wishlistItemId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param responseFields 
	 * @param wishlistId Unique identifier of the wish list item to retrieve.
	 * @param wishlistItemId Unique identifier of the wish list associated with the item to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> getWishlistItemClient(String wishlistId, String wishlistItemId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.getWishlistItemUrl(responseFields, wishlistId, wishlistItemId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient=GetWishlistItemsClient( wishlistId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItemCollection wishlistItemCollection = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list associated with the items to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> getWishlistItemsClient(String wishlistId) throws Exception
	{
		return getWishlistItemsClient( wishlistId,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient=GetWishlistItemsClient( wishlistId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItemCollection wishlistItemCollection = client.Result();
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @param wishlistId Unique identifier of the wish list associated with the items to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> getWishlistItemsClient(String wishlistId, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.getWishlistItemsUrl(filter, pageSize, responseFields, sortBy, startIndex, wishlistId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient=GetWishlistItemsByWishlistNameClient( customerAccountId,  wishlistName);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItemCollection wishlistItemCollection = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account associated with the wish list.
	 * @param wishlistName The name of the wish list that contains the items to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> getWishlistItemsByWishlistNameClient(Integer customerAccountId, String wishlistName) throws Exception
	{
		return getWishlistItemsByWishlistNameClient( customerAccountId,  wishlistName,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient=GetWishlistItemsByWishlistNameClient( customerAccountId,  wishlistName,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItemCollection wishlistItemCollection = client.Result();
	 * </code></pre></p>
	 * @param customerAccountId The unique identifier of the customer account associated with the wish list.
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @param wishlistName The name of the wish list that contains the items to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> getWishlistItemsByWishlistNameClient(Integer customerAccountId, String wishlistName, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.getWishlistItemsByWishlistNameUrl(customerAccountId, filter, pageSize, responseFields, sortBy, startIndex, wishlistName);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItemCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=AddItemToWishlistClient( wishlistItem,  wishlistId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list associated with the item to add.
	 * @param wishlistItem Properties of the item to add to the wish list.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> addItemToWishlistClient(com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem wishlistItem, String wishlistId) throws Exception
	{
		return addItemToWishlistClient( wishlistItem,  wishlistId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=AddItemToWishlistClient( wishlistItem,  wishlistId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param responseFields 
	 * @param wishlistId Unique identifier of the wish list associated with the item to add.
	 * @param wishlistItem Properties of the item to add to the wish list.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> addItemToWishlistClient(com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem wishlistItem, String wishlistId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.addItemToWishlistUrl(responseFields, wishlistId);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(wishlistItem);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=UpdateWishlistItemQuantityClient( wishlistId,  wishlistItemId,  quantity);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param quantity The quantity of the item in the wish list.
	 * @param wishlistId Unique identifier of the wish list associated with the item quantity to update.
	 * @param wishlistItemId Unique identifier of the item in the wish list to update quantity.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> updateWishlistItemQuantityClient(String wishlistId, String wishlistItemId, Integer quantity) throws Exception
	{
		return updateWishlistItemQuantityClient( wishlistId,  wishlistItemId,  quantity,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=UpdateWishlistItemQuantityClient( wishlistId,  wishlistItemId,  quantity,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param quantity The quantity of the item in the wish list.
	 * @param responseFields 
	 * @param wishlistId Unique identifier of the wish list associated with the item quantity to update.
	 * @param wishlistItemId Unique identifier of the item in the wish list to update quantity.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> updateWishlistItemQuantityClient(String wishlistId, String wishlistItemId, Integer quantity, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.updateWishlistItemQuantityUrl(quantity, responseFields, wishlistId, wishlistItemId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=UpdateWishlistItemClient( wishlistItem,  wishlistId,  wishlistItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list associated with the item to update.
	 * @param wishlistItemId Unique identifier of the item in the shopper wish list to update.
	 * @param wishlistItem Properties of the shopper wish list item to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> updateWishlistItemClient(com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem wishlistItem, String wishlistId, String wishlistItemId) throws Exception
	{
		return updateWishlistItemClient( wishlistItem,  wishlistId,  wishlistItemId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient=UpdateWishlistItemClient( wishlistItem,  wishlistId,  wishlistItemId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * WishlistItem wishlistItem = client.Result();
	 * </code></pre></p>
	 * @param responseFields 
	 * @param wishlistId Unique identifier of the wish list associated with the item to update.
	 * @param wishlistItemId Unique identifier of the item in the shopper wish list to update.
	 * @param wishlistItem Properties of the shopper wish list item to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> updateWishlistItemClient(com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem wishlistItem, String wishlistId, String wishlistItemId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.updateWishlistItemUrl(responseFields, wishlistId, wishlistItemId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.WishlistItem>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(wishlistItem);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> mozuClient=RemoveAllWishlistItemsClient( wishlistId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Wishlist wishlist = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list associated with the items to remove.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.wishlists.Wishlist>
	 * @see com.mozu.api.contracts.commerceruntime.wishlists.Wishlist
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> removeAllWishlistItemsClient(String wishlistId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.removeAllWishlistItemsUrl(wishlistId);
		String verb = "DELETE";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.wishlists.Wishlist.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.wishlists.Wishlist>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteWishlistItemClient( wishlistId,  wishlistItemId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param wishlistId Unique identifier of the wish list associated with the item to remove.
	 * @param wishlistItemId Unique identifier of the item to remove from the shopper wish list.
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteWishlistItemClient(String wishlistId, String wishlistItemId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.wishlists.WishlistItemUrl.deleteWishlistItemUrl(wishlistId, wishlistItemId);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



