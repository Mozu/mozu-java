/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
 * </summary>
 */
public class ChannelClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient=GetChannelsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ChannelCollection channelCollection = client.Result();
	 * </code></pre></p>
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>
	 * @see com.mozu.api.contracts.commerceruntime.channels.ChannelCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> getChannelsClient() throws Exception
	{
		return getChannelsClient( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient=GetChannelsClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ChannelCollection channelCollection = client.Result();
	 * </code></pre></p>
	 * @param filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
	 * @param pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>
	 * @see com.mozu.api.contracts.commerceruntime.channels.ChannelCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> getChannelsClient(Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.getChannelsUrl(filter, pageSize, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.ChannelCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=GetChannelClient( code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> getChannelClient(String code) throws Exception
	{
		return getChannelClient( code,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=GetChannelClient( code,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> getChannelClient(String code, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.getChannelUrl(code, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=CreateChannelClient( channel);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param channel Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> createChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel) throws Exception
	{
		return createChannelClient( channel,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=CreateChannelClient( channel,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param channel Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> createChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.createChannelUrl(responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(channel);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=UpdateChannelClient( channel,  code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param channel Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> updateChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String code) throws Exception
	{
		return updateChannelClient( channel,  code,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=UpdateChannelClient( channel,  code,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param channel Properties of a channel used to divide a company into logical business divisions, such as "US Retail," "US Online," or "Amazon." All sites and orders are associated with a channel.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> updateChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String code, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.updateChannelUrl(code, responseFields);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(channel);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteChannelClient( code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteChannelClient(String code) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.deleteChannelUrl(code);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



