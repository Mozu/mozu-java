/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.checkouts;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.AsyncCallback;
import java.util.concurrent.CountDownLatch;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class OrderNoteClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> mozuClient=GetCheckoutNotesClient( checkoutId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @return Mozu.Api.MozuClient <List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> getCheckoutNotesClient(String checkoutId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.checkouts.OrderNoteUrl.getCheckoutNotesUrl(checkoutId);
		String verb = "GET";
		Class<?> clz = new ArrayList<com.mozu.api.contracts.commerceruntime.orders.OrderNote>(){}.getClass();
		MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>> mozuClient = (MozuClient<List<com.mozu.api.contracts.commerceruntime.orders.OrderNote>>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=GetCheckoutNoteClient( checkoutId,  noteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param noteId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> getCheckoutNoteClient(String checkoutId, String noteId) throws Exception
	{
		return getCheckoutNoteClient( checkoutId,  noteId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=GetCheckoutNoteClient( checkoutId,  noteId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param noteId 
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> getCheckoutNoteClient(String checkoutId, String noteId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.checkouts.OrderNoteUrl.getCheckoutNoteUrl(checkoutId, noteId, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=CreateCheckoutNoteClient( orderNote,  checkoutId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param orderNote 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> createCheckoutNoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote, String checkoutId) throws Exception
	{
		return createCheckoutNoteClient( orderNote,  checkoutId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=CreateCheckoutNoteClient( orderNote,  checkoutId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param responseFields 
	 * @param orderNote 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> createCheckoutNoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote, String checkoutId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.checkouts.OrderNoteUrl.createCheckoutNoteUrl(checkoutId, responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderNote);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=UpdateCheckoutNoteClient( orderNote,  checkoutId,  noteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param noteId 
	 * @param orderNote 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> updateCheckoutNoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote, String checkoutId, String noteId) throws Exception
	{
		return updateCheckoutNoteClient( orderNote,  checkoutId,  noteId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient=UpdateCheckoutNoteClient( orderNote,  checkoutId,  noteId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * OrderNote orderNote = client.Result();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param noteId 
	 * @param responseFields 
	 * @param orderNote 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.orders.OrderNote>
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 * @see com.mozu.api.contracts.commerceruntime.orders.OrderNote
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> updateCheckoutNoteClient(com.mozu.api.contracts.commerceruntime.orders.OrderNote orderNote, String checkoutId, String noteId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.checkouts.OrderNoteUrl.updateCheckoutNoteUrl(checkoutId, noteId, responseFields);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.orders.OrderNote.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.orders.OrderNote>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(orderNote);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteCheckoutNoteClient( checkoutId,  noteId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param checkoutId 
	 * @param noteId 
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deleteCheckoutNoteClient(String checkoutId, String noteId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.checkouts.OrderNoteUrl.deleteCheckoutNoteUrl(checkoutId, noteId);
		String verb = "DELETE";
				MozuClient mozuClient = (MozuClient) MozuClientFactory.getInstance();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



