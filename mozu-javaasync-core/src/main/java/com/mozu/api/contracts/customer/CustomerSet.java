/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.customer;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.customer.CustomerSetAggregateInfo;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.customer.CustomerSetSite;

/**
 *	The details of the customer set.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class CustomerSet implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * The unique identifier of the customer set.
	 */
	protected  String code;

	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	/**
	 * The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
	 */
	protected  String description;

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Indicates if the object is default. This indicator is used for product variations and site search settings. If true, the value/object is the default option.
	 */
	protected  Boolean isDefault;

	public Boolean getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	/**
	 * The user supplied name that appears in . You can use this field for identification purposes.
	 */
	protected  String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * A collection of aggregate information about the customer set, including the amount of sites and customers assocaited with the customer set.
	 */
	protected  CustomerSetAggregateInfo aggregateInfo;

	public CustomerSetAggregateInfo getAggregateInfo() {
		return this.aggregateInfo;
	}

	public void setAggregateInfo(CustomerSetAggregateInfo aggregateInfo) {
		this.aggregateInfo = aggregateInfo;
	}

	/**
	 * Basic audit info about the object, including date, time, and user account. This data may be captured when creating, updating, and removing data.
	 */
	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * Collection of sites associated with the tenant.
	 */
	protected List<CustomerSetSite> sites;
	public List<CustomerSetSite> getSites() {
		return this.sites;
	}
	public void setSites(List<CustomerSetSite> sites) {
		this.sites = sites;
	}


}
