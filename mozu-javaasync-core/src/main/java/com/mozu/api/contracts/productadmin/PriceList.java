/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;

/**
 *	Mozu.ProductAdmin.Contracts.PriceList ApiType DOCUMENT_HERE 
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class PriceList implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Mozu.ProductAdmin.Contracts.PriceList defaultForSites ApiTypeMember DOCUMENT_HERE 
	 */
	protected List<Integer> defaultForSites;
	public List<Integer> getDefaultForSites() {
		return this.defaultForSites;
	}
	public void setDefaultForSites(List<Integer> defaultForSites) {
		this.defaultForSites = defaultForSites;
	}

	/**
	 * The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
	 */
	protected  String description;

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Indicates if the capability or app is enabled for the tenant/site. If true, the capability/application is enabled for the tenant. System-supplied and read-only.
	 */
	protected  Boolean enabled;

	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	/**
	 * When true, only products with valid price list entries will be visible in the storefront. Default is false
	 */
	protected  Boolean filteredInStorefront;

	public Boolean getFilteredInStorefront() {
		return this.filteredInStorefront;
	}

	public void setFilteredInStorefront(Boolean filteredInStorefront) {
		this.filteredInStorefront = filteredInStorefront;
	}

	/**
	 * Mozu.ProductAdmin.Contracts.PriceList indexedSites ApiTypeMember DOCUMENT_HERE 
	 */
	protected List<Integer> indexedSites;
	public List<Integer> getIndexedSites() {
		return this.indexedSites;
	}
	public void setIndexedSites(List<Integer> indexedSites) {
		this.indexedSites = indexedSites;
	}

	/**
	 * List of customer segment code associated with this price list. Used to resolve default price list
	 */
	protected List<String> mappedCustomerSegments;
	public List<String> getMappedCustomerSegments() {
		return this.mappedCustomerSegments;
	}
	public void setMappedCustomerSegments(List<String> mappedCustomerSegments) {
		this.mappedCustomerSegments = mappedCustomerSegments;
	}

	/**
	 * The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
	 */
	protected  String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * Parent PriceList code, Can be null for root level priceLists
	 */
	protected  String parentPriceListCode;

	public String getParentPriceListCode() {
		return this.parentPriceListCode;
	}

	public void setParentPriceListCode(String parentPriceListCode) {
		this.parentPriceListCode = parentPriceListCode;
	}

	/**
	 * Parent PriceList name, Can be null for root level priceLists. Read only in contract.
	 */
	protected  String parentPriceListName;

	public String getParentPriceListName() {
		return this.parentPriceListName;
	}

	public void setParentPriceListName(String parentPriceListName) {
		this.parentPriceListName = parentPriceListName;
	}

	/**
	 * Mozu.ProductAdmin.Contracts.PriceList priceListCode ApiTypeMember DOCUMENT_HERE 
	 */
	protected  String priceListCode;

	public String getPriceListCode() {
		return this.priceListCode;
	}

	public void setPriceListCode(String priceListCode) {
		this.priceListCode = priceListCode;
	}

	/**
	 * Mozu.ProductAdmin.Contracts.PriceList priceListSequence ApiTypeMember DOCUMENT_HERE 
	 */
	protected  Integer priceListSequence;

	public Integer getPriceListSequence() {
		return this.priceListSequence;
	}

	public void setPriceListSequence(Integer priceListSequence) {
		this.priceListSequence = priceListSequence;
	}

	/**
	 * Used to prioritize price list resolution when more than 1 price list maps
	 */
	protected  Integer rank;

	public Integer getRank() {
		return this.rank;
	}

	public void setRank(Integer rank) {
		this.rank = rank;
	}

	/**
	 * Determines if this price list can be resolved as the current price list within a session.
	 */
	protected  Boolean resolvable;

	public Boolean getResolvable() {
		return this.resolvable;
	}

	public void setResolvable(Boolean resolvable) {
		this.resolvable = resolvable;
	}

	/**
	 * When true, no valid sites need to be specifiied. Price list is considered valid for all sites. Default is true
	 */
	protected  Boolean validForAllSites;

	public Boolean getValidForAllSites() {
		return this.validForAllSites;
	}

	public void setValidForAllSites(Boolean validForAllSites) {
		this.validForAllSites = validForAllSites;
	}

	/**
	 * When ValidForAllSites = false, a list of siteIDs that the price list is valid for should be supplied
	 */
	protected List<Integer> validSites;
	public List<Integer> getValidSites() {
		return this.validSites;
	}
	public void setValidSites(List<Integer> validSites) {
		this.validSites = validSites;
	}

	/**
	 * Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
	 */
	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}


}
