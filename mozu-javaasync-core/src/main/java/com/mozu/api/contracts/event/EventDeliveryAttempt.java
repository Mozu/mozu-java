/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.event;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import com.mozu.api.contracts.event.HttpStatus;

/**
 *	Properties and information captured for an attempted delivery that failed.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class EventDeliveryAttempt implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Status of the delivery process `EventDeliveryStatusType`. System-supplied and read-only.
	 */
	protected String deliveryStatus;

	public String getDeliveryStatus() {
		return this.deliveryStatus;
	}

	public void setDeliveryStatus(String deliveryStatus) {
		this.deliveryStatus = deliveryStatus;
	}

	/**
	 * Type of error that occurred, if the delivery was unsuccessful
	 */
	protected String errorType;

	public String getErrorType() {
		return this.errorType;
	}

	public void setErrorType(String errorType) {
		this.errorType = errorType;
	}

	/**
	 * The date that the delivery was attempted
	 */
	protected DateTime executionDate;

	public DateTime getExecutionDate() {
		return this.executionDate;
	}

	public void setExecutionDate(DateTime executionDate) {
		this.executionDate = executionDate;
	}

	/**
	 * The text of the change message, such as "This product is no longer available." System-supplied and read-only.
	 */
	protected String message;

	public String getMessage() {
		return this.message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	/**
	 * The HTTP Status (code and name) returned by the remote endpoint
	 */
	protected HttpStatus httpStatus;

	public HttpStatus getHttpStatus() {
		return this.httpStatus;
	}

	public void setHttpStatus(HttpStatus httpStatus) {
		this.httpStatus = httpStatus;
	}

}
