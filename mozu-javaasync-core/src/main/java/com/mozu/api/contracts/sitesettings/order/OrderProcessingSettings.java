/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.sitesettings.order;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.sitesettings.order.ThirdPartyPaymentSetting;

/**
 *	Settings that determine how orders are processed and order payments are authorized for the site.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class OrderProcessingSettings implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Abandoned order threshold in minutes indicates the number of minutes until a pending order is considered abandoned.
	 */
	protected  Integer abandonedOrderThresholdInMinutes;

	public Integer getAbandonedOrderThresholdInMinutes() {
		return this.abandonedOrderThresholdInMinutes;
	}

	public void setAbandonedOrderThresholdInMinutes(Integer abandonedOrderThresholdInMinutes) {
		this.abandonedOrderThresholdInMinutes = abandonedOrderThresholdInMinutes;
	}

	/**
	 * giftCardProcessingType ApiType DOCUMENT_HERE 
	 */
	protected  String giftCardProcessingType;

	public String getGiftCardProcessingType() {
		return this.giftCardProcessingType;
	}

	public void setGiftCardProcessingType(String giftCardProcessingType) {
		this.giftCardProcessingType = giftCardProcessingType;
	}

	protected  String paymentProcessingFlowType;

	public String getPaymentProcessingFlowType() {
		return this.paymentProcessingFlowType;
	}

	public void setPaymentProcessingFlowType(String paymentProcessingFlowType) {
		this.paymentProcessingFlowType = paymentProcessingFlowType;
	}

	protected  Boolean useOverridePriceToCalculateDiscounts;

	public Boolean getUseOverridePriceToCalculateDiscounts() {
		return this.useOverridePriceToCalculateDiscounts;
	}

	public void setUseOverridePriceToCalculateDiscounts(Boolean useOverridePriceToCalculateDiscounts) {
		this.useOverridePriceToCalculateDiscounts = useOverridePriceToCalculateDiscounts;
	}

	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * thirdPartyPaymentSettings ApiType DOCUMENT_HERE 
	 */
	protected List<ThirdPartyPaymentSetting> thirdPartyPaymentSettings;
	public List<ThirdPartyPaymentSetting> getThirdPartyPaymentSettings() {
		return this.thirdPartyPaymentSettings;
	}
	public void setThirdPartyPaymentSettings(List<ThirdPartyPaymentSetting> thirdPartyPaymentSettings) {
		this.thirdPartyPaymentSettings = thirdPartyPaymentSettings;
	}


}
