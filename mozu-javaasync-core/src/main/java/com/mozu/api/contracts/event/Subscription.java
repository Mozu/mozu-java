/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.event;

import java.util.List;
import org.joda.time.DateTime;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import com.mozu.api.contracts.event.SubscribingTenant;

/**
 *	The subscription entity used to provide event notifications for third-parties.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Subscription implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * ApiVersion
	 */
	protected String apiVersion;

	public String getApiVersion() {
		return this.apiVersion;
	}

	public void setApiVersion(String apiVersion) {
		this.apiVersion = apiVersion;
	}

	/**
	 * Unique identifier of an app available in your Mozu tenant or within Mozu Dev Center. This ID is unique across all apps installed, initialized, and enabled in the Mozu Admin and those in development through the Dev Center Console.
	 */
	protected String appId;

	public String getAppId() {
		return this.appId;
	}

	public void setAppId(String appId) {
		this.appId = appId;
	}

	/**
	 * A boolean value that indicates if the subscription endpoint has been confirmed
	 */
	protected Boolean confirmed;

	public Boolean getConfirmed() {
		return this.confirmed;
	}

	public void setConfirmed(Boolean confirmed) {
		this.confirmed = confirmed;
	}

	/**
	 * Content type of the payload that will be delivered.  This is utilized in combination with the notification delivery type.  Example:  A HTTP Post (notification delivery type) is performed with a JSON representation of the event data (content type).
	 */
	protected String contentType;

	public String getContentType() {
		return this.contentType;
	}

	public void setContentType(String contentType) {
		this.contentType = contentType;
	}

	/**
	 * Identifier of the user that created the object. System created and read only.
	 */
	protected String createBy;

	public String getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(String createBy) {
		this.createBy = createBy;
	}

	/**
	 * The date time in UTCÂ format set when the object was created. 
	 */
	protected DateTime createDate;

	public DateTime getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(DateTime createDate) {
		this.createDate = createDate;
	}

	/**
	 * The delivery endpoint that will receive notifications when events concerning the specified topics on the subscription occur.  The format of the endpoint may differ depending on the notification type.  For example, the endpoint may be a URL in some cases and an email address in others if multiple notification types are available.
	 */
	protected String endpoint;

	public String getEndpoint() {
		return this.endpoint;
	}

	public void setEndpoint(String endpoint) {
		this.endpoint = endpoint;
	}

	/**
	 * Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
	 */
	protected String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	/**
	 * Indicates if the object or feature is active. This indicator is used for subscriptions (at the site or tenant level), customer accounts, products and variations.
	 */
	protected Boolean isActive;

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	 * A boolean value that indicates if events should be delivered that resulted from an API call by the application.  If true, any events that occur as a result of a direct API call by the same application will not be delivered. This can prevent an endless loop in certain scenarios.
	 */
	protected Boolean noCallback;

	public Boolean getNoCallback() {
		return this.noCallback;
	}

	public void setNoCallback(Boolean noCallback) {
		this.noCallback = noCallback;
	}

	/**
	 * Notification delivery type which is a string representation of an enumeration of values.  Example: Http (this is case insensitive, so http may also be passed in)
	 */
	protected String notificationDeliveryType;

	public String getNotificationDeliveryType() {
		return this.notificationDeliveryType;
	}

	public void setNotificationDeliveryType(String notificationDeliveryType) {
		this.notificationDeliveryType = notificationDeliveryType;
	}

	/**
	 * A list of topics that the subscription relates to
	 */
	protected List<String> topics;
	public List<String> getTopics() {
		return this.topics;
	}
	public void setTopics(List<String> topics) {
		this.topics = topics;
	}

	/**
	 * Identifier of the user that updated the entity most recently.
	 */
	protected String updateBy;

	public String getUpdateBy() {
		return this.updateBy;
	}

	public void setUpdateBy(String updateBy) {
		this.updateBy = updateBy;
	}

	/**
	 * The date and time the object was updated most recently. The date is in UTC format.
	 */
	protected DateTime updateDate;

	public DateTime getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(DateTime updateDate) {
		this.updateDate = updateDate;
	}

	/**
	 * This is a tenant that is associated with a subscription.
	 */
	protected List<SubscribingTenant> subscribingTenants;
	public List<SubscribingTenant> getSubscribingTenants() {
		return this.subscribingTenants;
	}
	public void setSubscribingTenants(List<SubscribingTenant> subscribingTenants) {
		this.subscribingTenants = subscribingTenants;
	}

}
