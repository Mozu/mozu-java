/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.pricingruntime;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.pricingruntime.DiscountCondition;
import com.mozu.api.contracts.pricingruntime.DiscountTarget;

/**
 *	Name of the discount added and applied to a shopping cart and order for a shopper's purchase.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Discount implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * amount ApiType DOCUMENT_HERE 
	 */
	protected  Double amount;

	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	/**
	 * The type of the discount, either  (meaning the discount amount value represents a percentage off the original price),  (meaning the discount amount value represents a dollar amount off the original price),  (meaning the discount amount value is ignored because the product is free), or  (meaning the discount amount value represents the discounted price of the item).
	 */
	protected  String amountType;

	public String getAmountType() {
		return this.amountType;
	}

	public void setAmountType(String amountType) {
		this.amountType = amountType;
	}

	protected  Integer discountId;

	public Integer getDiscountId() {
		return this.discountId;
	}

	public void setDiscountId(Integer discountId) {
		this.discountId = discountId;
	}

	/**
	 * doesNotApplyToMultiShipToOrders ApiType DOCUMENT_HERE 
	 */
	protected  Boolean doesNotApplyToMultiShipToOrders;

	public Boolean getDoesNotApplyToMultiShipToOrders() {
		return this.doesNotApplyToMultiShipToOrders;
	}

	public void setDoesNotApplyToMultiShipToOrders(Boolean doesNotApplyToMultiShipToOrders) {
		this.doesNotApplyToMultiShipToOrders = doesNotApplyToMultiShipToOrders;
	}

	/**
	 * doesNotApplyToProductsWithSalePrice ApiType DOCUMENT_HERE 
	 */
	protected  Boolean doesNotApplyToProductsWithSalePrice;

	public Boolean getDoesNotApplyToProductsWithSalePrice() {
		return this.doesNotApplyToProductsWithSalePrice;
	}

	public void setDoesNotApplyToProductsWithSalePrice(Boolean doesNotApplyToProductsWithSalePrice) {
		this.doesNotApplyToProductsWithSalePrice = doesNotApplyToProductsWithSalePrice;
	}

	protected  DateTime expirationDate;

	public DateTime getExpirationDate() {
		return this.expirationDate;
	}

	public void setExpirationDate(DateTime expirationDate) {
		this.expirationDate = expirationDate;
	}

	/**
	 * The localizable, shopper-facing description defined for a discount or a storefront message.
	 */
	protected  String friendlyDescription;

	public String getFriendlyDescription() {
		return this.friendlyDescription;
	}

	public void setFriendlyDescription(String friendlyDescription) {
		this.friendlyDescription = friendlyDescription;
	}

	/**
	 * includedPriceLists ApiType DOCUMENT_HERE 
	 */
	protected List<String> includedPriceLists;
	public List<String> getIncludedPriceLists() {
		return this.includedPriceLists;
	}
	public void setIncludedPriceLists(List<String> includedPriceLists) {
		this.includedPriceLists = includedPriceLists;
	}

	/**
	 * maxDiscountValuePerRedemption ApiType DOCUMENT_HERE 
	 */
	protected  Double maxDiscountValuePerRedemption;

	public Double getMaxDiscountValuePerRedemption() {
		return this.maxDiscountValuePerRedemption;
	}

	public void setMaxDiscountValuePerRedemption(Double maxDiscountValuePerRedemption) {
		this.maxDiscountValuePerRedemption = maxDiscountValuePerRedemption;
	}

	/**
	 * maximumDiscountValuePerOrder ApiType DOCUMENT_HERE 
	 */
	protected  Double maximumDiscountValuePerOrder;

	public Double getMaximumDiscountValuePerOrder() {
		return this.maximumDiscountValuePerOrder;
	}

	public void setMaximumDiscountValuePerOrder(Double maximumDiscountValuePerOrder) {
		this.maximumDiscountValuePerOrder = maximumDiscountValuePerOrder;
	}

	/**
	 * maximumRedemptionsPerOrder ApiType DOCUMENT_HERE 
	 */
	protected  Integer maximumRedemptionsPerOrder;

	public Integer getMaximumRedemptionsPerOrder() {
		return this.maximumRedemptionsPerOrder;
	}

	public void setMaximumRedemptionsPerOrder(Integer maximumRedemptionsPerOrder) {
		this.maximumRedemptionsPerOrder = maximumRedemptionsPerOrder;
	}

	/**
	 * maximumUsesPerUser ApiType DOCUMENT_HERE 
	 */
	protected  Integer maximumUsesPerUser;

	public Integer getMaximumUsesPerUser() {
		return this.maximumUsesPerUser;
	}

	public void setMaximumUsesPerUser(Integer maximumUsesPerUser) {
		this.maximumUsesPerUser = maximumUsesPerUser;
	}

	/**
	 * maxRedemptions ApiType DOCUMENT_HERE 
	 */
	protected  Integer maxRedemptions;

	public Integer getMaxRedemptions() {
		return this.maxRedemptions;
	}

	public void setMaxRedemptions(Integer maxRedemptions) {
		this.maxRedemptions = maxRedemptions;
	}

	protected  String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * redemptions ApiType DOCUMENT_HERE 
	 */
	protected  Integer redemptions;

	public Integer getRedemptions() {
		return this.redemptions;
	}

	public void setRedemptions(Integer redemptions) {
		this.redemptions = redemptions;
	}

	/**
	 * requiresAuthenticatedUser ApiType DOCUMENT_HERE 
	 */
	protected  Boolean requiresAuthenticatedUser;

	public Boolean getRequiresAuthenticatedUser() {
		return this.requiresAuthenticatedUser;
	}

	public void setRequiresAuthenticatedUser(Boolean requiresAuthenticatedUser) {
		this.requiresAuthenticatedUser = requiresAuthenticatedUser;
	}

	/**
	 * scope ApiType DOCUMENT_HERE 
	 */
	protected  String scope;

	public String getScope() {
		return this.scope;
	}

	public void setScope(String scope) {
		this.scope = scope;
	}

	/**
	 * type ApiType DOCUMENT_HERE 
	 */
	protected  String type;

	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	/**
	 * condition ApiType DOCUMENT_HERE 
	 */
	protected  DiscountCondition condition;

	public DiscountCondition getCondition() {
		return this.condition;
	}

	public void setCondition(DiscountCondition condition) {
		this.condition = condition;
	}

	/**
	 * Targets represent the object, such as an item to apply discounts to(products or orders) or a view field for content. Targets are the dot notations that link to the source document property. For example, firstitem for the direct level or firstitem.seconditem.thirditem for a deeper property.
	 */
	protected  DiscountTarget target;

	public DiscountTarget getTarget() {
		return this.target;
	}

	public void setTarget(DiscountTarget target) {
		this.target = target;
	}


}
