/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.commerce.customer.CustomerSegmentResource;

/** <summary>
 * 
 * </summary>
 */
public class CustomerCustomerSegmentFactory
{

	public static com.mozu.api.contracts.customer.CustomerSegmentCollection getSegments(ApiContext apiContext, int expectedCode, int successCode) throws Exception
	{
		return getSegments(apiContext,  null,  null,  null,  null,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.customer.CustomerSegmentCollection getSegments(ApiContext apiContext, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.customer.CustomerSegmentCollection returnObj = new com.mozu.api.contracts.customer.CustomerSegmentCollection();
		CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			returnObj = resource.getSegments( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.customer.CustomerSegment getSegment(ApiContext apiContext, Integer id, int expectedCode, int successCode) throws Exception
	{
		return getSegment(apiContext,  id,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.customer.CustomerSegment getSegment(ApiContext apiContext, Integer id, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.customer.CustomerSegment returnObj = new com.mozu.api.contracts.customer.CustomerSegment();
		CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			returnObj = resource.getSegment( id,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.customer.CustomerSegment addSegment(ApiContext apiContext, com.mozu.api.contracts.customer.CustomerSegment segment, int expectedCode, int successCode) throws Exception
	{
		return addSegment(apiContext,  segment,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.customer.CustomerSegment addSegment(ApiContext apiContext, com.mozu.api.contracts.customer.CustomerSegment segment, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.customer.CustomerSegment returnObj = new com.mozu.api.contracts.customer.CustomerSegment();
		CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			returnObj = resource.addSegment( segment,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static void addSegmentAccounts(ApiContext apiContext, List<Integer> accountIds, Integer id, int expectedCode, int successCode) throws Exception
	{
				CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			resource.addSegmentAccounts( accountIds,  id);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");

	}

	public static com.mozu.api.contracts.customer.CustomerSegment updateSegment(ApiContext apiContext, com.mozu.api.contracts.customer.CustomerSegment segment, Integer id, int expectedCode, int successCode) throws Exception
	{
		return updateSegment(apiContext,  segment,  id,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.customer.CustomerSegment updateSegment(ApiContext apiContext, com.mozu.api.contracts.customer.CustomerSegment segment, Integer id, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.customer.CustomerSegment returnObj = new com.mozu.api.contracts.customer.CustomerSegment();
		CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			returnObj = resource.updateSegment( segment,  id,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static void deleteSegment(ApiContext apiContext, Integer id, int expectedCode, int successCode) throws Exception
	{
				CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			resource.deleteSegment( id);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");

	}

	public static void deleteSegmentAccounts(ApiContext apiContext, List<Integer> accountIds, Integer id, int expectedCode, int successCode) throws Exception
	{
				CustomerSegmentResource resource = new CustomerSegmentResource(apiContext);
		try
		{
			resource.deleteSegmentAccounts( accountIds,  id);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");

	}

}



