/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory.commerce.shipping.admin.carriers;

import java.util.List;
import java.util.HashMap;
import java.util.ArrayList;
import org.apache.http.HttpStatus;
import org.joda.time.DateTime;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.commerce.shipping.admin.carriers.CarrierCredentialResource;

/** <summary>
 * 
 * </summary>
 */
public class CarrierCredentialFactory
{

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialCollection getCarrierCredentials(ApiContext apiContext, int expectedCode) throws Exception
	{
		return getCarrierCredentials(apiContext,  null,  null,  null,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialCollection getCarrierCredentials(ApiContext apiContext, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialCollection returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialCollection();
		CarrierCredentialResource resource = new CarrierCredentialResource(apiContext);
		try
		{
			returnObj = resource.getCarrierCredentials( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential getCarrierCredential(ApiContext apiContext, String carrierId, int expectedCode) throws Exception
	{
		return getCarrierCredential(apiContext,  carrierId,  null,  null,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential getCarrierCredential(ApiContext apiContext, String carrierId, Integer siteId, String locationGroupCode, String locationCode, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential();
		CarrierCredentialResource resource = new CarrierCredentialResource(apiContext);
		try
		{
			returnObj = resource.getCarrierCredential( carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential createCarrierCredential(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential carrierCredential, String carrierId, int expectedCode) throws Exception
	{
		return createCarrierCredential(apiContext,  carrierCredential,  carrierId,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential createCarrierCredential(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential carrierCredential, String carrierId, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential();
		CarrierCredentialResource resource = new CarrierCredentialResource(apiContext);
		try
		{
			returnObj = resource.createCarrierCredential( carrierCredential,  carrierId,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential updateCarrierCredential(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential carrierCredential, String carrierId, int expectedCode) throws Exception
	{
		return updateCarrierCredential(apiContext,  carrierCredential,  carrierId,  null,  null,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential updateCarrierCredential(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential carrierCredential, String carrierId, Integer siteId, String locationGroupCode, String locationCode, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredential();
		CarrierCredentialResource resource = new CarrierCredentialResource(apiContext);
		try
		{
			returnObj = resource.updateCarrierCredential( carrierCredential,  carrierId,  siteId,  locationGroupCode,  locationCode,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static java.io.InputStream deleteCarrierCredential(ApiContext apiContext, String carrierId, int expectedCode) throws Exception
	{
		return deleteCarrierCredential(apiContext,  carrierId,  null,  null,  null, expectedCode);
	}

	public static java.io.InputStream deleteCarrierCredential(ApiContext apiContext, String carrierId, Integer siteId, String locationGroupCode, String locationCode, int expectedCode) throws Exception
	{
		java.io.InputStream returnObj;
		CarrierCredentialResource resource = new CarrierCredentialResource(apiContext);
		try
		{
			returnObj = resource.deleteCarrierCredential( carrierId,  siteId,  locationGroupCode,  locationCode);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

}



