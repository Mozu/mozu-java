/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory.commerce.quotes;

import java.util.List;
import java.util.HashMap;
import java.util.ArrayList;
import org.apache.http.HttpStatus;
import org.joda.time.DateTime;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.commerce.quotes.QuoteCommentResource;

/** <summary>
 * 
 * </summary>
 */
public class QuoteCommentFactory
{

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment get(ApiContext apiContext, String quoteId, String commentId, int expectedCode) throws Exception
	{
		return get(apiContext,  quoteId,  commentId,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment get(ApiContext apiContext, String quoteId, String commentId, Boolean draft, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.commerceruntime.quotes.QuoteComment returnObj = new com.mozu.api.contracts.commerceruntime.quotes.QuoteComment();
		QuoteCommentResource resource = new QuoteCommentResource(apiContext);
		try
		{
			returnObj = resource.get( quoteId,  commentId,  draft,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment getAll(ApiContext apiContext, String quoteId, int expectedCode) throws Exception
	{
		return getAll(apiContext,  quoteId,  null, expectedCode);
	}

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment getAll(ApiContext apiContext, String quoteId, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.commerceruntime.quotes.QuoteComment returnObj = new com.mozu.api.contracts.commerceruntime.quotes.QuoteComment();
		QuoteCommentResource resource = new QuoteCommentResource(apiContext);
		try
		{
			returnObj = resource.getAll( quoteId,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment create(ApiContext apiContext, com.mozu.api.contracts.commerceruntime.quotes.QuoteComment comment, String quoteId, int expectedCode) throws Exception
	{
		return create(apiContext,  comment,  quoteId,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.commerceruntime.quotes.QuoteComment create(ApiContext apiContext, com.mozu.api.contracts.commerceruntime.quotes.QuoteComment comment, String quoteId, String updateMode, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.commerceruntime.quotes.QuoteComment returnObj = new com.mozu.api.contracts.commerceruntime.quotes.QuoteComment();
		QuoteCommentResource resource = new QuoteCommentResource(apiContext);
		try
		{
			returnObj = resource.create( comment,  quoteId,  updateMode,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

}



