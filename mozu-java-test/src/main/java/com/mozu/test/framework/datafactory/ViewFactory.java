/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.content.documentlists.ViewResource;

/** <summary>
 * 
 * </summary>
 */
public class ViewFactory
{

	public static com.mozu.api.contracts.content.DocumentCollection getViewDocuments(ApiContext apiContext, String documentListName, String viewName, int expectedCode, int successCode) throws Exception
	{
		return getViewDocuments(apiContext,  documentListName,  viewName,  null,  null,  null,  null,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.content.DocumentCollection getViewDocuments(ApiContext apiContext, String documentListName, String viewName, String filter, String sortBy, Integer pageSize, Integer startIndex, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.DocumentCollection returnObj = new com.mozu.api.contracts.content.DocumentCollection();
		ViewResource resource = new ViewResource(apiContext);
		try
		{
			returnObj = resource.getViewDocuments( documentListName,  viewName,  filter,  sortBy,  pageSize,  startIndex,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.content.View getDocumentListView(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, String viewName, int expectedCode, int successCode) throws Exception
	{
		return getDocumentListView(apiContext, dataViewMode,  documentListName,  viewName,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.content.View getDocumentListView(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, String viewName, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.View returnObj = new com.mozu.api.contracts.content.View();
		ViewResource resource = new ViewResource(apiContext, dataViewMode);
		try
		{
			returnObj = resource.getDocumentListView( documentListName,  viewName,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.content.ViewCollection getDocumentListViews(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, int expectedCode, int successCode) throws Exception
	{
		return getDocumentListViews(apiContext, dataViewMode,  documentListName,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.content.ViewCollection getDocumentListViews(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.ViewCollection returnObj = new com.mozu.api.contracts.content.ViewCollection();
		ViewResource resource = new ViewResource(apiContext, dataViewMode);
		try
		{
			returnObj = resource.getDocumentListViews( documentListName,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.content.View updateDocumentListView(ApiContext apiContext, String documentListName, String viewName, int expectedCode, int successCode) throws Exception
	{
		return updateDocumentListView(apiContext,  documentListName,  viewName,  null, expectedCode, successCode );
	}

	public static com.mozu.api.contracts.content.View updateDocumentListView(ApiContext apiContext, String documentListName, String viewName, String responseFields, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.View returnObj = new com.mozu.api.contracts.content.View();
		ViewResource resource = new ViewResource(apiContext);
		try
		{
			returnObj = resource.updateDocumentListView( documentListName,  viewName,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static com.mozu.api.contracts.content.View deleteDocumentListView(ApiContext apiContext, String documentListName, String viewName, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.View returnObj = new com.mozu.api.contracts.content.View();
		ViewResource resource = new ViewResource(apiContext);
		try
		{
			returnObj = resource.deleteDocumentListView( documentListName,  viewName);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

}



