/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.content.documentlists.DocumentTreeResource;

/** <summary>
 * Use the document tree subresource to retrieve documents and manage content within the document hierarchy.
 * </summary>
 */
public class DocumentTreeFactory
{

	public static com.mozu.api.contracts.content.Document getTreeDocument(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, String documentName, int expectedCode, int successCode) throws Exception
	{
		com.mozu.api.contracts.content.Document returnObj = new com.mozu.api.contracts.content.Document();
		DocumentTreeResource resource = new DocumentTreeResource(apiContext);
		try
		{
			returnObj = resource.getTreeDocument(dataViewMode,  documentListName,  documentName);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static java.io.InputStream getTreeDocumentContent(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, String documentListName, String documentName, int expectedCode, int successCode) throws Exception
	{
		java.io.InputStream returnObj;
		DocumentTreeResource resource = new DocumentTreeResource(apiContext);
		try
		{
			returnObj = resource.getTreeDocumentContent(dataViewMode,  documentListName,  documentName);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
			else
				return null;
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		return returnObj;

	}

	public static void updateTreeDocumentContent(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, java.io.InputStream stream, String documentListName, String documentName, String  contentType, int expectedCode, int successCode) throws Exception
	{
				DocumentTreeResource resource = new DocumentTreeResource(apiContext);
		try
		{
			resource.updateTreeDocumentContent(dataViewMode,  stream,  documentListName,  documentName,  contentType);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");

	}

	public static void deleteTreeDocumentContent(ApiContext apiContext, com.mozu.api.DataViewMode dataViewMode, java.io.InputStream stream, String documentListName, String documentName, String  contentType, int expectedCode, int successCode) throws Exception
	{
				DocumentTreeResource resource = new DocumentTreeResource(apiContext);
		try
		{
			resource.deleteTreeDocumentContent(dataViewMode,  stream,  documentListName,  documentName,  contentType);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException(e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");
		}
		if(expectedCode != successCode)
			 throw new TestFailException(successCode, Thread.currentThread().getStackTrace()[2].getMethodName(), expectedCode, "");

	}

}



