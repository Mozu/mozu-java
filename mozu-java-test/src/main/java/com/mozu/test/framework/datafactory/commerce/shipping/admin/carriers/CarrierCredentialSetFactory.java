/**
 *     This code was auto-generated by a tool.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
*/
package com.mozu.test.framework.datafactory.commerce.shipping.admin.carriers;

import java.util.List;
import java.util.HashMap;
import java.util.ArrayList;
import org.apache.http.HttpStatus;
import org.joda.time.DateTime;
import com.mozu.api.ApiException;
import com.mozu.api.ApiContext;
import com.mozu.test.framework.core.TestFailException;
import com.mozu.api.resources.commerce.shipping.admin.carriers.CarrierCredentialSetResource;

/** <summary>
 * 
 * </summary>
 */
public class CarrierCredentialSetFactory
{

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSetCollection getCarrierCredentialSets(ApiContext apiContext, int expectedCode) throws Exception
	{
		return getCarrierCredentialSets(apiContext,  null,  null,  null,  null,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSetCollection getCarrierCredentialSets(ApiContext apiContext, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSetCollection returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSetCollection();
		CarrierCredentialSetResource resource = new CarrierCredentialSetResource(apiContext);
		try
		{
			returnObj = resource.getCarrierCredentialSets( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet getCarrierCredentialSet(ApiContext apiContext, String carrierId, String code, int expectedCode) throws Exception
	{
		return getCarrierCredentialSet(apiContext,  carrierId,  code,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet getCarrierCredentialSet(ApiContext apiContext, String carrierId, String code, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet();
		CarrierCredentialSetResource resource = new CarrierCredentialSetResource(apiContext);
		try
		{
			returnObj = resource.getCarrierCredentialSet( carrierId,  code,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet createCarrierCredentialSet(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet carrierCredentialSet, String carrierId, int expectedCode) throws Exception
	{
		return createCarrierCredentialSet(apiContext,  carrierCredentialSet,  carrierId,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet createCarrierCredentialSet(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet carrierCredentialSet, String carrierId, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet();
		CarrierCredentialSetResource resource = new CarrierCredentialSetResource(apiContext);
		try
		{
			returnObj = resource.createCarrierCredentialSet( carrierCredentialSet,  carrierId,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet updateCarrierCredentialSet(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet carrierCredentialSet, String carrierId, String code, int expectedCode) throws Exception
	{
		return updateCarrierCredentialSet(apiContext,  carrierCredentialSet,  carrierId,  code,  null, expectedCode);
	}

	public static com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet updateCarrierCredentialSet(ApiContext apiContext, com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet carrierCredentialSet, String carrierId, String code, String responseFields, int expectedCode) throws Exception
	{
		com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet returnObj = new com.mozu.api.contracts.shippingadmin.carriers.CarrierCredentialSet();
		CarrierCredentialSetResource resource = new CarrierCredentialSetResource(apiContext);
		try
		{
			returnObj = resource.updateCarrierCredentialSet( carrierCredentialSet,  carrierId,  code,  responseFields);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

	public static java.io.InputStream deleteCarrierCredentialSet(ApiContext apiContext, String carrierId, String code, int expectedCode) throws Exception
	{
		java.io.InputStream returnObj;
		CarrierCredentialSetResource resource = new CarrierCredentialSetResource(apiContext);
		try
		{
			returnObj = resource.deleteCarrierCredentialSet( carrierId,  code);
		}
		catch (ApiException e)
		{
			if(e.getHttpStatusCode() != expectedCode)
				throw new TestFailException("" + e.getHttpStatusCode(), Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
			else
				return null;
		}
		if(expectedCode != 304 && !(expectedCode >= 200 && expectedCode <= 300) && !(expectedCode == HttpStatus.SC_NOT_FOUND && returnObj == null))
			throw new TestFailException("304 or between 200 and 300", Thread.currentThread().getStackTrace()[2].getMethodName(), "" + expectedCode, "");
		return returnObj;
	}

}



