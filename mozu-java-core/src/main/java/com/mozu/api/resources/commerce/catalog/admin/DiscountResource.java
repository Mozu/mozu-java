/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
 * </summary>
 */
public class DiscountResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;
	public DiscountResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * Retrieves a list of discounts according to any specified filter criteria and sort options.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountCollection discountCollection = discount.GetDiscounts(dataViewMode);
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.DiscountCollection
	 * @see com.mozu.api.contracts.productadmin.DiscountCollection
	 */
	public com.mozu.api.contracts.productadmin.DiscountCollection getDiscounts(com.mozu.api.DataViewMode dataViewMode) throws Exception
	{
		return getDiscounts(dataViewMode,  null,  null,  null,  null);
	}

	/**
	 * Retrieves a list of discounts according to any specified filter criteria and sort options.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountCollection discountCollection = discount.GetDiscounts(dataViewMode,  startIndex,  pageSize,  sortBy,  filter);
	 * </code></pre></p>
	 * @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	 * @param pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.productadmin.DiscountCollection
	 * @see com.mozu.api.contracts.productadmin.DiscountCollection
	 */
	public com.mozu.api.contracts.productadmin.DiscountCollection getDiscounts(com.mozu.api.DataViewMode dataViewMode, Integer startIndex, Integer pageSize, String sortBy, String filter) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountCollection> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountsClient(dataViewMode,  startIndex,  pageSize,  sortBy,  filter);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Retrieves the details of a single discount.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.GetDiscount(dataViewMode,  discountId);
	 * </code></pre></p>
	 * @param discountId Unique identifier of the discount. System-supplied and read-only.
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount getDiscount(com.mozu.api.DataViewMode dataViewMode, Integer discountId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountClient(dataViewMode,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Retrieves the localized content specified for the specified discount.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountLocalizedContent discountLocalizedContent = discount.GetDiscountContent(dataViewMode,  discountId);
	 * </code></pre></p>
	 * @param discountId Unique identifier of the discount. System-supplied and read-only.
	 * @return com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.DiscountLocalizedContent getDiscountContent(com.mozu.api.DataViewMode dataViewMode, Integer discountId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.getDiscountContentClient(dataViewMode,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Generates a random code for a coupon.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	string string = discount.GenerateRandomCoupon(dataViewMode);
	 * </code></pre></p>
	 * @return string
	 * @see string
	 */
	public String generateRandomCoupon(com.mozu.api.DataViewMode dataViewMode) throws Exception
	{
		MozuClient<String> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.generateRandomCouponClient(dataViewMode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Creates a discount.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.CreateDiscount(dataViewMode,  discount);
	 * </code></pre></p>
	 * @param discount Properties of the discount to create. Required properties: Content.Name, AmountType, StartDate, and Target.Type.
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount createDiscount(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.Discount discount) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.createDiscountClient(dataViewMode,  discount);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Modifies a discount.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	Discount discount = discount.UpdateDiscount(dataViewMode,  discount,  discountId);
	 * </code></pre></p>
	 * @param discountId Unique identifier of the discount. System-supplied and read-only.
	 * @param discount Properties of the discount to update. Required properties: Content.Name, AmountType, StartDate, and Target.Type. Any unspecified properties are set to null and boolean variables are set to false.
	 * @return com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 * @see com.mozu.api.contracts.productadmin.Discount
	 */
	public com.mozu.api.contracts.productadmin.Discount updateDiscount(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.Discount discount, Integer discountId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Discount> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.updateDiscountClient(dataViewMode,  discount,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Modifies the localized content for the specified discount. Rename the discount without modifying any other discount properties.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	DiscountLocalizedContent discountLocalizedContent = discount.UpdateDiscountContent(dataViewMode,  content,  discountId);
	 * </code></pre></p>
	 * @param discountId Unique identifier of the discount. System-supplied and read-only.
	 * @param content New Name and/or LocaleCode. Properties of the content to update. Required property: Name.
	 * @return com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 * @see com.mozu.api.contracts.productadmin.DiscountLocalizedContent
	 */
	public com.mozu.api.contracts.productadmin.DiscountLocalizedContent updateDiscountContent(com.mozu.api.DataViewMode dataViewMode, com.mozu.api.contracts.productadmin.DiscountLocalizedContent content, Integer discountId) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.DiscountLocalizedContent> client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.updateDiscountContentClient(dataViewMode,  content,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Deletes a discount specified by its discount ID.
	 * <p><pre><code>
	 *	Discount discount = new Discount();
	 *	discount.DeleteDiscount(dataViewMode,  discountId);
	 * </code></pre></p>
	 * @param discountId Unique identifier of the discount. System-supplied and read-only.
	 * @return 
	 */
	public void deleteDiscount(com.mozu.api.DataViewMode dataViewMode, Integer discountId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.DiscountClient.deleteDiscountClient(dataViewMode,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();

	}

}



