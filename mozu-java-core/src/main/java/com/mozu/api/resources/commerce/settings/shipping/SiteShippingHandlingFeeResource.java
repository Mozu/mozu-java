/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.settings.shipping;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang3.StringUtils;

/** <summary>
 * Use the Order Handling Fee subresource to configure any shipping and handling fees to apply to orders for this site.
 * </summary>
 */
public class SiteShippingHandlingFeeResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;

	
	public SiteShippingHandlingFeeResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}
	
	/**
	 * Retrieves the details of the order handling fee configured for the site.
	 * <p><pre><code>
	 *	SiteShippingHandlingFee siteshippinghandlingfee = new SiteShippingHandlingFee();
	 *	SiteShippingHandlingFee siteShippingHandlingFee = siteshippinghandlingfee.GetOrderHandlingFee();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 * @see com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 */
	public com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee getOrderHandlingFee() throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee> client = com.mozu.api.clients.commerce.settings.shipping.SiteShippingHandlingFeeClient.getOrderHandlingFeeClient();
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Creates a new order handling fee for the site.
	 * <p><pre><code>
	 *	SiteShippingHandlingFee siteshippinghandlingfee = new SiteShippingHandlingFee();
	 *	SiteShippingHandlingFee siteShippingHandlingFee = siteshippinghandlingfee.CreateOrderHandlingFee( orderHandlingFee);
	 * </code></pre></p>
	 * @param orderHandlingFee Properties of the order handling fee to assess for order shipment.
	 * @return com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 * @see com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 * @see com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 */
	public com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee createOrderHandlingFee(com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee orderHandlingFee) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee> client = com.mozu.api.clients.commerce.settings.shipping.SiteShippingHandlingFeeClient.createOrderHandlingFeeClient( orderHandlingFee);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * Updates the order handling fee amount for the site.
	 * <p><pre><code>
	 *	SiteShippingHandlingFee siteshippinghandlingfee = new SiteShippingHandlingFee();
	 *	SiteShippingHandlingFee siteShippingHandlingFee = siteshippinghandlingfee.UpdateOrderHandlingFee( orderHandlingFee);
	 * </code></pre></p>
	 * @param orderHandlingFee The combined price for all items in the order, including all selected options but excluding any discounts.
	 * @return com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 * @see com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 * @see com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee
	 */
	public com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee updateOrderHandlingFee(com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee orderHandlingFee) throws Exception
	{
		MozuClient<com.mozu.api.contracts.sitesettings.shipping.SiteShippingHandlingFee> client = com.mozu.api.clients.commerce.settings.shipping.SiteShippingHandlingFeeClient.updateOrderHandlingFeeClient( orderHandlingFee);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

}



