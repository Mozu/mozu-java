/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Facets resource to manage the facets shoppers use to filter product display results on a storefront. Facets can include categories, product attributes, or prices, and use either a range of values or discrete values.
 * </summary>
 */
public class FacetResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public FacetResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.getFacet( facetId);
	 * </code></pre></p>
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet getFacet(Integer facetId) throws Exception
	{
		return getFacet( facetId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.getFacet( facetId,  validate,  responseFields);
	 * </code></pre></p>
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param validate Validates that the product category associated with a facet is active. System-supplied and read only.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet getFacet(Integer facetId, Boolean validate, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Facet> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.getFacetClient( facetId,  validate,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	FacetSet facetSet = facet.getFacetCategoryListLegacy( categoryId);
	 * </code></pre></p>
	 * @param categoryId 
	 * @return com.mozu.api.contracts.productadmin.FacetSet
	 * @see com.mozu.api.contracts.productadmin.FacetSet
	 */
	public com.mozu.api.contracts.productadmin.FacetSet getFacetCategoryListLegacy(Integer categoryId) throws Exception
	{
		return getFacetCategoryListLegacy( categoryId,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	FacetSet facetSet = facet.getFacetCategoryListLegacy( categoryId,  includeAvailable,  validate,  responseFields);
	 * </code></pre></p>
	 * @param categoryId 
	 * @param includeAvailable 
	 * @param responseFields 
	 * @param validate 
	 * @return com.mozu.api.contracts.productadmin.FacetSet
	 * @see com.mozu.api.contracts.productadmin.FacetSet
	 */
	public com.mozu.api.contracts.productadmin.FacetSet getFacetCategoryListLegacy(Integer categoryId, Boolean includeAvailable, Boolean validate, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.FacetSet> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.getFacetCategoryListLegacyClient( categoryId,  includeAvailable,  validate,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	FacetSet facetSet = facet.getFacetCategoryList();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.productadmin.FacetSet
	 * @see com.mozu.api.contracts.productadmin.FacetSet
	 */
	public com.mozu.api.contracts.productadmin.FacetSet getFacetCategoryList() throws Exception
	{
		return getFacetCategoryList( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	FacetSet facetSet = facet.getFacetCategoryList( categoryId,  categoryCode,  includeAvailable,  validate,  responseFields);
	 * </code></pre></p>
	 * @param categoryCode 
	 * @param categoryId Unique identifier of the category to modify.
	 * @param includeAvailable If true, returns a list of the attributes and categories associated with a product type that have not been defined as a facet for the category.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param validate Validates that the product category associated with a facet is active. System-supplied and read only.
	 * @return com.mozu.api.contracts.productadmin.FacetSet
	 * @see com.mozu.api.contracts.productadmin.FacetSet
	 */
	public com.mozu.api.contracts.productadmin.FacetSet getFacetCategoryList(Integer categoryId, String categoryCode, Boolean includeAvailable, Boolean validate, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.FacetSet> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.getFacetCategoryListClient( categoryId,  categoryCode,  includeAvailable,  validate,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.addFacet( facet);
	 * </code></pre></p>
	 * @param facet Properties of the facet used to retrieve documents.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet addFacet(com.mozu.api.contracts.productadmin.Facet facet) throws Exception
	{
		return addFacet( facet,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.addFacet( facet,  responseFields);
	 * </code></pre></p>
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param facet Properties of the facet used to retrieve documents.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet addFacet(com.mozu.api.contracts.productadmin.Facet facet, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Facet> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.addFacetClient( facet,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.updateFacet( facet,  facetId);
	 * </code></pre></p>
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @param facet Properties of the facet used to retrieve documents.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet updateFacet(com.mozu.api.contracts.productadmin.Facet facet, Integer facetId) throws Exception
	{
		return updateFacet( facet,  facetId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Facet facet = facet.updateFacet( facet,  facetId,  responseFields);
	 * </code></pre></p>
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param facet Properties of the facet used to retrieve documents.
	 * @return com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 * @see com.mozu.api.contracts.productadmin.Facet
	 */
	public com.mozu.api.contracts.productadmin.Facet updateFacet(com.mozu.api.contracts.productadmin.Facet facet, Integer facetId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Facet> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.updateFacetClient( facet,  facetId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Facet facet = new Facet();
	 *	Stream stream = facet.deleteFacetById( facetId);
	 * </code></pre></p>
	 * @param facetId Unique identifier of the facet to retrieve.
	 * @return Stream
	 * @see Stream
	 */
	public java.io.InputStream deleteFacetById(Integer facetId) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.commerce.catalog.admin.FacetClient.deleteFacetByIdClient( facetId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

}



