/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin.couponsets;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class CouponResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CouponResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	AssignedDiscount assignedDiscount = coupon.getAssignedDiscounts( couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @return List<com.mozu.api.contracts.productadmin.AssignedDiscount>
	 * @see com.mozu.api.contracts.productadmin.AssignedDiscount
	 */
	public List<com.mozu.api.contracts.productadmin.AssignedDiscount> getAssignedDiscounts(String couponSetCode) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.productadmin.AssignedDiscount>> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getAssignedDiscountsClient( couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	Coupon coupon = coupon.getCoupon( couponSetCode,  couponCode);
	 * </code></pre></p>
	 * @param couponCode 
	 * @param couponSetCode 
	 * @return com.mozu.api.contracts.productadmin.Coupon
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public com.mozu.api.contracts.productadmin.Coupon getCoupon(String couponSetCode, String couponCode) throws Exception
	{
		return getCoupon( couponSetCode,  couponCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	Coupon coupon = coupon.getCoupon( couponSetCode,  couponCode,  responseFields);
	 * </code></pre></p>
	 * @param couponCode 
	 * @param couponSetCode 
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.Coupon
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public com.mozu.api.contracts.productadmin.Coupon getCoupon(String couponSetCode, String couponCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Coupon> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getCouponClient( couponSetCode,  couponCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponCollection couponCollection = coupon.getCoupons( couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @return com.mozu.api.contracts.productadmin.CouponCollection
	 * @see com.mozu.api.contracts.productadmin.CouponCollection
	 */
	public com.mozu.api.contracts.productadmin.CouponCollection getCoupons(String couponSetCode) throws Exception
	{
		return getCoupons( couponSetCode,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponCollection couponCollection = coupon.getCoupons( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.productadmin.CouponCollection
	 * @see com.mozu.api.contracts.productadmin.CouponCollection
	 */
	public com.mozu.api.contracts.productadmin.CouponCollection getCoupons(String couponSetCode, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CouponCollection> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getCouponsClient( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponSet couponSet = coupon.getCouponSet( couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @return com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 */
	public com.mozu.api.contracts.productadmin.CouponSet getCouponSet(String couponSetCode) throws Exception
	{
		return getCouponSet( couponSetCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponSet couponSet = coupon.getCouponSet( couponSetCode,  responseFields);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param responseFields 
	 * @return com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 */
	public com.mozu.api.contracts.productadmin.CouponSet getCouponSet(String couponSetCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CouponSet> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getCouponSetClient( couponSetCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.assignDiscount( assignedDiscount,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param assignedDiscount 
	 * @return 
	 * @see com.mozu.api.contracts.productadmin.AssignedDiscount
	 */
	public void assignDiscount(com.mozu.api.contracts.productadmin.AssignedDiscount assignedDiscount, String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.assignDiscountClient( assignedDiscount,  couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.addCoupons( coupons,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param coupons 
	 * @return 
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public void addCoupons(List<com.mozu.api.contracts.productadmin.Coupon> coupons, String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.addCouponsClient( coupons,  couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.deleteCoupons( couponCodes,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param couponCodes 
	 * @return 
	 * @see string
	 */
	public void deleteCoupons(List<String> couponCodes, String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.deleteCouponsClient( couponCodes,  couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponSet couponSet = coupon.updateCouponSet( couponSet,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param couponSet 
	 * @return com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 */
	public com.mozu.api.contracts.productadmin.CouponSet updateCouponSet(com.mozu.api.contracts.productadmin.CouponSet couponSet, String couponSetCode) throws Exception
	{
		return updateCouponSet( couponSet,  couponSetCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponSet couponSet = coupon.updateCouponSet( couponSet,  couponSetCode,  responseFields);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param responseFields 
	 * @param couponSet 
	 * @return com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 * @see com.mozu.api.contracts.productadmin.CouponSet
	 */
	public com.mozu.api.contracts.productadmin.CouponSet updateCouponSet(com.mozu.api.contracts.productadmin.CouponSet couponSet, String couponSetCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CouponSet> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.updateCouponSetClient( couponSet,  couponSetCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.deleteCouponSet( couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @return 
	 */
	public void deleteCouponSet(String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.deleteCouponSetClient( couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.unAssignDiscount( couponSetCode,  discountId);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param discountId 
	 * @return 
	 */
	public void unAssignDiscount(String couponSetCode, Integer discountId) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.unAssignDiscountClient( couponSetCode,  discountId);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.deleteCoupon( couponSetCode,  couponCode);
	 * </code></pre></p>
	 * @param couponCode 
	 * @param couponSetCode 
	 * @return 
	 */
	public void deleteCoupon(String couponSetCode, String couponCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.deleteCouponClient( couponSetCode,  couponCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

}



