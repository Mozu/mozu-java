/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin.couponsets;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * commerce/catalog/admin/couponsets/coupons related resources. DOCUMENT_HERE 
 * </summary>
 */
public class CouponResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CouponResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * couponsets-coupons Get GetCoupon description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	Coupon coupon = coupon.getCoupon( couponSetCode,  couponCode);
	 * </code></pre></p>
	 * @param couponCode Code associated with the coupon to remove from the cart.
	 * @param couponSetCode 
	 * @return com.mozu.api.contracts.productadmin.Coupon
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public com.mozu.api.contracts.productadmin.Coupon getCoupon(String couponSetCode, String couponCode) throws Exception
	{
		return getCoupon( couponSetCode,  couponCode,  null,  null);
	}

	/**
	 * couponsets-coupons Get GetCoupon description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	Coupon coupon = coupon.getCoupon( couponSetCode,  couponCode,  includeCounts,  responseFields);
	 * </code></pre></p>
	 * @param couponCode Code associated with the coupon to remove from the cart.
	 * @param couponSetCode 
	 * @param includeCounts 
	 * @param responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
	 * @return com.mozu.api.contracts.productadmin.Coupon
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public com.mozu.api.contracts.productadmin.Coupon getCoupon(String couponSetCode, String couponCode, Boolean includeCounts, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.Coupon> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getCouponClient( couponSetCode,  couponCode,  includeCounts,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * couponsets-coupons Get GetCoupons description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponCollection couponCollection = coupon.getCoupons( couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @return com.mozu.api.contracts.productadmin.CouponCollection
	 * @see com.mozu.api.contracts.productadmin.CouponCollection
	 */
	public com.mozu.api.contracts.productadmin.CouponCollection getCoupons(String couponSetCode) throws Exception
	{
		return getCoupons( couponSetCode,  null,  null,  null,  null,  null,  null);
	}

	/**
	 * couponsets-coupons Get GetCoupons description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	CouponCollection couponCollection = coupon.getCoupons( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  includeCounts,  responseFields);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param filter A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.
	 * @param includeCounts 
	 * @param pageSize The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
	 * @param responseFields A list or array of fields returned for a call. These fields may be customized and may be used for various types of data calls in Mozu. For example, responseFields are returned for retrieving or updating attributes, carts, and messages in Mozu.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=3`.
	 * @return com.mozu.api.contracts.productadmin.CouponCollection
	 * @see com.mozu.api.contracts.productadmin.CouponCollection
	 */
	public com.mozu.api.contracts.productadmin.CouponCollection getCoupons(String couponSetCode, Integer startIndex, Integer pageSize, String sortBy, String filter, Boolean includeCounts, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.productadmin.CouponCollection> client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.getCouponsClient( couponSetCode,  startIndex,  pageSize,  sortBy,  filter,  includeCounts,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * couponsets-coupons Post AddCoupons description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.addCoupons( coupons,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param coupons Mozu.ProductAdmin.Contracts.Coupon ApiType DOCUMENT_HERE 
	 * @return 
	 * @see com.mozu.api.contracts.productadmin.Coupon
	 */
	public void addCoupons(List<com.mozu.api.contracts.productadmin.Coupon> coupons, String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.addCouponsClient( coupons,  couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * couponsets-coupons Post DeleteCoupons description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.deleteCoupons( couponCodes,  couponSetCode);
	 * </code></pre></p>
	 * @param couponSetCode 
	 * @param couponCodes 
	 * @return 
	 * @see string
	 */
	public void deleteCoupons(List<String> couponCodes, String couponSetCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.deleteCouponsClient( couponCodes,  couponSetCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * couponsets-coupons Delete DeleteCoupon description DOCUMENT_HERE 
	 * <p><pre><code>
	 *	Coupon coupon = new Coupon();
	 *	coupon.deleteCoupon( couponSetCode,  couponCode);
	 * </code></pre></p>
	 * @param couponCode Code associated with the coupon to remove from the cart.
	 * @param couponSetCode 
	 * @return 
	 */
	public void deleteCoupon(String couponSetCode, String couponCode) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.couponsets.CouponClient.deleteCouponClient( couponSetCode,  couponCode);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

}



