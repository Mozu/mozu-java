/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.checkouts;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use this resource to manage the addresses a shopper intends to ship items to. This resource remains active while the Checkouts resource is active (the Checkouts resource only applies to sites that enable shipping to multiple destinations within the same order). The Checkouts resource remains active until the shopper submits their order.
 * </summary>
 */
public class DestinationResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public DestinationResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.getDestinations( checkoutId);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @return List<com.mozu.api.contracts.commerceruntime.fulfillment.Destination>
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public List<com.mozu.api.contracts.commerceruntime.fulfillment.Destination> getDestinations(String checkoutId) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.commerceruntime.fulfillment.Destination>> client = com.mozu.api.clients.commerce.checkouts.DestinationClient.getDestinationsClient( checkoutId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.getDestination( checkoutId,  destinationId);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destinationId The unique identifier of the destination.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination getDestination(String checkoutId, String destinationId) throws Exception
	{
		return getDestination( checkoutId,  destinationId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.getDestination( checkoutId,  destinationId,  responseFields);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destinationId The unique identifier of the destination.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination getDestination(String checkoutId, String destinationId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Destination> client = com.mozu.api.clients.commerce.checkouts.DestinationClient.getDestinationClient( checkoutId,  destinationId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.addDestination( destination,  checkoutId);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destination The destination object.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination addDestination(com.mozu.api.contracts.commerceruntime.fulfillment.Destination destination, String checkoutId) throws Exception
	{
		return addDestination( destination,  checkoutId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.addDestination( destination,  checkoutId,  responseFields);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param destination The destination object.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination addDestination(com.mozu.api.contracts.commerceruntime.fulfillment.Destination destination, String checkoutId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Destination> client = com.mozu.api.clients.commerce.checkouts.DestinationClient.addDestinationClient( destination,  checkoutId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.updateDestination( destination,  checkoutId,  destinationId);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destinationId The unique identifier of the destination.
	 * @param destination The destination object.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination updateDestination(com.mozu.api.contracts.commerceruntime.fulfillment.Destination destination, String checkoutId, String destinationId) throws Exception
	{
		return updateDestination( destination,  checkoutId,  destinationId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Destination destination = destination.updateDestination( destination,  checkoutId,  destinationId,  responseFields);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destinationId The unique identifier of the destination.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param destination The destination object.
	 * @return com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 * @see com.mozu.api.contracts.commerceruntime.fulfillment.Destination
	 */
	public com.mozu.api.contracts.commerceruntime.fulfillment.Destination updateDestination(com.mozu.api.contracts.commerceruntime.fulfillment.Destination destination, String checkoutId, String destinationId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.commerceruntime.fulfillment.Destination> client = com.mozu.api.clients.commerce.checkouts.DestinationClient.updateDestinationClient( destination,  checkoutId,  destinationId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	Destination destination = new Destination();
	 *	Stream stream = destination.removeDestination( checkoutId,  destinationId);
	 * </code></pre></p>
	 * @param checkoutId The unique identifier of the checkout.
	 * @param destinationId The unique identifier of the destination.
	 * @return Stream
	 * @see Stream
	 */
	public java.io.InputStream removeDestination(String checkoutId, String destinationId) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.commerce.checkouts.DestinationClient.removeDestinationClient( checkoutId,  destinationId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

}



