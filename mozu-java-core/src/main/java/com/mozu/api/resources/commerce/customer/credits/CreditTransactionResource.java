/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.customer.credits;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Customer Credit Transactions subresource to manage the individual transactions performed using a store credit or gift card.
 * </summary>
 */
public class CreditTransactionResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public CreditTransactionResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	CreditTransaction credittransaction = new CreditTransaction();
	 *	CreditTransactionCollection creditTransactionCollection = credittransaction.getTransactions( code);
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @return com.mozu.api.contracts.customer.credit.CreditTransactionCollection
	 * @see com.mozu.api.contracts.customer.credit.CreditTransactionCollection
	 */
	public com.mozu.api.contracts.customer.credit.CreditTransactionCollection getTransactions(String code) throws Exception
	{
		return getTransactions( code,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CreditTransaction credittransaction = new CreditTransaction();
	 *	CreditTransactionCollection creditTransactionCollection = credittransaction.getTransactions( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param filter A set of filter expressions representing the search parameters for a query. This parameter is optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for a list of supported filters.
	 * @param pageSize When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with this parameter set to 25, to get the 51st through the 75th items, set startIndex to 50.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional. Refer to [Sorting and Filtering](../../../../Developer/api-guides/sorting-filtering.htm) for more information.
	 * @param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with pageSize set to 25, to get the 51st through the 75th items, set this parameter to 50.
	 * @return com.mozu.api.contracts.customer.credit.CreditTransactionCollection
	 * @see com.mozu.api.contracts.customer.credit.CreditTransactionCollection
	 */
	public com.mozu.api.contracts.customer.credit.CreditTransactionCollection getTransactions(String code, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.credit.CreditTransactionCollection> client = com.mozu.api.clients.commerce.customer.credits.CreditTransactionClient.getTransactionsClient( code,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	CreditTransaction credittransaction = new CreditTransaction();
	 *	CreditTransaction creditTransaction = credittransaction.addTransaction( creditTransaction,  code);
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param creditTransaction Properties of a transaction performed for a customer credit that update the remaining balance of the credit.
	 * @return com.mozu.api.contracts.customer.credit.CreditTransaction
	 * @see com.mozu.api.contracts.customer.credit.CreditTransaction
	 * @see com.mozu.api.contracts.customer.credit.CreditTransaction
	 */
	public com.mozu.api.contracts.customer.credit.CreditTransaction addTransaction(com.mozu.api.contracts.customer.credit.CreditTransaction creditTransaction, String code) throws Exception
	{
		return addTransaction( creditTransaction,  code,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	CreditTransaction credittransaction = new CreditTransaction();
	 *	CreditTransaction creditTransaction = credittransaction.addTransaction( creditTransaction,  code,  responseFields);
	 * </code></pre></p>
	 * @param code User-defined code that uniqely identifies the channel group.
	 * @param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. This parameter should only be used to retrieve data. Attempting to update data using this parameter may cause data loss.
	 * @param creditTransaction Properties of a transaction performed for a customer credit that update the remaining balance of the credit.
	 * @return com.mozu.api.contracts.customer.credit.CreditTransaction
	 * @see com.mozu.api.contracts.customer.credit.CreditTransaction
	 * @see com.mozu.api.contracts.customer.credit.CreditTransaction
	 */
	public com.mozu.api.contracts.customer.credit.CreditTransaction addTransaction(com.mozu.api.contracts.customer.credit.CreditTransaction creditTransaction, String code, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.customer.credit.CreditTransaction> client = com.mozu.api.clients.commerce.customer.credits.CreditTransactionClient.addTransactionClient( creditTransaction,  code,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

}



