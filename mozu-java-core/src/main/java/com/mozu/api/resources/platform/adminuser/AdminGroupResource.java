/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.platform.adminuser;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class AdminGroupResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public AdminGroupResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroupCollection adminGroupCollection = admingroup.getAdminGroups();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.adminuser.AdminGroupCollection
	 * @see com.mozu.api.contracts.adminuser.AdminGroupCollection
	 */
	public com.mozu.api.contracts.adminuser.AdminGroupCollection getAdminGroups() throws Exception
	{
		return getAdminGroups( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroupCollection adminGroupCollection = admingroup.getAdminGroups( startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.adminuser.AdminGroupCollection
	 * @see com.mozu.api.contracts.adminuser.AdminGroupCollection
	 */
	public com.mozu.api.contracts.adminuser.AdminGroupCollection getAdminGroups(Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.adminuser.AdminGroupCollection> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.getAdminGroupsClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.getAdminGroup( groupCode);
	 * </code></pre></p>
	 * @param groupCode 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup getAdminGroup(String groupCode) throws Exception
	{
		return getAdminGroup( groupCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.getAdminGroup( groupCode,  responseFields);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param responseFields 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup getAdminGroup(String groupCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.adminuser.AdminGroup> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.getAdminGroupClient( groupCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.addAdminGroup( adminGroup);
	 * </code></pre></p>
	 * @param adminGroup 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup addAdminGroup(com.mozu.api.contracts.adminuser.AdminGroup adminGroup) throws Exception
	{
		return addAdminGroup( adminGroup,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.addAdminGroup( adminGroup,  responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @param adminGroup 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup addAdminGroup(com.mozu.api.contracts.adminuser.AdminGroup adminGroup, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.adminuser.AdminGroup> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.addAdminGroupClient( adminGroup,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.addUsers( userIds,  groupCode);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param userIds 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see string
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup addUsers(List<String> userIds, String groupCode) throws Exception
	{
		return addUsers( userIds,  groupCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.addUsers( userIds,  groupCode,  responseFields);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param responseFields 
	 * @param userIds 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see string
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup addUsers(List<String> userIds, String groupCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.adminuser.AdminGroup> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.addUsersClient( userIds,  groupCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	Stream stream = admingroup.removeUsers( userIds,  groupCode);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param userIds 
	 * @return Stream
	 * @see Stream
	 * @see string
	 */
	public java.io.InputStream removeUsers(List<String> userIds, String groupCode) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.removeUsersClient( userIds,  groupCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.updateAdminGroup( adminGroup,  groupCode);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param adminGroup 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup updateAdminGroup(com.mozu.api.contracts.adminuser.AdminGroup adminGroup, String groupCode) throws Exception
	{
		return updateAdminGroup( adminGroup,  groupCode,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	AdminGroup adminGroup = admingroup.updateAdminGroup( adminGroup,  groupCode,  responseFields);
	 * </code></pre></p>
	 * @param groupCode 
	 * @param responseFields 
	 * @param adminGroup 
	 * @return com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 * @see com.mozu.api.contracts.adminuser.AdminGroup
	 */
	public com.mozu.api.contracts.adminuser.AdminGroup updateAdminGroup(com.mozu.api.contracts.adminuser.AdminGroup adminGroup, String groupCode, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.adminuser.AdminGroup> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.updateAdminGroupClient( adminGroup,  groupCode,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AdminGroup admingroup = new AdminGroup();
	 *	Stream stream = admingroup.deleteAdminGroup( groupCode);
	 * </code></pre></p>
	 * @param groupCode 
	 * @return Stream
	 * @see Stream
	 */
	public java.io.InputStream deleteAdminGroup(String groupCode) throws Exception
	{
		MozuClient<java.io.InputStream> client = com.mozu.api.clients.platform.adminuser.AdminGroupClient.deleteAdminGroupClient( groupCode);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

}



