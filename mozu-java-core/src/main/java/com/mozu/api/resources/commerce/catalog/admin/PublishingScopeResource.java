/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.commerce.catalog.admin;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;
import com.mozu.api.DataViewMode;
/** <summary>
 * Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
 * </summary>
 */
public class PublishingScopeResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;

	private DataViewMode _dataViewMode;

	public PublishingScopeResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
		_dataViewMode = DataViewMode.Live;
	}

	public PublishingScopeResource(ApiContext apiContext, DataViewMode dataViewMode) 
	{
		_apiContext = apiContext;
		_dataViewMode = dataViewMode;
	}
		
	/**
	 * Deletes the draft version of product changes for each product code specified in the request.
	 * <p><pre><code>
	 *	PublishingScope publishingscope = new PublishingScope();
	 *	publishingscope.discardDrafts( publishScope);
	 * </code></pre></p>
	 * @param dataViewMode DataViewMode
	 * @param publishScope Describes the scope of the product publishing update, which can include individual product codes or all pending changes.
	 * @return 
	 * @see com.mozu.api.contracts.productadmin.PublishingScope
	 */
	public void discardDrafts(com.mozu.api.contracts.productadmin.PublishingScope publishScope) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.PublishingScopeClient.discardDraftsClient(_dataViewMode,  publishScope);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

	/**
	 * Publishes the draft version of product changes for each product code specified in the request, and changes the product publish state to "live".
	 * <p><pre><code>
	 *	PublishingScope publishingscope = new PublishingScope();
	 *	publishingscope.publishDrafts( publishScope);
	 * </code></pre></p>
	 * @param dataViewMode DataViewMode
	 * @param publishScope Describes the scope of the product publishing update, which can include individual product codes or all pending changes.
	 * @return 
	 * @see com.mozu.api.contracts.productadmin.PublishingScope
	 */
	public void publishDrafts(com.mozu.api.contracts.productadmin.PublishingScope publishScope) throws Exception
	{
		MozuClient client = com.mozu.api.clients.commerce.catalog.admin.PublishingScopeClient.publishDraftsClient(_dataViewMode,  publishScope);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

}



