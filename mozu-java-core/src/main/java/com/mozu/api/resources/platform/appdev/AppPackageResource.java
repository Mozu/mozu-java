/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.resources.platform.appdev;

import com.mozu.api.ApiContext;
import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class AppPackageResource {
	///
	/// <see cref="Mozu.Api.ApiContext"/>
	///
	private ApiContext _apiContext;


	public AppPackageResource(ApiContext apiContext) 
	{
		_apiContext = apiContext;
	}

	
	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	PackageSummaryCollection packageSummaryCollection = apppackage.getAllPackages();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.appdev.PackageSummaryCollection
	 * @see com.mozu.api.contracts.appdev.PackageSummaryCollection
	 */
	public com.mozu.api.contracts.appdev.PackageSummaryCollection getAllPackages() throws Exception
	{
		return getAllPackages( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	PackageSummaryCollection packageSummaryCollection = apppackage.getAllPackages( startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.appdev.PackageSummaryCollection
	 * @see com.mozu.api.contracts.appdev.PackageSummaryCollection
	 */
	public com.mozu.api.contracts.appdev.PackageSummaryCollection getAllPackages(Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.PackageSummaryCollection> client = com.mozu.api.clients.platform.appdev.AppPackageClient.getAllPackagesClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.getPackage( applicationKey);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package getPackage(String applicationKey) throws Exception
	{
		return getPackage( applicationKey,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.getPackage( applicationKey,  includeChildren,  skipDevAccountCheck,  responseFields);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param includeChildren 
	 * @param responseFields 
	 * @param skipDevAccountCheck 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package getPackage(String applicationKey, Boolean includeChildren, Boolean skipDevAccountCheck, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.Package> client = com.mozu.api.clients.platform.appdev.AppPackageClient.getPackageClient( applicationKey,  includeChildren,  skipDevAccountCheck,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	PackageCollection packageCollection = apppackage.getPackages( applicationKey);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @return com.mozu.api.contracts.appdev.PackageCollection
	 * @see com.mozu.api.contracts.appdev.PackageCollection
	 */
	public com.mozu.api.contracts.appdev.PackageCollection getPackages(String applicationKey) throws Exception
	{
		return getPackages( applicationKey,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	PackageCollection packageCollection = apppackage.getPackages( applicationKey,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.appdev.PackageCollection
	 * @see com.mozu.api.contracts.appdev.PackageCollection
	 */
	public com.mozu.api.contracts.appdev.PackageCollection getPackages(String applicationKey, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.PackageCollection> client = com.mozu.api.clients.platform.appdev.AppPackageClient.getPackagesClient( applicationKey,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	ApplicationSummary applicationSummary = apppackage.getApplicationSummaryChildren( appId);
	 * </code></pre></p>
	 * @param appId 
	 * @return List<com.mozu.api.contracts.appdev.ApplicationSummary>
	 * @see com.mozu.api.contracts.appdev.ApplicationSummary
	 */
	public List<com.mozu.api.contracts.appdev.ApplicationSummary> getApplicationSummaryChildren(String appId) throws Exception
	{
		MozuClient<List<com.mozu.api.contracts.appdev.ApplicationSummary>> client = com.mozu.api.clients.platform.appdev.AppPackageClient.getApplicationSummaryChildrenClient( appId);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	ApplicationSummaryCollection applicationSummaryCollection = apppackage.getApplicationSummaryParents();
	 * </code></pre></p>
	 * @return com.mozu.api.contracts.appdev.ApplicationSummaryCollection
	 * @see com.mozu.api.contracts.appdev.ApplicationSummaryCollection
	 */
	public com.mozu.api.contracts.appdev.ApplicationSummaryCollection getApplicationSummaryParents() throws Exception
	{
		return getApplicationSummaryParents( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	ApplicationSummaryCollection applicationSummaryCollection = apppackage.getApplicationSummaryParents( startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return com.mozu.api.contracts.appdev.ApplicationSummaryCollection
	 * @see com.mozu.api.contracts.appdev.ApplicationSummaryCollection
	 */
	public com.mozu.api.contracts.appdev.ApplicationSummaryCollection getApplicationSummaryParents(Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.ApplicationSummaryCollection> client = com.mozu.api.clients.platform.appdev.AppPackageClient.getApplicationSummaryParentsClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.clonePackage( applicationKey,  packageName);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param packageName 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package clonePackage(String applicationKey, String packageName) throws Exception
	{
		return clonePackage( applicationKey,  packageName,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.clonePackage( applicationKey,  packageName,  responseFields);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param packageName 
	 * @param responseFields 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package clonePackage(String applicationKey, String packageName, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.Package> client = com.mozu.api.clients.platform.appdev.AppPackageClient.clonePackageClient( applicationKey,  packageName,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.createNewCorePackage( packageRequest);
	 * </code></pre></p>
	 * @param packageRequest 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.PackageRequest
	 */
	public com.mozu.api.contracts.appdev.Package createNewCorePackage(com.mozu.api.contracts.appdev.PackageRequest packageRequest) throws Exception
	{
		return createNewCorePackage( packageRequest,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.createNewCorePackage( packageRequest,  responseFields);
	 * </code></pre></p>
	 * @param responseFields 
	 * @param packageRequest 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.PackageRequest
	 */
	public com.mozu.api.contracts.appdev.Package createNewCorePackage(com.mozu.api.contracts.appdev.PackageRequest packageRequest, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.Package> client = com.mozu.api.clients.platform.appdev.AppPackageClient.createNewCorePackageClient( packageRequest,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.createPackage( pkg);
	 * </code></pre></p>
	 * @param package 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package createPackage(com.mozu.api.contracts.appdev.Package pkg) throws Exception
	{
		return createPackage( pkg,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.createPackage( pkg,  projectId,  responseFields);
	 * </code></pre></p>
	 * @param projectId 
	 * @param responseFields 
	 * @param package 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package createPackage(com.mozu.api.contracts.appdev.Package pkg, Integer projectId, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.Package> client = com.mozu.api.clients.platform.appdev.AppPackageClient.createPackageClient( pkg,  projectId,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.updatePackage( pkg,  applicationKey);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param package 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package updatePackage(com.mozu.api.contracts.appdev.Package pkg, String applicationKey) throws Exception
	{
		return updatePackage( pkg,  applicationKey,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	Package package = apppackage.updatePackage( pkg,  applicationKey,  responseFields);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @param responseFields 
	 * @param package 
	 * @return com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 * @see com.mozu.api.contracts.appdev.Package
	 */
	public com.mozu.api.contracts.appdev.Package updatePackage(com.mozu.api.contracts.appdev.Package pkg, String applicationKey, String responseFields) throws Exception
	{
		MozuClient<com.mozu.api.contracts.appdev.Package> client = com.mozu.api.clients.platform.appdev.AppPackageClient.updatePackageClient( pkg,  applicationKey,  responseFields);
		client.setContext(_apiContext);
		client.executeRequest();
		return client.getResult();

	}

	/**
	 * 
	 * <p><pre><code>
	 *	AppPackage apppackage = new AppPackage();
	 *	apppackage.deletePackage( applicationKey);
	 * </code></pre></p>
	 * @param applicationKey 
	 * @return 
	 */
	public void deletePackage(String applicationKey) throws Exception
	{
		MozuClient client = com.mozu.api.clients.platform.appdev.AppPackageClient.deletePackageClient( applicationKey);
		client.setContext(_apiContext);
		client.executeRequest();
		client.cleanupHttpConnection();

	}

}



