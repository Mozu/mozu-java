/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.orders;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Billing Info subresource to manage the billing information stored for an order.
 * </summary>
 */
public class BillingInfoClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=GetBillingInfoClient( orderId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * BillingInfo billingInfo = client.Result();
	 * </code></pre></p>
	 * @param orderId Unique identifier of the order.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> getBillingInfoClient(String orderId) throws Exception
	{
		return getBillingInfoClient( orderId,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=GetBillingInfoClient( orderId,  draft,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * BillingInfo billingInfo = client.Result();
	 * </code></pre></p>
	 * @param draft If true, retrieve the draft version of the order billing information, which might include uncommitted changes.
	 * @param orderId Unique identifier of the order.
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> getBillingInfoClient(String orderId, Boolean draft, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.orders.BillingInfoUrl.getBillingInfoUrl(draft, orderId, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.BillingInfo.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=SetBillingInfoClient( billingInfo,  orderId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * BillingInfo billingInfo = client.Result();
	 * </code></pre></p>
	 * @param orderId Unique identifier of the order.
	 * @param billingInfo The properties of the order billing information to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> setBillingInfoClient(com.mozu.api.contracts.commerceruntime.payments.BillingInfo billingInfo, String orderId) throws Exception
	{
		return setBillingInfoClient( billingInfo,  orderId,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient=SetBillingInfoClient( billingInfo,  orderId,  updateMode,  version,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * BillingInfo billingInfo = client.Result();
	 * </code></pre></p>
	 * @param orderId Unique identifier of the order.
	 * @param responseFields 
	 * @param updateMode Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	 * @param version 
	 * @param billingInfo The properties of the order billing information to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.payments.BillingInfo>
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 * @see com.mozu.api.contracts.commerceruntime.payments.BillingInfo
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> setBillingInfoClient(com.mozu.api.contracts.commerceruntime.payments.BillingInfo billingInfo, String orderId, String updateMode, String version, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.orders.BillingInfoUrl.setBillingInfoUrl(orderId, responseFields, updateMode, version);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.payments.BillingInfo.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.payments.BillingInfo>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(billingInfo);
		return mozuClient;

	}

}



