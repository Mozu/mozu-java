/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce.customer;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * 
 * </summary>
 */
public class B2BAccountClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection> mozuClient=GetB2BAccountsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccountCollection b2BAccountCollection = client.Result();
	 * </code></pre></p>
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccountCollection>
	 * @see com.mozu.api.contracts.customer.B2BAccountCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection> getB2BAccountsClient() throws Exception
	{
		return getB2BAccountsClient( null,  null,  null,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection> mozuClient=GetB2BAccountsClient( startIndex,  pageSize,  sortBy,  filter,  fields,  q,  qLimit,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccountCollection b2BAccountCollection = client.Result();
	 * </code></pre></p>
	 * @param fields 
	 * @param filter 
	 * @param pageSize 
	 * @param q 
	 * @param qLimit 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccountCollection>
	 * @see com.mozu.api.contracts.customer.B2BAccountCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection> getB2BAccountsClient(Integer startIndex, Integer pageSize, String sortBy, String filter, String fields, String q, Integer qLimit, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getB2BAccountsUrl(fields, filter, pageSize, q, qLimit, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.B2BAccountCollection.class;
		MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BAccountCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=GetB2BAccountAttributeClient( accountId,  attributeFQN);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attributeFQN 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> getB2BAccountAttributeClient(Integer accountId, String attributeFQN) throws Exception
	{
		return getB2BAccountAttributeClient( accountId,  attributeFQN,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=GetB2BAccountAttributeClient( accountId,  attributeFQN,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attributeFQN 
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> getB2BAccountAttributeClient(Integer accountId, String attributeFQN, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getB2BAccountAttributeUrl(accountId, attributeFQN, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttribute.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient = (MozuClient<com.mozu.api.contracts.customer.CustomerAttribute>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient=GetB2BAccountAttributesClient( accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttributeCollection customerAttributeCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttributeCollection>
	 * @see com.mozu.api.contracts.customer.CustomerAttributeCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> getB2BAccountAttributesClient(Integer accountId) throws Exception
	{
		return getB2BAccountAttributesClient( accountId,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient=GetB2BAccountAttributesClient( accountId,  startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttributeCollection customerAttributeCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttributeCollection>
	 * @see com.mozu.api.contracts.customer.CustomerAttributeCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> getB2BAccountAttributesClient(Integer accountId, Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getB2BAccountAttributesUrl(accountId, filter, pageSize, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttributeCollection.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection> mozuClient = (MozuClient<com.mozu.api.contracts.customer.CustomerAttributeCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.UserRoleCollection> mozuClient=GetUserRolesAsyncClient( accountId,  userId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * UserRoleCollection userRoleCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param userId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.UserRoleCollection>
	 * @see com.mozu.api.contracts.customer.UserRoleCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.UserRoleCollection> getUserRolesAsyncClient(Integer accountId, String userId) throws Exception
	{
		return getUserRolesAsyncClient( accountId,  userId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.UserRoleCollection> mozuClient=GetUserRolesAsyncClient( accountId,  userId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * UserRoleCollection userRoleCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @param userId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.UserRoleCollection>
	 * @see com.mozu.api.contracts.customer.UserRoleCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.UserRoleCollection> getUserRolesAsyncClient(Integer accountId, String userId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getUserRolesAsyncUrl(accountId, responseFields, userId);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.UserRoleCollection.class;
		MozuClient<com.mozu.api.contracts.customer.UserRoleCollection> mozuClient = (MozuClient<com.mozu.api.contracts.customer.UserRoleCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUserCollection> mozuClient=GetUsersClient( accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUserCollection b2BUserCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUserCollection>
	 * @see com.mozu.api.contracts.customer.B2BUserCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUserCollection> getUsersClient(Integer accountId) throws Exception
	{
		return getUsersClient( accountId,  null,  null,  null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUserCollection> mozuClient=GetUsersClient( accountId,  startIndex,  pageSize,  sortBy,  filter,  q,  qLimit,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUserCollection b2BUserCollection = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param filter 
	 * @param pageSize 
	 * @param q 
	 * @param qLimit 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUserCollection>
	 * @see com.mozu.api.contracts.customer.B2BUserCollection
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUserCollection> getUsersClient(Integer accountId, Integer startIndex, Integer pageSize, String sortBy, String filter, String q, Integer qLimit, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getUsersUrl(accountId, filter, pageSize, q, qLimit, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.B2BUserCollection.class;
		MozuClient<com.mozu.api.contracts.customer.B2BUserCollection> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BUserCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=GetB2BAccountClient( accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> getB2BAccountClient(Integer accountId) throws Exception
	{
		return getB2BAccountClient( accountId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=GetB2BAccountClient( accountId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> getB2BAccountClient(Integer accountId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.getB2BAccountUrl(accountId, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.customer.B2BAccount.class;
		MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BAccount>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=AddAccountClient( account);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param account 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> addAccountClient(com.mozu.api.contracts.customer.B2BAccount account) throws Exception
	{
		return addAccountClient( account,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=AddAccountClient( account,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param responseFields 
	 * @param account 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> addAccountClient(com.mozu.api.contracts.customer.B2BAccount account, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.addAccountUrl(responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.customer.B2BAccount.class;
		MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BAccount>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(account);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=AddB2BAccountAttributeClient( attribute,  accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attribute 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> addB2BAccountAttributeClient(com.mozu.api.contracts.customer.CustomerAttribute attribute, Integer accountId) throws Exception
	{
		return addB2BAccountAttributeClient( attribute,  accountId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=AddB2BAccountAttributeClient( attribute,  accountId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @param attribute 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> addB2BAccountAttributeClient(com.mozu.api.contracts.customer.CustomerAttribute attribute, Integer accountId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.addB2BAccountAttributeUrl(accountId, responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttribute.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient = (MozuClient<com.mozu.api.contracts.customer.CustomerAttribute>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(attribute);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=AddUserRoleAsyncClient( accountId,  userId,  roleId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param roleId 
	 * @param userId 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> addUserRoleAsyncClient(Integer accountId, String userId, Integer roleId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.addUserRoleAsyncUrl(accountId, roleId, userId);
		String verb = "POST";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient=AddUserClient( user,  accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUser b2BUser = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param user 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUser>
	 * @see com.mozu.api.contracts.customer.B2BUser
	 * @see com.mozu.api.contracts.customer.B2BUserAndAuthInfo
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUser> addUserClient(com.mozu.api.contracts.customer.B2BUserAndAuthInfo user, Integer accountId) throws Exception
	{
		return addUserClient( user,  accountId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient=AddUserClient( user,  accountId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUser b2BUser = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @param user 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUser>
	 * @see com.mozu.api.contracts.customer.B2BUser
	 * @see com.mozu.api.contracts.customer.B2BUserAndAuthInfo
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUser> addUserClient(com.mozu.api.contracts.customer.B2BUserAndAuthInfo user, Integer accountId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.addUserUrl(accountId, responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.customer.B2BUser.class;
		MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BUser>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(user);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=UpdateB2BAccountAttributeClient( attribute,  accountId,  attributeFQN);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attributeFQN 
	 * @param attribute 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> updateB2BAccountAttributeClient(com.mozu.api.contracts.customer.CustomerAttribute attribute, Integer accountId, String attributeFQN) throws Exception
	{
		return updateB2BAccountAttributeClient( attribute,  accountId,  attributeFQN,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient=UpdateB2BAccountAttributeClient( attribute,  accountId,  attributeFQN,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * CustomerAttribute customerAttribute = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attributeFQN 
	 * @param responseFields 
	 * @param attribute 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.CustomerAttribute>
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 * @see com.mozu.api.contracts.customer.CustomerAttribute
	 */
	public static MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> updateB2BAccountAttributeClient(com.mozu.api.contracts.customer.CustomerAttribute attribute, Integer accountId, String attributeFQN, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.updateB2BAccountAttributeUrl(accountId, attributeFQN, responseFields);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.customer.CustomerAttribute.class;
		MozuClient<com.mozu.api.contracts.customer.CustomerAttribute> mozuClient = (MozuClient<com.mozu.api.contracts.customer.CustomerAttribute>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(attribute);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=RemoveUserClient( accountId,  userId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param userId 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> removeUserClient(Integer accountId, String userId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.removeUserUrl(accountId, userId);
		String verb = "PUT";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient=UpdateUserClient( user,  accountId,  userId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUser b2BUser = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param userId 
	 * @param user 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUser>
	 * @see com.mozu.api.contracts.customer.B2BUser
	 * @see com.mozu.api.contracts.customer.B2BUser
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUser> updateUserClient(com.mozu.api.contracts.customer.B2BUser user, Integer accountId, String userId) throws Exception
	{
		return updateUserClient( user,  accountId,  userId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient=UpdateUserClient( user,  accountId,  userId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BUser b2BUser = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @param userId 
	 * @param user 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BUser>
	 * @see com.mozu.api.contracts.customer.B2BUser
	 * @see com.mozu.api.contracts.customer.B2BUser
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BUser> updateUserClient(com.mozu.api.contracts.customer.B2BUser user, Integer accountId, String userId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.updateUserUrl(accountId, responseFields, userId);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.customer.B2BUser.class;
		MozuClient<com.mozu.api.contracts.customer.B2BUser> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BUser>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(user);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=UpdateAccountClient( account,  accountId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param account 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> updateAccountClient(com.mozu.api.contracts.customer.B2BAccount account, Integer accountId) throws Exception
	{
		return updateAccountClient( account,  accountId,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient=UpdateAccountClient( account,  accountId,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * B2BAccount b2BAccount = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param responseFields 
	 * @param account 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.customer.B2BAccount>
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 * @see com.mozu.api.contracts.customer.B2BAccount
	 */
	public static MozuClient<com.mozu.api.contracts.customer.B2BAccount> updateAccountClient(com.mozu.api.contracts.customer.B2BAccount account, Integer accountId, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.updateAccountUrl(accountId, responseFields);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.customer.B2BAccount.class;
		MozuClient<com.mozu.api.contracts.customer.B2BAccount> mozuClient = (MozuClient<com.mozu.api.contracts.customer.B2BAccount>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(account);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=DeleteB2BAccountAttributeClient( accountId,  attributeFQN);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param attributeFQN 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> deleteB2BAccountAttributeClient(Integer accountId, String attributeFQN) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.deleteB2BAccountAttributeUrl(accountId, attributeFQN);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<java.io.InputStream> mozuClient=RemoveUserRoleAsyncClient( accountId,  userId,  roleId);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Stream stream = client.Result();
	 * </code></pre></p>
	 * @param accountId 
	 * @param roleId 
	 * @param userId 
	 * @return Mozu.Api.MozuClient <Stream>
	 * @see Stream
	 */
	public static MozuClient<java.io.InputStream> removeUserRoleAsyncClient(Integer accountId, String userId, Integer roleId) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.customer.B2BAccountUrl.removeUserRoleAsyncUrl(accountId, roleId, userId);
		String verb = "DELETE";
		Class<?> clz = java.io.InputStream.class;
		MozuClient<java.io.InputStream> mozuClient = (MozuClient<java.io.InputStream>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



