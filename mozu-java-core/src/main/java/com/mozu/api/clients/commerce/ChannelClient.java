/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.clients.commerce;

import java.util.List;
import java.util.ArrayList;
import com.mozu.api.MozuClient;
import com.mozu.api.MozuClientFactory;
import com.mozu.api.MozuUrl;
import com.mozu.api.Headers;
import org.joda.time.DateTime;
import com.mozu.api.security.AuthTicket;
import org.apache.commons.lang.StringUtils;

/** <summary>
 * Use the Channels resource to manage the channels a company uses to create logical commercial business divisions based on region or types of sales, such as "US Online," "Amazon," or "EMEA Retail." All orders include a channel association that enables the company to perform financial reporting for each defined channel. Because channels are managed at the tenant level, you must associate all the tenant's sites with a channel. Sites that do not have a defined channel association cannot successfully submit orders.
 * </summary>
 */
public class ChannelClient {
	
	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient=GetChannelsClient();
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ChannelCollection channelCollection = client.Result();
	 * </code></pre></p>
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>
	 * @see com.mozu.api.contracts.commerceruntime.channels.ChannelCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> getChannelsClient() throws Exception
	{
		return getChannelsClient( null,  null,  null,  null,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient=GetChannelsClient( startIndex,  pageSize,  sortBy,  filter,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * ChannelCollection channelCollection = client.Result();
	 * </code></pre></p>
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>
	 * @see com.mozu.api.contracts.commerceruntime.channels.ChannelCollection
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> getChannelsClient(Integer startIndex, Integer pageSize, String sortBy, String filter, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.getChannelsUrl(filter, pageSize, responseFields, sortBy, startIndex);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.ChannelCollection.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.ChannelCollection>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=GetChannelClient( code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that identifies the channel to retrieve.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> getChannelClient(String code) throws Exception
	{
		return getChannelClient( code,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=GetChannelClient( code,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that identifies the channel to retrieve.
	 * @param responseFields 
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> getChannelClient(String code, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.getChannelUrl(code, responseFields);
		String verb = "GET";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=CreateChannelClient( channel);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param channel Properties of the channel to create.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> createChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel) throws Exception
	{
		return createChannelClient( channel,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=CreateChannelClient( channel,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param responseFields 
	 * @param channel Properties of the channel to create.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> createChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.createChannelUrl(responseFields);
		String verb = "POST";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(channel);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=UpdateChannelClient( channel,  code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that identifies the channel to update.
	 * @param channel Properties of a the channel to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> updateChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String code) throws Exception
	{
		return updateChannelClient( channel,  code,  null);
	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient=UpdateChannelClient( channel,  code,  responseFields);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * Channel channel = client.Result();
	 * </code></pre></p>
	 * @param code User-defined code that identifies the channel to update.
	 * @param responseFields 
	 * @param channel Properties of a the channel to update.
	 * @return Mozu.Api.MozuClient <com.mozu.api.contracts.commerceruntime.channels.Channel>
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 * @see com.mozu.api.contracts.commerceruntime.channels.Channel
	 */
	public static MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> updateChannelClient(com.mozu.api.contracts.commerceruntime.channels.Channel channel, String code, String responseFields) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.updateChannelUrl(code, responseFields);
		String verb = "PUT";
		Class<?> clz = com.mozu.api.contracts.commerceruntime.channels.Channel.class;
		MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel> mozuClient = (MozuClient<com.mozu.api.contracts.commerceruntime.channels.Channel>) MozuClientFactory.getInstance(clz);
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		mozuClient.setBody(channel);
		return mozuClient;

	}

	/**
	 * 
	 * <p><pre><code>
	 * MozuClient mozuClient=DeleteChannelClient( code);
	 * client.setBaseAddress(url);
	 * client.executeRequest();
	 * </code></pre></p>
	 * @param code User-defined code that identifies the channel to delete.
	 * @return Mozu.Api.MozuClient 
	 */
	public static MozuClient deleteChannelClient(String code) throws Exception
	{
		MozuUrl url = com.mozu.api.urls.commerce.ChannelUrl.deleteChannelUrl(code);
		String verb = "DELETE";
				MozuClient mozuClient = (MozuClient) MozuClientFactory.getInstance();
		mozuClient.setVerb(verb);
		mozuClient.setResourceUrl(url);
		return mozuClient;

	}

}



