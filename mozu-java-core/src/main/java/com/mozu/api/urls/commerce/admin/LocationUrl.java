/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.admin;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;
import org.joda.time.DateTime;

public class LocationUrl
{

	/**
	 * Get Resource Url for GetLocations
	 * @param filter 
	 * @param pageSize 
	 * @param responseFields 
	 * @param sortBy 
	 * @param startIndex 
	 * @return   String Resource Url
	 */
	public static MozuUrl getLocationsUrl(String filter, Integer pageSize, String responseFields, String sortBy, Integer startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/admin/locations/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}");
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("responseFields", responseFields);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetLocation
	 * @param locationCode The merchant-defined code of the location to retrieve.
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl getLocationUrl(String locationCode, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/admin/locations/{locationCode}?responseFields={responseFields}");
		formatter.formatUrl("locationCode", locationCode);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddLocation
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl addLocationUrl(String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/admin/locations/?responseFields={responseFields}");
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateLocation
	 * @param locationCode The merchant-defined code associated with the location to update.
	 * @param responseFields 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateLocationUrl(String locationCode, String responseFields)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/admin/locations/{locationCode}?responseFields={responseFields}");
		formatter.formatUrl("locationCode", locationCode);
		formatter.formatUrl("responseFields", responseFields);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteLocation
	 * @param locationCode The merchant-defined code of the location to delete.
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteLocationUrl(String locationCode)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/admin/locations/{locationCode}");
		formatter.formatUrl("locationCode", locationCode);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

