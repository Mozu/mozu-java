/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.platform.entitylists;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;


public class ListViewUrl
{

	/**
	 * Get Resource Url for GetEntityListViews
	 * @param entityListFullName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getEntityListViewsUrl(String entityListFullName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views");
		formatter.formatUrl("entityListFullName", entityListFullName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetEntityListView
	 * @param entityListFullName 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getEntityListViewUrl(String entityListFullName, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}");
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetViewEntity
	 * @param entityId 
	 * @param entityListFullName 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getViewEntityUrl(String entityId, String entityListFullName, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}/entities/{entityId}");
		formatter.formatUrl("entityId", entityId);
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetViewEntities
	 * @param entityListFullName 
	 * @param filter 
	 * @param pageSize 
	 * @param startIndex 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getViewEntitiesUrl(String entityListFullName, String filter, Integer pageSize, Integer startIndex, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}/entities?pageSize={pageSize}&startIndex={startIndex}&filter={filter}");
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("startIndex", startIndex);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetViewEntityContainer
	 * @param entityId 
	 * @param entityListFullName 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getViewEntityContainerUrl(String entityId, String entityListFullName, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}/entityContainers/{entityId}");
		formatter.formatUrl("entityId", entityId);
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetViewEntityContainers
	 * @param entityListFullName 
	 * @param filter 
	 * @param pageSize 
	 * @param startIndex 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getViewEntityContainersUrl(String entityListFullName, String filter, Integer pageSize, Integer startIndex, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}/entityContainers?pageSize={pageSize}&startIndex={startIndex}&filter={filter}");
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("startIndex", startIndex);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for CreateEntityListView
	 * @param entityListFullName 
	 * @return   String Resource Url
	 */
	public static MozuUrl createEntityListViewUrl(String entityListFullName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/");
		formatter.formatUrl("entityListFullName", entityListFullName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateEntityListView
	 * @param entityListFullName 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl updateEntityListViewUrl(String entityListFullName, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}");
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteEntityListView
	 * @param entityListFullName 
	 * @param viewName 
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteEntityListViewUrl(String entityListFullName, String viewName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/platform/entitylists/{entityListFullName}/views/{viewName}");
		formatter.formatUrl("entityListFullName", entityListFullName);
		formatter.formatUrl("viewName", viewName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

