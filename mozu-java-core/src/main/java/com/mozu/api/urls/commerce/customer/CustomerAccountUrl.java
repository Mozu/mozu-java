/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.urls.commerce.customer;

import com.mozu.api.MozuUrl;
import com.mozu.api.utils.UrlFormatter;


public class CustomerAccountUrl
{

	/**
	 * Get Resource Url for GetAccounts
	 * @param fields The fields to include in the response.
	 * @param filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	 * @param isAnonymous 
	 * @param pageSize 
	 * @param q A list of customer account search terms to use in the query when searching across customer name and email. Separate multiple search terms with a space character.
	 * @param qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	 * @param sortBy 
	 * @param startIndex 
	 * @return   String Resource Url
	 */
	public static MozuUrl getAccountsUrl(String fields, String filter, Boolean isAnonymous, Integer pageSize, String q, Integer qLimit, String sortBy, Integer startIndex)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&fields={fields}&q={q}&qLimit={qLimit}&isAnonymous={isAnonymous}");
		formatter.formatUrl("fields", fields);
		formatter.formatUrl("filter", filter);
		formatter.formatUrl("isAnonymous", isAnonymous);
		formatter.formatUrl("pageSize", pageSize);
		formatter.formatUrl("q", q);
		formatter.formatUrl("qLimit", qLimit);
		formatter.formatUrl("sortBy", sortBy);
		formatter.formatUrl("startIndex", startIndex);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetAccount
	 * @param accountId Unique identifier of the customer account to retrieve.
	 * @return   String Resource Url
	 */
	public static MozuUrl getAccountUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetLoginState
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl getLoginStateUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/loginstate");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddAccount
	 * @return   String Resource Url
	 */
	public static MozuUrl addAccountUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for ChangePassword
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl changePasswordUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/Change-Password");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddLoginToExistingCustomer
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl addLoginToExistingCustomerUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/Create-Login");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for RecomputeCustomerLifetimeValue
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl recomputeCustomerLifetimeValueUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/recomputelifetimevalue");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for SetLoginLocked
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl setLoginLockedUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/Set-Login-Locked");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for SetPasswordChangeRequired
	 * @param accountId 
	 * @return   String Resource Url
	 */
	public static MozuUrl setPasswordChangeRequiredUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}/Set-Password-Change-Required");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddAccountAndLogin
	 * @return   String Resource Url
	 */
	public static MozuUrl addAccountAndLoginUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/Add-Account-And-Login");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for AddAccounts
	 * @return   String Resource Url
	 */
	public static MozuUrl addAccountsUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/Bulk");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetLoginStateByEmailAddress
	 * @param emailAddress 
	 * @return   String Resource Url
	 */
	public static MozuUrl getLoginStateByEmailAddressUrl(String emailAddress)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/loginstatebyemailaddress?emailAddress={emailAddress}");
		formatter.formatUrl("emailAddress", emailAddress);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for GetLoginStateByUserName
	 * @param userName 
	 * @return   String Resource Url
	 */
	public static MozuUrl getLoginStateByUserNameUrl(String userName)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/loginstatebyusername?userName={userName}");
		formatter.formatUrl("userName", userName);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for ResetPassword
	 * @return   String Resource Url
	 */
	public static MozuUrl resetPasswordUrl()
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/Reset-Password");
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for UpdateAccount
	 * @param accountId Unique identifier of the customer account.
	 * @return   String Resource Url
	 */
	public static MozuUrl updateAccountUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

	/**
	 * Get Resource Url for DeleteAccount
	 * @param accountId Unique identifier of the customer account to delete.
	 * @return   String Resource Url
	 */
	public static MozuUrl deleteAccountUrl(Integer accountId)
	{
		UrlFormatter formatter = new UrlFormatter("/api/commerce/customer/accounts/{accountId}");
		formatter.formatUrl("accountId", accountId);
		return new MozuUrl(formatter.getResourceUrl(), MozuUrl.UrlLocation.TENANT_POD) ;
	}

}

