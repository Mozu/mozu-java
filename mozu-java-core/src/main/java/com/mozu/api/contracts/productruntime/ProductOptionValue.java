/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productruntime;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;

/**
 *	Represents the values that are the product option selections for a shopper to choose when ordering a product.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class ProductOptionValue implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Unique identifier of the product attribute value.
	 */
	protected Integer attributeValueId;

	public Integer getAttributeValueId() {
		return this.attributeValueId;
	}

	public void setAttributeValueId(Integer attributeValueId) {
		this.attributeValueId = attributeValueId;
	}

	/**
	 * The difference between the highest price and the lowest price.
	 */
	protected Double deltaPrice;

	public Double getDeltaPrice() {
		return this.deltaPrice;
	}

	public void setDeltaPrice(Double deltaPrice) {
		this.deltaPrice = deltaPrice;
	}

	/**
	 * The difference between the highest weight and the lowest weight.
	 */
	protected Double deltaWeight;

	public Double getDeltaWeight() {
		return this.deltaWeight;
	}

	public void setDeltaWeight(Double deltaWeight) {
		this.deltaWeight = deltaWeight;
	}

	/**
	 * If true, the product option value is the default value that the merchant supplied.
	 */
	protected Boolean isDefault;

	public Boolean getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	/**
	 * If true, the product option value is available for a shopper to choose. During configuration, this property will be false if the option value is invalid with other selected options.
	 */
	protected Boolean isEnabled;

	public Boolean getIsEnabled() {
		return this.isEnabled;
	}

	public void setIsEnabled(Boolean isEnabled) {
		this.isEnabled = isEnabled;
	}

	/**
	 * If true, the entity is selected. If false, the entity is not selected.
	 */
	protected Boolean isSelected;

	public Boolean getIsSelected() {
		return this.isSelected;
	}

	public void setIsSelected(Boolean isSelected) {
		this.isSelected = isSelected;
	}

	/**
	 * The product attribute value entered by the shopper, if applicable.
	 */
	protected Object shopperEnteredValue;

	public Object getShopperEnteredValue() {
		return this.shopperEnteredValue;
	}

	public void setShopperEnteredValue(Object shopperEnteredValue) {
		this.shopperEnteredValue = shopperEnteredValue;
	}

	/**
	 * The string value entered for a product option attribute.
	 */
	protected String stringValue;

	public String getStringValue() {
		return this.stringValue;
	}

	public void setStringValue(String stringValue) {
		this.stringValue = stringValue;
	}

	/**
	 * The value of a product option attribute.
	 */
	protected Object value;

	public Object getValue() {
		return this.value;
	}

	public void setValue(Object value) {
		this.value = value;
	}

}
