/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.sitesettings.order;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.sitesettings.order.CustomerCheckoutSettings;
import com.mozu.api.contracts.sitesettings.order.OrderProcessingSettings;
import com.mozu.api.contracts.sitesettings.order.PaymentSettings;

/**
 *	Settings used when checking out an active order.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class CheckoutSettings implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Settings for the checkout login. Choose whether or not shoppers must first login before a purchase can be processed. Choose the option for guests to purchase without logging in, prompt guests to login, or require them to login before a purchase can be completed.
	 */
	protected  CustomerCheckoutSettings customerCheckoutSettings;

	public CustomerCheckoutSettings getCustomerCheckoutSettings() {
		return this.customerCheckoutSettings;
	}

	public void setCustomerCheckoutSettings(CustomerCheckoutSettings customerCheckoutSettings) {
		this.customerCheckoutSettings = customerCheckoutSettings;
	}

	/**
	 * Credit card payment authorization setting defined for the site for order processing.
	 */
	protected  OrderProcessingSettings orderProcessingSettings;

	public OrderProcessingSettings getOrderProcessingSettings() {
		return this.orderProcessingSettings;
	}

	public void setOrderProcessingSettings(OrderProcessingSettings orderProcessingSettings) {
		this.orderProcessingSettings = orderProcessingSettings;
	}

	/**
	 * Payment gateway settings defined for the site. A payment gateway is an eCommerce application service provider that authorizes payments for eBusinesses, online retailers, and other stores that have an online commerce component.
	 */
	protected  PaymentSettings paymentSettings;

	public PaymentSettings getPaymentSettings() {
		return this.paymentSettings;
	}

	public void setPaymentSettings(PaymentSettings paymentSettings) {
		this.paymentSettings = paymentSettings;
	}


}
