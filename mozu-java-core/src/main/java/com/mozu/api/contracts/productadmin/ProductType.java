/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.AttributeInProductType;

/**
 *	A product type is like a product template.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class ProductType implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Identifier of the entity.
	 */
	protected Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * If true, this product is associated with the overall product type. There is only one BaseProductType per site group. System-supplied and read-only.
	 */
	protected Boolean isBaseProductType;

	public Boolean getIsBaseProductType() {
		return this.isBaseProductType;
	}

	public void setIsBaseProductType(Boolean isBaseProductType) {
		this.isBaseProductType = isBaseProductType;
	}

	protected Integer masterCatalogId;

	public Integer getMasterCatalogId() {
		return this.masterCatalogId;
	}

	public void setMasterCatalogId(Integer masterCatalogId) {
		this.masterCatalogId = masterCatalogId;
	}

	/**
	 * Name of the product type, such as "Shoes" or "TVs".
	 */
	protected String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * The number of products associated with this product type.
	 */
	protected Integer productCount;

	public Integer getProductCount() {
		return this.productCount;
	}

	public void setProductCount(Integer productCount) {
		this.productCount = productCount;
	}

	protected List<String> productUsages;
	public List<String> getProductUsages() {
		return this.productUsages;
	}
	public void setProductUsages(List<String> productUsages) {
		this.productUsages = productUsages;
	}

	/**
	 * Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
	 */
	protected AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * The list of product type attributes which exist as extras. Example: monogram
	 */
	protected List<AttributeInProductType> extras;
	public List<AttributeInProductType> getExtras() {
		return this.extras;
	}
	public void setExtras(List<AttributeInProductType> extras) {
		this.extras = extras;
	}

	/**
	 * The list of product type attributes which exist as options.
	 */
	protected List<AttributeInProductType> options;
	public List<AttributeInProductType> getOptions() {
		return this.options;
	}
	public void setOptions(List<AttributeInProductType> options) {
		this.options = options;
	}

	/**
	 * The list of product type attributes which exist as properties, such as color.
	 */
	protected List<AttributeInProductType> properties;
	public List<AttributeInProductType> getProperties() {
		return this.properties;
	}
	public void setProperties(List<AttributeInProductType> properties) {
		this.properties = properties;
	}

}
