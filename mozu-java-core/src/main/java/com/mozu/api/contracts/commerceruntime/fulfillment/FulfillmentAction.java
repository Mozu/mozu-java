/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.commerceruntime.fulfillment;

import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;

/**
 *	Properties of an action to perform when fulfilling an item in an order, whether through in-store pickup or direct shipping.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class FulfillmentAction implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * The name of the fulfillment action to perform for the purchased product. Options include "Ship" or "PickUp" (in-store pick-up).
	 */
	protected  String actionName;

	public String getActionName() {
		return this.actionName;
	}

	public void setActionName(String actionName) {
		this.actionName = actionName;
	}

	/**
	 * The digital package ID identifies the package to update on the order.
	 */
	protected List<String> digitalPackageIds;
	public List<String> getDigitalPackageIds() {
		return this.digitalPackageIds;
	}
	public void setDigitalPackageIds(List<String> digitalPackageIds) {
		this.digitalPackageIds = digitalPackageIds;
	}

	/**
	 * Array list of unique IDs of packages in a shipment planned for or finished a shipping fulfillment action. 
	 */
	protected List<String> packageIds;
	public List<String> getPackageIds() {
		return this.packageIds;
	}
	public void setPackageIds(List<String> packageIds) {
		this.packageIds = packageIds;
	}

	/**
	 * Array list of in-store pickups for which to perform the fulfillment action.
	 */
	protected List<String> pickupIds;
	public List<String> getPickupIds() {
		return this.pickupIds;
	}
	public void setPickupIds(List<String> pickupIds) {
		this.pickupIds = pickupIds;
	}


}
