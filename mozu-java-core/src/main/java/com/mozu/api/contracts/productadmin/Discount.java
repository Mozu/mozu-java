/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.DiscountCondition;
import com.mozu.api.contracts.productadmin.DiscountLocalizedContent;
import com.mozu.api.contracts.productadmin.DiscountTarget;
import com.mozu.api.contracts.productadmin.ThresholdMessage;

/**
 *	Discount used to calculate SalePrice. Includes coupon code if applicable, amount of the discount, and discount savings. Discounts can be either an absolute price or a percentage off. The sale price beats any discounts.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Discount implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	protected  Double amount;

	public Double getAmount() {
		return this.amount;
	}

	public void setAmount(Double amount) {
		this.amount = amount;
	}

	protected  String amountType;

	public String getAmountType() {
		return this.amountType;
	}

	public void setAmountType(String amountType) {
		this.amountType = amountType;
	}

	protected  Boolean canBeDeleted;

	public Boolean getCanBeDeleted() {
		return this.canBeDeleted;
	}

	public void setCanBeDeleted(Boolean canBeDeleted) {
		this.canBeDeleted = canBeDeleted;
	}

	protected  Boolean canBeStackedUpon;

	public Boolean getCanBeStackedUpon() {
		return this.canBeStackedUpon;
	}

	public void setCanBeStackedUpon(Boolean canBeStackedUpon) {
		this.canBeStackedUpon = canBeStackedUpon;
	}

	protected  Integer currentRedemptionCount;

	public Integer getCurrentRedemptionCount() {
		return this.currentRedemptionCount;
	}

	public void setCurrentRedemptionCount(Integer currentRedemptionCount) {
		this.currentRedemptionCount = currentRedemptionCount;
	}

	protected  Boolean doesNotApplyToMultiShipToOrders;

	public Boolean getDoesNotApplyToMultiShipToOrders() {
		return this.doesNotApplyToMultiShipToOrders;
	}

	public void setDoesNotApplyToMultiShipToOrders(Boolean doesNotApplyToMultiShipToOrders) {
		this.doesNotApplyToMultiShipToOrders = doesNotApplyToMultiShipToOrders;
	}

	protected  Boolean doesNotApplyToProductsWithSalePrice;

	public Boolean getDoesNotApplyToProductsWithSalePrice() {
		return this.doesNotApplyToProductsWithSalePrice;
	}

	public void setDoesNotApplyToProductsWithSalePrice(Boolean doesNotApplyToProductsWithSalePrice) {
		this.doesNotApplyToProductsWithSalePrice = doesNotApplyToProductsWithSalePrice;
	}

	/**
	 * If true, this discount does not apply to a line item product with a defined sale price. The default is false, which applies the discount to products with and without defined sale prices.
	 */
	protected  Boolean doesNotApplyToSalePrice;

	public Boolean getDoesNotApplyToSalePrice() {
		return this.doesNotApplyToSalePrice;
	}

	public void setDoesNotApplyToSalePrice(Boolean doesNotApplyToSalePrice) {
		this.doesNotApplyToSalePrice = doesNotApplyToSalePrice;
	}

	protected  Boolean hasPurchaseConditions;

	public Boolean getHasPurchaseConditions() {
		return this.hasPurchaseConditions;
	}

	public void setHasPurchaseConditions(Boolean hasPurchaseConditions) {
		this.hasPurchaseConditions = hasPurchaseConditions;
	}

	protected  Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	protected List<String> includedPriceLists;
	public List<String> getIncludedPriceLists() {
		return this.includedPriceLists;
	}
	public void setIncludedPriceLists(List<String> includedPriceLists) {
		this.includedPriceLists = includedPriceLists;
	}

	protected  Boolean isBxGx;

	public Boolean getIsBxGx() {
		return this.isBxGx;
	}

	public void setIsBxGx(Boolean isBxGx) {
		this.isBxGx = isBxGx;
	}

	protected  Double maximumDiscountImpactPerOrder;

	public Double getMaximumDiscountImpactPerOrder() {
		return this.maximumDiscountImpactPerOrder;
	}

	public void setMaximumDiscountImpactPerOrder(Double maximumDiscountImpactPerOrder) {
		this.maximumDiscountImpactPerOrder = maximumDiscountImpactPerOrder;
	}

	protected  Double maximumDiscountImpactPerRedemption;

	public Double getMaximumDiscountImpactPerRedemption() {
		return this.maximumDiscountImpactPerRedemption;
	}

	public void setMaximumDiscountImpactPerRedemption(Double maximumDiscountImpactPerRedemption) {
		this.maximumDiscountImpactPerRedemption = maximumDiscountImpactPerRedemption;
	}

	protected  Integer maximumRedemptionsPerOrder;

	public Integer getMaximumRedemptionsPerOrder() {
		return this.maximumRedemptionsPerOrder;
	}

	public void setMaximumRedemptionsPerOrder(Integer maximumRedemptionsPerOrder) {
		this.maximumRedemptionsPerOrder = maximumRedemptionsPerOrder;
	}

	/**
	 * The maximum number of times an individual shopper can redeem the discount.
	 */
	protected  Integer maximumUsesPerUser;

	public Integer getMaximumUsesPerUser() {
		return this.maximumUsesPerUser;
	}

	public void setMaximumUsesPerUser(Integer maximumUsesPerUser) {
		this.maximumUsesPerUser = maximumUsesPerUser;
	}

	protected  Boolean preventLineItemShippingDiscounts;

	public Boolean getPreventLineItemShippingDiscounts() {
		return this.preventLineItemShippingDiscounts;
	}

	public void setPreventLineItemShippingDiscounts(Boolean preventLineItemShippingDiscounts) {
		this.preventLineItemShippingDiscounts = preventLineItemShippingDiscounts;
	}

	protected  Boolean preventOrderProductDiscounts;

	public Boolean getPreventOrderProductDiscounts() {
		return this.preventOrderProductDiscounts;
	}

	public void setPreventOrderProductDiscounts(Boolean preventOrderProductDiscounts) {
		this.preventOrderProductDiscounts = preventOrderProductDiscounts;
	}

	protected  Boolean preventOrderShippingDiscounts;

	public Boolean getPreventOrderShippingDiscounts() {
		return this.preventOrderShippingDiscounts;
	}

	public void setPreventOrderShippingDiscounts(Boolean preventOrderShippingDiscounts) {
		this.preventOrderShippingDiscounts = preventOrderShippingDiscounts;
	}

	protected  String purchaseRequirementType;

	public String getPurchaseRequirementType() {
		return this.purchaseRequirementType;
	}

	public void setPurchaseRequirementType(String purchaseRequirementType) {
		this.purchaseRequirementType = purchaseRequirementType;
	}

	protected  String scope;

	public String getScope() {
		return this.scope;
	}

	public void setScope(String scope) {
		this.scope = scope;
	}

	protected  Integer stackingLayer;

	public Integer getStackingLayer() {
		return this.stackingLayer;
	}

	public void setStackingLayer(Integer stackingLayer) {
		this.stackingLayer = stackingLayer;
	}

	protected  String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * List of conditions that must be met for the discount to apply.
	 */
	protected  DiscountCondition conditions;

	public DiscountCondition getConditions() {
		return this.conditions;
	}

	public void setConditions(DiscountCondition conditions) {
		this.conditions = conditions;
	}

	protected  DiscountLocalizedContent content;

	public DiscountLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(DiscountLocalizedContent content) {
		this.content = content;
	}

	protected  DiscountTarget target;

	public DiscountTarget getTarget() {
		return this.target;
	}

	public void setTarget(DiscountTarget target) {
		this.target = target;
	}

	protected  ThresholdMessage thresholdMessage;

	public ThresholdMessage getThresholdMessage() {
		return this.thresholdMessage;
	}

	public void setThresholdMessage(ThresholdMessage thresholdMessage) {
		this.thresholdMessage = thresholdMessage;
	}


}
