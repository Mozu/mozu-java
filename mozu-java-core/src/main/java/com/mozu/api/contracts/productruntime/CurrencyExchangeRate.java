/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productruntime;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;

/**
 *	Mozu.ProductAdmin.Contracts.CurrencyExchangeRate ApiType DOCUMENT_HERE 
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class CurrencyExchangeRate implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * decimalPlaces ApiType DOCUMENT_HERE 
	 */
	protected  Integer decimalPlaces;

	public Integer getDecimalPlaces() {
		return this.decimalPlaces;
	}

	public void setDecimalPlaces(Integer decimalPlaces) {
		this.decimalPlaces = decimalPlaces;
	}

	/**
	 * The code of the original currency that the new currency equivalent is being calculated from.
	 */
	protected  String fromCurrencyCode;

	public String getFromCurrencyCode() {
		return this.fromCurrencyCode;
	}

	public void setFromCurrencyCode(String fromCurrencyCode) {
		this.fromCurrencyCode = fromCurrencyCode;
	}

	/**
	 * The multiplier that is used to calculate the equivalent between two currencies.
	 */
	protected  Double multiplier;

	public Double getMultiplier() {
		return this.multiplier;
	}

	public void setMultiplier(Double multiplier) {
		this.multiplier = multiplier;
	}

	/**
	 * The exact rate of the given currency exchange.
	 */
	protected  Double rate;

	public Double getRate() {
		return this.rate;
	}

	public void setRate(Double rate) {
		this.rate = rate;
	}

	/**
	 * referenceData ApiType DOCUMENT_HERE 
	 */
	protected  String referenceData;

	public String getReferenceData() {
		return this.referenceData;
	}

	public void setReferenceData(String referenceData) {
		this.referenceData = referenceData;
	}

	/**
	 * roundingStrategy ApiType DOCUMENT_HERE 
	 */
	protected  Integer roundingStrategy;

	public Integer getRoundingStrategy() {
		return this.roundingStrategy;
	}

	public void setRoundingStrategy(Integer roundingStrategy) {
		this.roundingStrategy = roundingStrategy;
	}

	/**
	 * The code of the new currency that the original currency's equivalent is being calculated to.
	 */
	protected  String toCurrencyCode;

	public String getToCurrencyCode() {
		return this.toCurrencyCode;
	}

	public void setToCurrencyCode(String toCurrencyCode) {
		this.toCurrencyCode = toCurrencyCode;
	}


}
