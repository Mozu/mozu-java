/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.shippingruntime;

import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import com.mozu.api.contracts.shippingruntime.CustomAttribute;
import com.mozu.api.contracts.core.Address;
import com.mozu.api.contracts.shippingruntime.RateRequestItem;

/**
 *	Properties required to request a shipping rate calculation.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class RateRequest implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * List of shipping carriers for which to retrieve shipping rate information.
	 */
	protected List<String> carrierIds;
	public List<String> getCarrierIds() {
		return this.carrierIds;
	}
	public void setCarrierIds(List<String> carrierIds) {
		this.carrierIds = carrierIds;
	}

	/**
	 * The date and time the shipment will be shipped to the shopper.
	 */
	protected DateTime estimatedShipmentDate;

	public DateTime getEstimatedShipmentDate() {
		return this.estimatedShipmentDate;
	}

	public void setEstimatedShipmentDate(DateTime estimatedShipmentDate) {
		this.estimatedShipmentDate = estimatedShipmentDate;
	}

	/**
	 * If true, the destination address associated with the shipping rate request is a commercial address.
	 */
	protected Boolean isDestinationAddressCommercial;

	public Boolean getIsDestinationAddressCommercial() {
		return this.isDestinationAddressCommercial;
	}

	public void setIsDestinationAddressCommercial(Boolean isDestinationAddressCommercial) {
		this.isDestinationAddressCommercial = isDestinationAddressCommercial;
	}

	/**
	 * 3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
	 */
	protected String isoCurrencyCode;

	public String getIsoCurrencyCode() {
		return this.isoCurrencyCode;
	}

	public void setIsoCurrencyCode(String isoCurrencyCode) {
		this.isoCurrencyCode = isoCurrencyCode;
	}

	/**
	 * The total amount of the order used to calculate the shipping rate estimate.
	 */
	protected Double orderTotal;

	public Double getOrderTotal() {
		return this.orderTotal;
	}

	public void setOrderTotal(Double orderTotal) {
		this.orderTotal = orderTotal;
	}

	/**
	 * The shipping methods associated with this request.
	 */
	protected List<String> shippingServiceTypes;
	public List<String> getShippingServiceTypes() {
		return this.shippingServiceTypes;
	}
	public void setShippingServiceTypes(List<String> shippingServiceTypes) {
		this.shippingServiceTypes = shippingServiceTypes;
	}

	/**
	 * List of key-value pairs that represent custom attributes associated with the request.
	 */
	protected List<CustomAttribute> customAttributes;
	public List<CustomAttribute> getCustomAttributes() {
		return this.customAttributes;
	}
	public void setCustomAttributes(List<CustomAttribute> customAttributes) {
		this.customAttributes = customAttributes;
	}

	protected com.fasterxml.jackson.databind.JsonNode data;

	public com.fasterxml.jackson.databind.JsonNode getData() {
		return this.data;
	}

	public void setData(com.fasterxml.jackson.databind.JsonNode data) {
		this.data = data;
	}

	/**
	 * The physical address to which the shipment will ship.
	 */
	protected Address destinationAddress;

	public Address getDestinationAddress() {
		return this.destinationAddress;
	}

	public void setDestinationAddress(Address destinationAddress) {
		this.destinationAddress = destinationAddress;
	}

	/**
	 * List of items to include in the shipping rate request.
	 */
	protected List<RateRequestItem> items;
	public List<RateRequestItem> getItems() {
		return this.items;
	}
	public void setItems(List<RateRequestItem> items) {
		this.items = items;
	}

	/**
	 * The physical address from which the shipment will ship.
	 */
	protected Address originAddress;

	public Address getOriginAddress() {
		return this.originAddress;
	}

	public void setOriginAddress(Address originAddress) {
		this.originAddress = originAddress;
	}

}
