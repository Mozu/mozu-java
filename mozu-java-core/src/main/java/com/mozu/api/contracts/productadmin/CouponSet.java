/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;

/**
 *	Mozu.ProductAdmin.Contracts.CouponSet ApiType DOCUMENT_HERE 
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class CouponSet implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * ReadOnly sum of all redemptions for this coupon. Use "counts" response group.
	 */
	protected  Integer assignedDiscountCount;

	public Integer getAssignedDiscountCount() {
		return this.assignedDiscountCount;
	}

	public void setAssignedDiscountCount(Integer assignedDiscountCount) {
		this.assignedDiscountCount = assignedDiscountCount;
	}

	/**
	 * Signifies that the coupon has not been exported and can be updated ReadOnly
	 */
	protected  Boolean canBeDeleted;

	public Boolean getCanBeDeleted() {
		return this.canBeDeleted;
	}

	public void setCanBeDeleted(Boolean canBeDeleted) {
		this.canBeDeleted = canBeDeleted;
	}

	/**
	 * Count of associated couponCodes. Must use "counts" response group to get this value ReadOnly
	 */
	protected  Integer couponCodeCount;

	public Integer getCouponCodeCount() {
		return this.couponCodeCount;
	}

	public void setCouponCodeCount(Integer couponCodeCount) {
		this.couponCodeCount = couponCodeCount;
	}

	/**
	 * Determines if the coupon is a persisted list of codes (static) or a list based on generated specification (dynamic).
	 */
	protected  String couponCodeType;

	public String getCouponCodeType() {
		return this.couponCodeType;
	}

	public void setCouponCodeType(String couponCodeType) {
		this.couponCodeType = couponCodeType;
	}

	/**
	 * Unique tenant supplied identifier. Used as the prefix for generated sets. Required System generated if left null.
	 */
	protected  String couponSetCode;

	public String getCouponSetCode() {
		return this.couponSetCode;
	}

	public void setCouponSetCode(String couponSetCode) {
		this.couponSetCode = couponSetCode;
	}

	/**
	 * Date and time that the coupon codes becomes expired
	 */
	protected  DateTime endDate;

	public DateTime getEndDate() {
		return this.endDate;
	}

	public void setEndDate(DateTime endDate) {
		this.endDate = endDate;
	}

	/**
	 * Unique identifier of the source product property. For a product field it will be the name of the field. For a product attribute it will be the Attribute FQN. 
	 */
	protected  Integer id;

	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Maximum number of times any code can de used. Must be null, &gt;=1 or -1. Defaults to 1 on creation if null. -1 indicates unlimited.
	 */
	protected  Integer maxRedemptionsPerCouponCode;

	public Integer getMaxRedemptionsPerCouponCode() {
		return this.maxRedemptionsPerCouponCode;
	}

	public void setMaxRedemptionsPerCouponCode(Integer maxRedemptionsPerCouponCode) {
		this.maxRedemptionsPerCouponCode = maxRedemptionsPerCouponCode;
	}

	/**
	 * Maximum number of times any single user can redeem any code. Must be null, &gt;=1 or -1. Defaults to 1 on creation if null. -1 indicates unlimited.
	 */
	protected  Integer maxRedemptionsPerUser;

	public Integer getMaxRedemptionsPerUser() {
		return this.maxRedemptionsPerUser;
	}

	public void setMaxRedemptionsPerUser(Integer maxRedemptionsPerUser) {
		this.maxRedemptionsPerUser = maxRedemptionsPerUser;
	}

	/**
	 * The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
	 */
	protected  String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * ReadOnly count of all redemptions for this coupon set.
	 */
	protected  Integer redemptionCount;

	public Integer getRedemptionCount() {
		return this.redemptionCount;
	}

	public void setRedemptionCount(Integer redemptionCount) {
		this.redemptionCount = redemptionCount;
	}

	/**
	 * Sets the number of codes to generate for dynamic coupons Required when CouponCodeType is "Dynamic"
	 */
	protected  Integer setSize;

	public Integer getSetSize() {
		return this.setSize;
	}

	public void setSetSize(Integer setSize) {
		this.setSize = setSize;
	}

	/**
	 * The date and time in UTC format that the coupon codes in the coupon set become active.
	 */
	protected  DateTime startDate;

	public DateTime getStartDate() {
		return this.startDate;
	}

	public void setStartDate(DateTime startDate) {
		this.startDate = startDate;
	}

	/**
	 * The current status of an object. This status is specific to the object including payment (New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack), discount (Active, Scheduled, or Expired), returns (ReturnAuthorized), tenant, package (Fulfilled or NotFulfilled), application, master and product catalogs, orders (Pending, Submitted, Processing, Pending Review, Closed, or Canceled), and order validation results (Pass, Fail, Error, or Review).
	 */
	protected  String status;

	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	/**
	 * Basic audit info about the object, including date, time, and user account. Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
	 */
	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}


}
