/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.customer;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.UserRole;

/**
 *	Mozu.Customer.Contracts.B2BUser ApiType DOCUMENT_HERE 
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class B2BUser implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Indicates if the customer account is opted to receive marketing materials. If true, the customer account is opted in for receiving the content.
	 */
	protected  Boolean acceptsMarketing;

	public Boolean getAcceptsMarketing() {
		return this.acceptsMarketing;
	}

	public void setAcceptsMarketing(Boolean acceptsMarketing) {
		this.acceptsMarketing = acceptsMarketing;
	}

	/**
	 * The email address for the customer account and contact. This email may be used for login to the storefront and for subscription mailing lists.
	 */
	protected  String emailAddress;

	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	/**
	 * The full first name of a customer or contact name.
	 */
	protected  String firstName;

	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	/**
	 * hasExternalPassword ApiType DOCUMENT_HERE 
	 */
	protected  Boolean hasExternalPassword;

	public Boolean getHasExternalPassword() {
		return this.hasExternalPassword;
	}

	public void setHasExternalPassword(Boolean hasExternalPassword) {
		this.hasExternalPassword = hasExternalPassword;
	}

	/**
	 * Indicates if the object or feature is active.
	 */
	protected  Boolean isActive;

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	 * Indicates if a customer account and associated data is locked. If true, the user account is locked due to multiple failed authentication attempts. The user cannot login until the account is unlocked.
	 */
	protected  Boolean isLocked;

	public Boolean getIsLocked() {
		return this.isLocked;
	}

	public void setIsLocked(Boolean isLocked) {
		this.isLocked = isLocked;
	}

	/**
	 * isRemoved ApiType DOCUMENT_HERE 
	 */
	protected  Boolean isRemoved;

	public Boolean getIsRemoved() {
		return this.isRemoved;
	}

	public void setIsRemoved(Boolean isRemoved) {
		this.isRemoved = isRemoved;
	}

	/**
	 * The full last name of a customer or contact name.
	 */
	protected  String lastName;

	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	/**
	 * The two character locale code, per the country code provided. This code determines the localized content to use and display.
	 */
	protected  String localeCode;

	public String getLocaleCode() {
		return this.localeCode;
	}

	public void setLocaleCode(String localeCode) {
		this.localeCode = localeCode;
	}

	/**
	 * Unique identifier of the customer account (shopper or system user). System-supplied and read-only. If the shopper user is anonymous, the user ID represents a system-generated user ID string.
	 */
	protected  String userId;

	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	/**
	 * The user name associated with the user profile. The customer uses the user name to access the account.
	 */
	protected  String userName;

	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	/**
	 * roles ApiType DOCUMENT_HERE 
	 */
	protected List<UserRole> roles;
	public List<UserRole> getRoles() {
		return this.roles;
	}
	public void setRoles(List<UserRole> roles) {
		this.roles = roles;
	}


}
