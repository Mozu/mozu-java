/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.paymentservice;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.paymentservice.GatewayCredentialFieldDefinition;
import com.mozu.api.contracts.paymentservice.PreAuthorizeDefinition;
import com.mozu.api.contracts.paymentservice.SupportedCard;

/**
 *	Properties of the payment gateway.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class GatewayDefinition implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * The 2-letter geographic code representing the country for the physical or mailing address. Currently limited to the US.
	 */
	protected  String countryCode;

	public String getCountryCode() {
		return this.countryCode;
	}

	public void setCountryCode(String countryCode) {
		this.countryCode = countryCode;
	}

	/**
	 * Unique identifier of the source property, such as a catalog, discount, order, or email template.For a product field it will be the name of the field.For a category ID, must be a positive integer not greater than 2000000. By default,  auto-generates a category ID when categories are created. If you want to specify an ID during creation (which preserves category link relationships when migrating tenant data from one sandbox to another), you must also include the  query string in the endpoint. For example, . Then, use the  property to specify the desired category ID.For a product attribute it will be the Attribute FQN.For a document, the ID must be specified as a 32 character, case-insensitive, alphanumeric string. You can specify the ID as 32 sequential characters or as groups separated by dashes in the format 8-4-4-4-12. For example, or.For email templates, the ID must be one of the following values:			
	 */
	protected  String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	/**
	 * The implementing type name of the integration with the payment gateway.
	 */
	protected  String integrationImplTypeName;

	public String getIntegrationImplTypeName() {
		return this.integrationImplTypeName;
	}

	public void setIntegrationImplTypeName(String integrationImplTypeName) {
		this.integrationImplTypeName = integrationImplTypeName;
	}

	/**
	 * The user supplied name that appears in . You can use this field for identification purposes.
	 */
	protected  String name;

	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * URL of the production payment service.
	 */
	protected  String prodServiceURL;

	public String getProdServiceURL() {
		return this.prodServiceURL;
	}

	public void setProdServiceURL(String prodServiceURL) {
		this.prodServiceURL = prodServiceURL;
	}

	/**
	 * URL of the test payment service environment.
	 */
	protected  String testServiceURL;

	public String getTestServiceURL() {
		return this.testServiceURL;
	}

	public void setTestServiceURL(String testServiceURL) {
		this.testServiceURL = testServiceURL;
	}

	/**
	 * Credential fields for the payment gateway. For security purposes,  does not return these credential fields.
	 */
	protected List<GatewayCredentialFieldDefinition> credentialDefinitions;
	public List<GatewayCredentialFieldDefinition> getCredentialDefinitions() {
		return this.credentialDefinitions;
	}
	public void setCredentialDefinitions(List<GatewayCredentialFieldDefinition> credentialDefinitions) {
		this.credentialDefinitions = credentialDefinitions;
	}

	/**
	 * Definition of the preauthorization gateway.
	 */
	protected  PreAuthorizeDefinition preAuthorizeDefinition;

	public PreAuthorizeDefinition getPreAuthorizeDefinition() {
		return this.preAuthorizeDefinition;
	}

	public void setPreAuthorizeDefinition(PreAuthorizeDefinition preAuthorizeDefinition) {
		this.preAuthorizeDefinition = preAuthorizeDefinition;
	}

	/**
	 * The types of credit cards supported by the payment gateway.
	 */
	protected List<SupportedCard> supportedCards;
	public List<SupportedCard> getSupportedCards() {
		return this.supportedCards;
	}
	public void setSupportedCards(List<SupportedCard> supportedCards) {
		this.supportedCards = supportedCards;
	}


}
