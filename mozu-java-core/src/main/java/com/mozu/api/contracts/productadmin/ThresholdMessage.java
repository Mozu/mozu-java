/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.ThresholdMessageLocalizedContent;

/**
 *	Mozu.ProductAdmin.Contracts.ThresholdMessage ApiType DOCUMENT_HERE 
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class ThresholdMessage implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * The unique identifier of the discount.
	 */
	protected  Integer discountId;

	public Integer getDiscountId() {
		return this.discountId;
	}

	public void setDiscountId(Integer discountId) {
		this.discountId = discountId;
	}

	/**
	 * Indicates if the object or feature is active.
	 */
	protected  Boolean isActive;

	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	/**
	 * requiresCouponCode ApiType DOCUMENT_HERE 
	 */
	protected  Boolean requiresCouponCode;

	public Boolean getRequiresCouponCode() {
		return this.requiresCouponCode;
	}

	public void setRequiresCouponCode(Boolean requiresCouponCode) {
		this.requiresCouponCode = requiresCouponCode;
	}

	/**
	 * showInCart ApiType DOCUMENT_HERE 
	 */
	protected  Boolean showInCart;

	public Boolean getShowInCart() {
		return this.showInCart;
	}

	public void setShowInCart(Boolean showInCart) {
		this.showInCart = showInCart;
	}

	/**
	 * showOnCheckout ApiType DOCUMENT_HERE 
	 */
	protected  Boolean showOnCheckout;

	public Boolean getShowOnCheckout() {
		return this.showOnCheckout;
	}

	public void setShowOnCheckout(Boolean showOnCheckout) {
		this.showOnCheckout = showOnCheckout;
	}

	/**
	 * thresholdValue ApiType DOCUMENT_HERE 
	 */
	protected  Double thresholdValue;

	public Double getThresholdValue() {
		return this.thresholdValue;
	}

	public void setThresholdValue(Double thresholdValue) {
		this.thresholdValue = thresholdValue;
	}

	/**
	 * Basic audit info about the object, including date, time, and user account. This data may be captured when creating, updating, and removing data.
	 */
	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * Localizable content (such as a name and/or description) for an attribute. The content may be localized when displayed according to the locale code specified by the master catalog. Content can include descriptive text for product extensible attributes, catalog-level descriptions (displayed if isContentOverriden is true), product bundles, and customer account notes.
	 */
	protected  ThresholdMessageLocalizedContent content;

	public ThresholdMessageLocalizedContent getContent() {
		return this.content;
	}

	public void setContent(ThresholdMessageLocalizedContent content) {
		this.content = content;
	}


}
