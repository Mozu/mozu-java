/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin;

import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import com.mozu.api.contracts.productadmin.CustomerSegment;
import com.mozu.api.contracts.productadmin.CategoryDiscountCondition;
import com.mozu.api.contracts.productadmin.ProductDiscountCondition;

@JsonIgnoreProperties(ignoreUnknown = true)
public class DiscountCondition implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	protected String couponCode;

	public String getCouponCode() {
		return this.couponCode;
	}

	public void setCouponCode(String couponCode) {
		this.couponCode = couponCode;
	}

	protected DateTime expirationDate;

	public DateTime getExpirationDate() {
		return this.expirationDate;
	}

	public void setExpirationDate(DateTime expirationDate) {
		this.expirationDate = expirationDate;
	}

	protected Integer maximumRedemptionsPerOrder;

	public Integer getMaximumRedemptionsPerOrder() {
		return this.maximumRedemptionsPerOrder;
	}

	public void setMaximumRedemptionsPerOrder(Integer maximumRedemptionsPerOrder) {
		this.maximumRedemptionsPerOrder = maximumRedemptionsPerOrder;
	}

	protected Integer maxRedemptionCount;

	public Integer getMaxRedemptionCount() {
		return this.maxRedemptionCount;
	}

	public void setMaxRedemptionCount(Integer maxRedemptionCount) {
		this.maxRedemptionCount = maxRedemptionCount;
	}

	protected Double minimumCategorySubtotalBeforeDiscounts;

	public Double getMinimumCategorySubtotalBeforeDiscounts() {
		return this.minimumCategorySubtotalBeforeDiscounts;
	}

	public void setMinimumCategorySubtotalBeforeDiscounts(Double minimumCategorySubtotalBeforeDiscounts) {
		this.minimumCategorySubtotalBeforeDiscounts = minimumCategorySubtotalBeforeDiscounts;
	}

	protected Double minimumLifetimeValueAmount;

	public Double getMinimumLifetimeValueAmount() {
		return this.minimumLifetimeValueAmount;
	}

	public void setMinimumLifetimeValueAmount(Double minimumLifetimeValueAmount) {
		this.minimumLifetimeValueAmount = minimumLifetimeValueAmount;
	}

	protected Double minimumOrderAmount;

	public Double getMinimumOrderAmount() {
		return this.minimumOrderAmount;
	}

	public void setMinimumOrderAmount(Double minimumOrderAmount) {
		this.minimumOrderAmount = minimumOrderAmount;
	}

	protected Integer minimumQuantityProductsRequiredInCategories;

	public Integer getMinimumQuantityProductsRequiredInCategories() {
		return this.minimumQuantityProductsRequiredInCategories;
	}

	public void setMinimumQuantityProductsRequiredInCategories(Integer minimumQuantityProductsRequiredInCategories) {
		this.minimumQuantityProductsRequiredInCategories = minimumQuantityProductsRequiredInCategories;
	}

	protected Integer minimumQuantityRequiredProducts;

	public Integer getMinimumQuantityRequiredProducts() {
		return this.minimumQuantityRequiredProducts;
	}

	public void setMinimumQuantityRequiredProducts(Integer minimumQuantityRequiredProducts) {
		this.minimumQuantityRequiredProducts = minimumQuantityRequiredProducts;
	}

	protected Boolean requiresAuthenticatedUser;

	public Boolean getRequiresAuthenticatedUser() {
		return this.requiresAuthenticatedUser;
	}

	public void setRequiresAuthenticatedUser(Boolean requiresAuthenticatedUser) {
		this.requiresAuthenticatedUser = requiresAuthenticatedUser;
	}

	protected Boolean requiresCoupon;

	public Boolean getRequiresCoupon() {
		return this.requiresCoupon;
	}

	public void setRequiresCoupon(Boolean requiresCoupon) {
		this.requiresCoupon = requiresCoupon;
	}

	protected DateTime startDate;

	public DateTime getStartDate() {
		return this.startDate;
	}

	public void setStartDate(DateTime startDate) {
		this.startDate = startDate;
	}

	protected List<CustomerSegment> customerSegments;
	public List<CustomerSegment> getCustomerSegments() {
		return this.customerSegments;
	}
	public void setCustomerSegments(List<CustomerSegment> customerSegments) {
		this.customerSegments = customerSegments;
	}

	protected List<CategoryDiscountCondition> excludedCategories;
	public List<CategoryDiscountCondition> getExcludedCategories() {
		return this.excludedCategories;
	}
	public void setExcludedCategories(List<CategoryDiscountCondition> excludedCategories) {
		this.excludedCategories = excludedCategories;
	}

	protected List<ProductDiscountCondition> excludedProducts;
	public List<ProductDiscountCondition> getExcludedProducts() {
		return this.excludedProducts;
	}
	public void setExcludedProducts(List<ProductDiscountCondition> excludedProducts) {
		this.excludedProducts = excludedProducts;
	}

	protected List<CategoryDiscountCondition> includedCategories;
	public List<CategoryDiscountCondition> getIncludedCategories() {
		return this.includedCategories;
	}
	public void setIncludedCategories(List<CategoryDiscountCondition> includedCategories) {
		this.includedCategories = includedCategories;
	}

	protected List<ProductDiscountCondition> includedProducts;
	public List<ProductDiscountCondition> getIncludedProducts() {
		return this.includedProducts;
	}
	public void setIncludedProducts(List<ProductDiscountCondition> includedProducts) {
		this.includedProducts = includedProducts;
	}

}
