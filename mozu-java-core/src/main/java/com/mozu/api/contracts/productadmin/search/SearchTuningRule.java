/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.productadmin.search;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.core.AuditInfo;
import com.mozu.api.contracts.productadmin.search.SearchTuningRuleFilter;

/**
 *	Mozu.ProductAdmin.Contracts.Search.SearchTuningRule ApiType DOCUMENT_HERE
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class SearchTuningRule implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Specifies whether the search results tuning rule is active.
	 */
	protected  Boolean active;

	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	/**
	 * The date that the search tuning rule is no longer active.
	 */
	protected  DateTime activeEndDate;

	public DateTime getActiveEndDate() {
		return this.activeEndDate;
	}

	public void setActiveEndDate(DateTime activeEndDate) {
		this.activeEndDate = activeEndDate;
	}

	/**
	 * The date the search tuning rule starts being active.
	 */
	protected  DateTime activeStartDate;

	public DateTime getActiveStartDate() {
		return this.activeStartDate;
	}

	public void setActiveStartDate(DateTime activeStartDate) {
		this.activeStartDate = activeStartDate;
	}

	/**
	 * A list of product codes that you wish to block from appearing on a search result, or on a specific category page. Use the filters field to specify a category page.
	 */
	protected List<String> blockedProductCodes;
	public List<String> getBlockedProductCodes() {
		return this.blockedProductCodes;
	}
	public void setBlockedProductCodes(List<String> blockedProductCodes) {
		this.blockedProductCodes = blockedProductCodes;
	}

	/**
	 * A list of product codes that you wish to explicitly boost using the search tuning rule.  The order that you list products in defines the order that they appear in a search result, or category page.
	 */
	protected List<String> boostedProductCodes;
	public List<String> getBoostedProductCodes() {
		return this.boostedProductCodes;
	}
	public void setBoostedProductCodes(List<String> boostedProductCodes) {
		this.boostedProductCodes = boostedProductCodes;
	}

	/**
	 * Indicates if the object is default. This indicator is used for product variations and site search settings. If true, the value/object is the default option.
	 */
	protected  Boolean isDefault;

	public Boolean getIsDefault() {
		return this.isDefault;
	}

	public void setIsDefault(Boolean isDefault) {
		this.isDefault = isDefault;
	}

	/**
	 * The keywords that trigger the search tuning rule. These are specific keywords that shoppers search for.
	 */
	protected List<String> keywords;
	public List<String> getKeywords() {
		return this.keywords;
	}
	public void setKeywords(List<String> keywords) {
		this.keywords = keywords;
	}

	/**
	 * The unique identifier of the search tuning rule.
	 */
	protected  String searchTuningRuleCode;

	public String getSearchTuningRuleCode() {
		return this.searchTuningRuleCode;
	}

	public void setSearchTuningRuleCode(String searchTuningRuleCode) {
		this.searchTuningRuleCode = searchTuningRuleCode;
	}

	/**
	 * The description of the search tuning rule. Use this field for further identification purposes.
	 */
	protected  String searchTuningRuleDescription;

	public String getSearchTuningRuleDescription() {
		return this.searchTuningRuleDescription;
	}

	public void setSearchTuningRuleDescription(String searchTuningRuleDescription) {
		this.searchTuningRuleDescription = searchTuningRuleDescription;
	}

	/**
	 * The name of the search tuning rule. Use this field for further identification purposes.
	 */
	protected  String searchTuningRuleName;

	public String getSearchTuningRuleName() {
		return this.searchTuningRuleName;
	}

	public void setSearchTuningRuleName(String searchTuningRuleName) {
		this.searchTuningRuleName = searchTuningRuleName;
	}

	/**
	 * Unique identifier for the site. This IDÂ is used at all levels of a store, catalog, and tenant to associate objects to a site.
	 */
	protected  Integer siteId;

	public Integer getSiteId() {
		return this.siteId;
	}

	public void setSiteId(Integer siteId) {
		this.siteId = siteId;
	}

	/**
	 * Basic audit info about the object, including date, time, and user account. This data may be captured when creating, updating, and removing data.
	 */
	protected  AuditInfo auditInfo;

	public AuditInfo getAuditInfo() {
		return this.auditInfo;
	}

	public void setAuditInfo(AuditInfo auditInfo) {
		this.auditInfo = auditInfo;
	}

	/**
	 * The filters that limit what the search tuning rule is applied to. Currently, the only supported filters are category pages.For example, you can limit the search tuning rule to only apply when a shopper either navigates to or searches for a specific keyword on a category page.
	 */
	protected List<SearchTuningRuleFilter> filters;
	public List<SearchTuningRuleFilter> getFilters() {
		return this.filters;
	}
	public void setFilters(List<SearchTuningRuleFilter> filters) {
		this.filters = filters;
	}


}
