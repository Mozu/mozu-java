/**
 *     This code was auto-generated by a Codezu.     
 *
 *     Changes to this file may cause incorrect behavior and will be lost if
 *     the code is regenerated.
 */
package com.mozu.api.contracts.commerceruntime.returns;

import java.util.List;
import java.util.HashMap;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import org.joda.time.DateTime;
import java.io.IOException;
import java.lang.ClassNotFoundException;
import com.mozu.api.contracts.commerceruntime.returns.ReturnBundle;
import com.mozu.api.contracts.commerceruntime.orders.OrderNote;
import com.mozu.api.contracts.commerceruntime.products.Product;
import com.mozu.api.contracts.commerceruntime.returns.ReturnReason;

/**
 *	Properties of a previously fulfilled item associated with a return.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class ReturnItem implements Serializable
{
	// Default Serial Version UID
	private static final long serialVersionUID = 1L;

	/**
	 * Specifies whether to exclude product extras when you return a product or bundle. For example, assume the following order items:* Product A (bundle item)* Product B (bundle item)* Product C (bundle item)* Product D (extra on bundle)* Product F (extra on product)If this property is , Products D or F are included when the bundle or Product E are added to a return. If this property is , Products D or F are not included unless added individually.
	 */
	protected  Boolean excludeProductExtras;

	public Boolean getExcludeProductExtras() {
		return this.excludeProductExtras;
	}

	public void setExcludeProductExtras(Boolean excludeProductExtras) {
		this.excludeProductExtras = excludeProductExtras;
	}

	/**
	 * Unique identifier of the source property, such as a catalog, discount, order, or email template.For a product field it will be the name of the field.For a category ID, must be a positive integer not greater than 2000000. By default,  auto-generates a category ID when categories are created. If you want to specify an ID during creation (which preserves category link relationships when migrating tenant data from one sandbox to another), you must also include the  query string in the endpoint. For example, .
	 */
	protected  String id;

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	protected  String orderItemId;

	public String getOrderItemId() {
		return this.orderItemId;
	}

	public void setOrderItemId(String orderItemId) {
		this.orderItemId = orderItemId;
	}

	/**
	 * This is the Option attribute FQN for the item being returned .. typically only when the return item is a product bundle item.
	 */
	protected  String orderItemOptionAttributeFQN;

	public String getOrderItemOptionAttributeFQN() {
		return this.orderItemOptionAttributeFQN;
	}

	public void setOrderItemOptionAttributeFQN(String orderItemOptionAttributeFQN) {
		this.orderItemOptionAttributeFQN = orderItemOptionAttributeFQN;
	}

	/**
	 * The OrderLineId that this ReturnItem is associated with. If order item is present, the orderLineId should be present also.
	 */
	protected  Integer orderLineId;

	public Integer getOrderLineId() {
		return this.orderLineId;
	}

	public void setOrderLineId(Integer orderLineId) {
		this.orderLineId = orderLineId;
	}

	protected  Double productLossAmount;

	public Double getProductLossAmount() {
		return this.productLossAmount;
	}

	public void setProductLossAmount(Double productLossAmount) {
		this.productLossAmount = productLossAmount;
	}

	protected  Double productLossTaxAmount;

	public Double getProductLossTaxAmount() {
		return this.productLossTaxAmount;
	}

	public void setProductLossTaxAmount(Double productLossTaxAmount) {
		this.productLossTaxAmount = productLossTaxAmount;
	}

	protected  Integer quantityReceived;

	public Integer getQuantityReceived() {
		return this.quantityReceived;
	}

	public void setQuantityReceived(Integer quantityReceived) {
		this.quantityReceived = quantityReceived;
	}

	/**
	 * The quantity of the given line item that will be replaced.
	 */
	protected  Integer quantityReplaced;

	public Integer getQuantityReplaced() {
		return this.quantityReplaced;
	}

	public void setQuantityReplaced(Integer quantityReplaced) {
		this.quantityReplaced = quantityReplaced;
	}

	protected  Integer quantityRestockable;

	public Integer getQuantityRestockable() {
		return this.quantityRestockable;
	}

	public void setQuantityRestockable(Integer quantityRestockable) {
		this.quantityRestockable = quantityRestockable;
	}

	protected  Integer quantityShipped;

	public Integer getQuantityShipped() {
		return this.quantityShipped;
	}

	public void setQuantityShipped(Integer quantityShipped) {
		this.quantityShipped = quantityShipped;
	}

	/**
	 * The status that indicates whether the shopper has returned the item. The accepted values are , , or .
	 */
	protected  String receiveStatus;

	public String getReceiveStatus() {
		return this.receiveStatus;
	}

	public void setReceiveStatus(String receiveStatus) {
		this.receiveStatus = receiveStatus;
	}

	/**
	 * The amount of the refund.
	 */
	protected  Double refundAmount;

	public Double getRefundAmount() {
		return this.refundAmount;
	}

	public void setRefundAmount(Double refundAmount) {
		this.refundAmount = refundAmount;
	}

	/**
	 * The status of the refund for the item. The accepted values are  if the shopper only wants a replacement or  if either a partial or full refund is applied to the item.
	 */
	protected  String refundStatus;

	public String getRefundStatus() {
		return this.refundStatus;
	}

	public void setRefundStatus(String refundStatus) {
		this.refundStatus = refundStatus;
	}

	/**
	 * The status of the replacement order for the item. The accepted values are  if there is no replacement order or  if a replacement order exits.
	 */
	protected  String replaceStatus;

	public String getReplaceStatus() {
		return this.replaceStatus;
	}

	public void setReplaceStatus(String replaceStatus) {
		this.replaceStatus = replaceStatus;
	}

	/**
	 * A Boolean that indicates whether the item requires the shopper to return the item.
	 */
	protected  Boolean returnNotRequired;

	public Boolean getReturnNotRequired() {
		return this.returnNotRequired;
	}

	public void setReturnNotRequired(Boolean returnNotRequired) {
		this.returnNotRequired = returnNotRequired;
	}

	/**
	 * The type of the return for the item. Either  or .
	 */
	protected  String returnType;

	public String getReturnType() {
		return this.returnType;
	}

	public void setReturnType(String returnType) {
		this.returnType = returnType;
	}

	protected  Double shippingLossAmount;

	public Double getShippingLossAmount() {
		return this.shippingLossAmount;
	}

	public void setShippingLossAmount(Double shippingLossAmount) {
		this.shippingLossAmount = shippingLossAmount;
	}

	protected  Double shippingLossTaxAmount;

	public Double getShippingLossTaxAmount() {
		return this.shippingLossTaxAmount;
	}

	public void setShippingLossTaxAmount(Double shippingLossTaxAmount) {
		this.shippingLossTaxAmount = shippingLossTaxAmount;
	}

	/**
	 * The total cost without shipping and handling applied.
	 */
	protected  Double totalWithoutWeightedShippingAndHandling;

	public Double getTotalWithoutWeightedShippingAndHandling() {
		return this.totalWithoutWeightedShippingAndHandling;
	}

	public void setTotalWithoutWeightedShippingAndHandling(Double totalWithoutWeightedShippingAndHandling) {
		this.totalWithoutWeightedShippingAndHandling = totalWithoutWeightedShippingAndHandling;
	}

	/**
	 * The total cost with shipping and handling applied.
	 */
	protected  Double totalWithWeightedShippingAndHandling;

	public Double getTotalWithWeightedShippingAndHandling() {
		return this.totalWithWeightedShippingAndHandling;
	}

	public void setTotalWithWeightedShippingAndHandling(Double totalWithWeightedShippingAndHandling) {
		this.totalWithWeightedShippingAndHandling = totalWithWeightedShippingAndHandling;
	}

	/**
	 * Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
	 */
	protected List<ReturnBundle> bundledProducts;
	public List<ReturnBundle> getBundledProducts() {
		return this.bundledProducts;
	}
	public void setBundledProducts(List<ReturnBundle> bundledProducts) {
		this.bundledProducts = bundledProducts;
	}

	protected List<OrderNote> notes;
	public List<OrderNote> getNotes() {
		return this.notes;
	}
	public void setNotes(List<OrderNote> notes) {
		this.notes = notes;
	}

	protected  Product product;

	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	protected List<ReturnReason> reasons;
	public List<ReturnReason> getReasons() {
		return this.reasons;
	}
	public void setReasons(List<ReturnReason> reasons) {
		this.reasons = reasons;
	}


}
